{
	"id": "22c86722eb6580889b5a6ac88748b423",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyToken_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/security/Pausable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n\n// File: contracts/MyToken.sol\n\n\npragma solidity ^0.8.20;\n\n\n\n\n// ERC20 token with specific parameters, burn, mint, and pause functionality\ncontract CustomToken is ERC20, Ownable, Pausable {\n    uint8 private _decimals;\n\n\n    constructor() ERC20(\"Degen\", \"DGN\") Ownable(msg.sender) {\n        _decimals = 18;\n        _mint(msg.sender, 100 * 10 ** uint256(_decimals));\n    }\n\n\n    // Override decimals function to use the custom decimals set before deployment\n    function decimals() public view virtual override returns (uint8) {\n        return _decimals;\n    }\n\n    // Function to mint new tokens, only owner can call\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n\n    // Function to burn tokens from the sender's account\n    function burn(uint256 amount) public {\n        _burn(msg.sender, amount);\n    }\n\n    // Function to burn tokens from a specific account, only owner can call\n    function burnFrom(address account, uint256 amount) public onlyOwner {\n        uint256 currentAllowance = allowance(account, msg.sender);\n        require(currentAllowance >= amount, \"Burn amount exceeds allowance\");\n        _approve(account, msg.sender, currentAllowance - amount);\n        _burn(account, amount);\n    }\n\n    // Function to pause all token transfers, only owner can call\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    // Function to unpause all token transfers, only owner can call\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/MyToken_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken_flattened.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyToken_flattened.sol\":{\"keccak256\":\"0xfaa2e9c5aa280354d967debfbebd05c54f7daedc0f7129cbeb5a040ebfc35067\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b70465f08d2ec2ff24a2bcf62063f040b3cbd40c8457a9e270b2c995966984a\",\"dweb:/ipfs/QmR6o8bYzoPoLc27ZpYeGMXJ7wXdWXwCuyX87usUCNDA72\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"CustomToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyToken_flattened.sol\":27588:28975  contract CustomToken is ERC20, Ownable, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MyToken_flattened.sol\":27674:27820  constructor() ERC20(\"Degen\", \"DGN\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"contracts/MyToken_flattened.sol\":27718:27728  msg.sender */\n  caller\n    /* \"contracts/MyToken_flattened.sol\":12527:12640  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x446567656e000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x44474e0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/MyToken_flattened.sol\":12601:12606  name_ */\n  dup2\n    /* \"contracts/MyToken_flattened.sol\":12593:12598  _name */\n  0x03\n    /* \"contracts/MyToken_flattened.sol\":12593:12606  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"contracts/MyToken_flattened.sol\":12626:12633  symbol_ */\n  dup1\n    /* \"contracts/MyToken_flattened.sol\":12616:12623  _symbol */\n  0x04\n    /* \"contracts/MyToken_flattened.sol\":12616:12633  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"contracts/MyToken_flattened.sol\":12527:12640  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/MyToken_flattened.sol\":23095:23096  0 */\n  0x00\n    /* \"contracts/MyToken_flattened.sol\":23071:23097  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/MyToken_flattened.sol\":23071:23083  initialOwner */\n  dup2\n    /* \"contracts/MyToken_flattened.sol\":23071:23097  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/MyToken_flattened.sol\":23067:23162  if (initialOwner == address(0)) {... */\n  tag_11\n  jumpi\n    /* \"contracts/MyToken_flattened.sol\":23148:23149  0 */\n  0x00\n    /* \"contracts/MyToken_flattened.sol\":23120:23151  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/MyToken_flattened.sol\":23067:23162  if (initialOwner == address(0)) {... */\ntag_11:\n    /* \"contracts/MyToken_flattened.sol\":23171:23203  _transferOwnership(initialOwner) */\n  tag_14\n    /* \"contracts/MyToken_flattened.sol\":23190:23202  initialOwner */\n  dup2\n    /* \"contracts/MyToken_flattened.sol\":23171:23189  _transferOwnership */\n  shl(0x20, tag_15)\n    /* \"contracts/MyToken_flattened.sol\":23171:23203  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"contracts/MyToken_flattened.sol\":23023:23210  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/MyToken_flattened.sol\":25901:25906  false */\n  0x00\n    /* \"contracts/MyToken_flattened.sol\":25891:25898  _paused */\n  0x05\n  0x14\n    /* \"contracts/MyToken_flattened.sol\":25891:25906  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken_flattened.sol\":27752:27754  18 */\n  0x12\n    /* \"contracts/MyToken_flattened.sol\":27740:27749  _decimals */\n  0x05\n  0x15\n    /* \"contracts/MyToken_flattened.sol\":27740:27754  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken_flattened.sol\":27764:27813  _mint(msg.sender, 100 * 10 ** uint256(_decimals)) */\n  tag_18\n    /* \"contracts/MyToken_flattened.sol\":27770:27780  msg.sender */\n  caller\n    /* \"contracts/MyToken_flattened.sol\":27802:27811  _decimals */\n  0x05\n  0x15\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/MyToken_flattened.sol\":27794:27812  uint256(_decimals) */\n  0xff\n  and\n    /* \"contracts/MyToken_flattened.sol\":27788:27790  10 */\n  0x0a\n    /* \"contracts/MyToken_flattened.sol\":27788:27812  10 ** uint256(_decimals) */\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"contracts/MyToken_flattened.sol\":27782:27785  100 */\n  0x64\n    /* \"contracts/MyToken_flattened.sol\":27782:27812  100 * 10 ** uint256(_decimals) */\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"contracts/MyToken_flattened.sol\":27764:27769  _mint */\n  shl(0x20, tag_23)\n    /* \"contracts/MyToken_flattened.sol\":27764:27813  _mint(msg.sender, 100 * 10 ** uint256(_decimals)) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/MyToken_flattened.sol\":27588:28975  contract CustomToken is ERC20, Ownable, Pausable {... */\n  jump(tag_24)\n    /* \"contracts/MyToken_flattened.sol\":24710:24897  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"contracts/MyToken_flattened.sol\":24783:24799  address oldOwner */\n  0x00\n    /* \"contracts/MyToken_flattened.sol\":24802:24808  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/MyToken_flattened.sol\":24783:24808  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/MyToken_flattened.sol\":24827:24835  newOwner */\n  dup2\n    /* \"contracts/MyToken_flattened.sol\":24818:24824  _owner */\n  0x05\n  0x00\n    /* \"contracts/MyToken_flattened.sol\":24818:24835  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken_flattened.sol\":24881:24889  newOwner */\n  dup2\n    /* \"contracts/MyToken_flattened.sol\":24850:24890  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/MyToken_flattened.sol\":24871:24879  oldOwner */\n  dup2\n    /* \"contracts/MyToken_flattened.sol\":24850:24890  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/MyToken_flattened.sol\":24773:24897  {... */\n  pop\n    /* \"contracts/MyToken_flattened.sol\":24710:24897  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/MyToken_flattened.sol\":18384:18592  function _mint(address account, uint256 value) internal {... */\ntag_23:\n    /* \"contracts/MyToken_flattened.sol\":18473:18474  0 */\n  0x00\n    /* \"contracts/MyToken_flattened.sol\":18454:18475  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/MyToken_flattened.sol\":18454:18461  account */\n  dup3\n    /* \"contracts/MyToken_flattened.sol\":18454:18475  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/MyToken_flattened.sol\":18450:18541  if (account == address(0)) {... */\n  tag_27\n  jumpi\n    /* \"contracts/MyToken_flattened.sol\":18527:18528  0 */\n  0x00\n    /* \"contracts/MyToken_flattened.sol\":18498:18530  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_28\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_28:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/MyToken_flattened.sol\":18450:18541  if (account == address(0)) {... */\ntag_27:\n    /* \"contracts/MyToken_flattened.sol\":18550:18585  _update(address(0), account, value) */\n  tag_29\n    /* \"contracts/MyToken_flattened.sol\":18566:18567  0 */\n  0x00\n    /* \"contracts/MyToken_flattened.sol\":18570:18577  account */\n  dup4\n    /* \"contracts/MyToken_flattened.sol\":18579:18584  value */\n  dup4\n    /* \"contracts/MyToken_flattened.sol\":18550:18557  _update */\n  shl(0x20, tag_30)\n    /* \"contracts/MyToken_flattened.sol\":18550:18585  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_29:\n    /* \"contracts/MyToken_flattened.sol\":18384:18592  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MyToken_flattened.sol\":16934:18041  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_30:\n    /* \"contracts/MyToken_flattened.sol\":17039:17040  0 */\n  0x00\n    /* \"contracts/MyToken_flattened.sol\":17023:17041  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/MyToken_flattened.sol\":17023:17027  from */\n  dup4\n    /* \"contracts/MyToken_flattened.sol\":17023:17041  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/MyToken_flattened.sol\":17019:17559  if (from == address(0)) {... */\n  tag_32\n  jumpi\n    /* \"contracts/MyToken_flattened.sol\":17175:17180  value */\n  dup1\n    /* \"contracts/MyToken_flattened.sol\":17159:17171  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/MyToken_flattened.sol\":17159:17180  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_33\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken_flattened.sol\":17019:17559  if (from == address(0)) {... */\n  jump(tag_35)\ntag_32:\n    /* \"contracts/MyToken_flattened.sol\":17211:17230  uint256 fromBalance */\n  0x00\n    /* \"contracts/MyToken_flattened.sol\":17233:17242  _balances */\n  0x00\n    /* \"contracts/MyToken_flattened.sol\":17233:17248  _balances[from] */\n  0x00\n    /* \"contracts/MyToken_flattened.sol\":17243:17247  from */\n  dup6\n    /* \"contracts/MyToken_flattened.sol\":17233:17248  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"contracts/MyToken_flattened.sol\":17211:17248  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"contracts/MyToken_flattened.sol\":17280:17285  value */\n  dup2\n    /* \"contracts/MyToken_flattened.sol\":17266:17277  fromBalance */\n  dup2\n    /* \"contracts/MyToken_flattened.sol\":17266:17285  fromBalance < value */\n  lt\n    /* \"contracts/MyToken_flattened.sol\":17262:17377  if (fromBalance < value) {... */\n  iszero\n  tag_36\n  jumpi\n    /* \"contracts/MyToken_flattened.sol\":17337:17341  from */\n  dup4\n    /* \"contracts/MyToken_flattened.sol\":17343:17354  fromBalance */\n  dup2\n    /* \"contracts/MyToken_flattened.sol\":17356:17361  value */\n  dup4\n    /* \"contracts/MyToken_flattened.sol\":17312:17362  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_37\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/MyToken_flattened.sol\":17262:17377  if (fromBalance < value) {... */\ntag_36:\n    /* \"contracts/MyToken_flattened.sol\":17529:17534  value */\n  dup2\n    /* \"contracts/MyToken_flattened.sol\":17515:17526  fromBalance */\n  dup2\n    /* \"contracts/MyToken_flattened.sol\":17515:17534  fromBalance - value */\n  sub\n    /* \"contracts/MyToken_flattened.sol\":17497:17506  _balances */\n  0x00\n    /* \"contracts/MyToken_flattened.sol\":17497:17512  _balances[from] */\n  0x00\n    /* \"contracts/MyToken_flattened.sol\":17507:17511  from */\n  dup7\n    /* \"contracts/MyToken_flattened.sol\":17497:17512  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/MyToken_flattened.sol\":17497:17534  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken_flattened.sol\":17197:17559  {... */\n  pop\n    /* \"contracts/MyToken_flattened.sol\":17019:17559  if (from == address(0)) {... */\ntag_35:\n    /* \"contracts/MyToken_flattened.sol\":17587:17588  0 */\n  0x00\n    /* \"contracts/MyToken_flattened.sol\":17573:17589  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/MyToken_flattened.sol\":17573:17575  to */\n  dup3\n    /* \"contracts/MyToken_flattened.sol\":17573:17589  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/MyToken_flattened.sol\":17569:17994  if (to == address(0)) {... */\n  tag_39\n  jumpi\n    /* \"contracts/MyToken_flattened.sol\":17752:17757  value */\n  dup1\n    /* \"contracts/MyToken_flattened.sol\":17736:17748  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/MyToken_flattened.sol\":17736:17757  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken_flattened.sol\":17569:17994  if (to == address(0)) {... */\n  jump(tag_40)\ntag_39:\n    /* \"contracts/MyToken_flattened.sol\":17964:17969  value */\n  dup1\n    /* \"contracts/MyToken_flattened.sol\":17947:17956  _balances */\n  0x00\n    /* \"contracts/MyToken_flattened.sol\":17947:17960  _balances[to] */\n  0x00\n    /* \"contracts/MyToken_flattened.sol\":17957:17959  to */\n  dup5\n    /* \"contracts/MyToken_flattened.sol\":17947:17960  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/MyToken_flattened.sol\":17947:17969  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken_flattened.sol\":17569:17994  if (to == address(0)) {... */\ntag_40:\n    /* \"contracts/MyToken_flattened.sol\":18024:18026  to */\n  dup2\n    /* \"contracts/MyToken_flattened.sol\":18009:18034  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/MyToken_flattened.sol\":18018:18022  from */\n  dup4\n    /* \"contracts/MyToken_flattened.sol\":18009:18034  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/MyToken_flattened.sol\":18028:18033  value */\n  dup4\n    /* \"contracts/MyToken_flattened.sol\":18009:18034  Transfer(from, to, value) */\n  mload(0x40)\n  tag_41\n  swap2\n  swap1\n  tag_42\n  jump\t// in\ntag_41:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/MyToken_flattened.sol\":16934:18041  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_43:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_44:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_45:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_46:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_76\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_76:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_77\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_78\n  tag_45\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":714:798   */\ntag_77:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_47:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_48:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_49:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_50:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_83\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_49\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1429:1468   */\n  tag_84\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_49\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_51:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_52:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_53:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_88\n    /* \"#utility.yul\":1818:1852   */\n  tag_89\n    /* \"#utility.yul\":1827:1851   */\n  tag_90\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_51\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":1818:1852   */\n  tag_52\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":1800:1853   */\n  tag_51\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_54:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_55:\n    /* \"#utility.yul\":2056:2095   */\n  tag_93\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_53\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":2117:2208   */\n  tag_94\n    /* \"#utility.yul\":2166:2207   */\n  tag_95\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_54\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_50\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_56:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2280:2288   */\n  swap1\n  pop\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_57:\n    /* \"#utility.yul\":2377:2409   */\n  tag_98\n  tag_56\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2418:2483   */\n  tag_99\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_55\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_58:\n    /* \"#utility.yul\":2555:2675   */\ntag_101:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_104\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_57\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_101)\ntag_103:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_59:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_107\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_47\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":2906:2935   */\n  tag_108\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_48\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_109:\n    /* \"#utility.yul\":3133:3213   */\n  tag_110\n    /* \"#utility.yul\":3189:3211   */\n  tag_111\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_48\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_58\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_106:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_60:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_61:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_114\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_60\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_62:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_116\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_61\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_8:\n    /* \"#utility.yul\":3950:3987   */\n  tag_118\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_43\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_120\n  tag_44\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":4038:4094   */\ntag_119:\n    /* \"#utility.yul\":4118:4156   */\n  tag_121\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_46\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":4203:4270   */\n  tag_122\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_59\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_124\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_125:\n    /* \"#utility.yul\":5144:5211   */\n  tag_126\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_62\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_123)\n    /* \"#utility.yul\":4365:4983   */\ntag_124:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_127\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_47\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_128:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_128)\ntag_130:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_132\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_61\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_131:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_123:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_63:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_64:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_135\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_63\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_65:\n    /* \"#utility.yul\":5555:5579   */\n  tag_137\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_64\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_13:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_139\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_65\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5820:6000   */\ntag_66:\n    /* \"#utility.yul\":5868:5945   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5865:5866   */\n  0x00\n    /* \"#utility.yul\":5858:5946   */\n  mstore\n    /* \"#utility.yul\":5965:5969   */\n  0x11\n    /* \"#utility.yul\":5962:5963   */\n  0x04\n    /* \"#utility.yul\":5955:5970   */\n  mstore\n    /* \"#utility.yul\":5989:5993   */\n  0x24\n    /* \"#utility.yul\":5986:5987   */\n  0x00\n    /* \"#utility.yul\":5979:5994   */\n  revert\n    /* \"#utility.yul\":6006:6108   */\ntag_67:\n    /* \"#utility.yul\":6048:6056   */\n  0x00\n    /* \"#utility.yul\":6095:6100   */\n  dup2\n    /* \"#utility.yul\":6092:6093   */\n  0x01\n    /* \"#utility.yul\":6088:6101   */\n  shr\n    /* \"#utility.yul\":6067:6101   */\n  swap1\n  pop\n    /* \"#utility.yul\":6006:6108   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6114:6962   */\ntag_68:\n    /* \"#utility.yul\":6175:6180   */\n  0x00\n    /* \"#utility.yul\":6182:6186   */\n  0x00\n    /* \"#utility.yul\":6206:6212   */\n  dup3\n    /* \"#utility.yul\":6197:6212   */\n  swap2\n  pop\n    /* \"#utility.yul\":6230:6235   */\n  dup4\n    /* \"#utility.yul\":6221:6235   */\n  swap1\n  pop\n    /* \"#utility.yul\":6244:6956   */\ntag_143:\n    /* \"#utility.yul\":6265:6266   */\n  0x01\n    /* \"#utility.yul\":6255:6263   */\n  dup6\n    /* \"#utility.yul\":6252:6267   */\n  gt\n    /* \"#utility.yul\":6244:6956   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":6360:6364   */\n  dup1\n    /* \"#utility.yul\":6355:6358   */\n  dup7\n    /* \"#utility.yul\":6351:6365   */\n  div\n    /* \"#utility.yul\":6345:6349   */\n  dup2\n    /* \"#utility.yul\":6342:6366   */\n  gt\n    /* \"#utility.yul\":6339:6389   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":6369:6387   */\n  tag_147\n  tag_66\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":6339:6389   */\ntag_146:\n    /* \"#utility.yul\":6419:6420   */\n  0x01\n    /* \"#utility.yul\":6409:6417   */\n  dup6\n    /* \"#utility.yul\":6405:6421   */\n  and\n    /* \"#utility.yul\":6402:6853   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":6834:6838   */\n  dup1\n    /* \"#utility.yul\":6827:6832   */\n  dup3\n    /* \"#utility.yul\":6823:6839   */\n  mul\n    /* \"#utility.yul\":6814:6839   */\n  swap2\n  pop\n    /* \"#utility.yul\":6402:6853   */\ntag_148:\n    /* \"#utility.yul\":6884:6888   */\n  dup1\n    /* \"#utility.yul\":6878:6882   */\n  dup2\n    /* \"#utility.yul\":6874:6889   */\n  mul\n    /* \"#utility.yul\":6866:6889   */\n  swap1\n  pop\n    /* \"#utility.yul\":6914:6946   */\n  tag_149\n    /* \"#utility.yul\":6937:6945   */\n  dup6\n    /* \"#utility.yul\":6914:6946   */\n  tag_67\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":6902:6946   */\n  swap5\n  pop\n    /* \"#utility.yul\":6244:6956   */\n  jump(tag_143)\ntag_145:\n    /* \"#utility.yul\":6114:6962   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6968:8041   */\ntag_69:\n    /* \"#utility.yul\":7022:7027   */\n  0x00\n    /* \"#utility.yul\":7213:7221   */\n  dup3\n    /* \"#utility.yul\":7203:7243   */\n  tag_151\n  jumpi\n    /* \"#utility.yul\":7234:7235   */\n  0x01\n    /* \"#utility.yul\":7225:7235   */\n  swap1\n  pop\n    /* \"#utility.yul\":7236:7241   */\n  jump(tag_150)\n    /* \"#utility.yul\":7203:7243   */\ntag_151:\n    /* \"#utility.yul\":7262:7266   */\n  dup2\n    /* \"#utility.yul\":7252:7288   */\n  tag_152\n  jumpi\n    /* \"#utility.yul\":7279:7280   */\n  0x00\n    /* \"#utility.yul\":7270:7280   */\n  swap1\n  pop\n    /* \"#utility.yul\":7281:7286   */\n  jump(tag_150)\n    /* \"#utility.yul\":7252:7288   */\ntag_152:\n    /* \"#utility.yul\":7348:7352   */\n  dup2\n    /* \"#utility.yul\":7396:7397   */\n  0x01\n    /* \"#utility.yul\":7391:7418   */\n  dup2\n  eq\n  tag_154\n  jumpi\n    /* \"#utility.yul\":7432:7433   */\n  0x02\n    /* \"#utility.yul\":7427:7618   */\n  dup2\n  eq\n  tag_155\n  jumpi\n    /* \"#utility.yul\":7341:7618   */\n  jump(tag_153)\n    /* \"#utility.yul\":7391:7418   */\ntag_154:\n    /* \"#utility.yul\":7409:7410   */\n  0x01\n    /* \"#utility.yul\":7400:7410   */\n  swap2\n  pop\n    /* \"#utility.yul\":7411:7416   */\n  pop\n  jump(tag_150)\n    /* \"#utility.yul\":7427:7618   */\ntag_155:\n    /* \"#utility.yul\":7472:7475   */\n  0xff\n    /* \"#utility.yul\":7462:7470   */\n  dup5\n    /* \"#utility.yul\":7459:7476   */\n  gt\n    /* \"#utility.yul\":7456:7499   */\n  iszero\n  tag_156\n  jumpi\n    /* \"#utility.yul\":7479:7497   */\n  tag_157\n  tag_66\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":7456:7499   */\ntag_156:\n    /* \"#utility.yul\":7528:7536   */\n  dup4\n    /* \"#utility.yul\":7525:7526   */\n  0x02\n    /* \"#utility.yul\":7521:7537   */\n  exp\n    /* \"#utility.yul\":7512:7537   */\n  swap2\n  pop\n    /* \"#utility.yul\":7563:7566   */\n  dup5\n    /* \"#utility.yul\":7556:7561   */\n  dup3\n    /* \"#utility.yul\":7553:7567   */\n  gt\n    /* \"#utility.yul\":7550:7590   */\n  iszero\n  tag_158\n  jumpi\n    /* \"#utility.yul\":7570:7588   */\n  tag_159\n  tag_66\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":7550:7590   */\ntag_158:\n    /* \"#utility.yul\":7603:7608   */\n  pop\n  jump(tag_150)\n    /* \"#utility.yul\":7341:7618   */\ntag_153:\n  pop\n    /* \"#utility.yul\":7727:7729   */\n  0x20\n    /* \"#utility.yul\":7717:7725   */\n  dup4\n    /* \"#utility.yul\":7714:7730   */\n  lt\n    /* \"#utility.yul\":7708:7711   */\n  0x0133\n    /* \"#utility.yul\":7702:7706   */\n  dup4\n    /* \"#utility.yul\":7699:7712   */\n  lt\n    /* \"#utility.yul\":7695:7731   */\n  and\n    /* \"#utility.yul\":7677:7679   */\n  0x4e\n    /* \"#utility.yul\":7667:7675   */\n  dup5\n    /* \"#utility.yul\":7664:7680   */\n  lt\n    /* \"#utility.yul\":7659:7661   */\n  0x0b\n    /* \"#utility.yul\":7653:7657   */\n  dup5\n    /* \"#utility.yul\":7650:7662   */\n  lt\n    /* \"#utility.yul\":7646:7681   */\n  and\n    /* \"#utility.yul\":7630:7741   */\n  or\n    /* \"#utility.yul\":7627:7873   */\n  iszero\n  tag_160\n  jumpi\n    /* \"#utility.yul\":7783:7791   */\n  dup3\n    /* \"#utility.yul\":7777:7781   */\n  dup3\n    /* \"#utility.yul\":7773:7792   */\n  exp\n    /* \"#utility.yul\":7764:7792   */\n  swap1\n  pop\n    /* \"#utility.yul\":7818:7821   */\n  dup4\n    /* \"#utility.yul\":7811:7816   */\n  dup2\n    /* \"#utility.yul\":7808:7822   */\n  gt\n    /* \"#utility.yul\":7805:7845   */\n  iszero\n  tag_161\n  jumpi\n    /* \"#utility.yul\":7825:7843   */\n  tag_162\n  tag_66\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":7805:7845   */\ntag_161:\n    /* \"#utility.yul\":7858:7863   */\n  jump(tag_150)\n    /* \"#utility.yul\":7627:7873   */\ntag_160:\n    /* \"#utility.yul\":7898:7940   */\n  tag_163\n    /* \"#utility.yul\":7936:7939   */\n  dup5\n    /* \"#utility.yul\":7926:7934   */\n  dup5\n    /* \"#utility.yul\":7920:7924   */\n  dup5\n    /* \"#utility.yul\":7917:7918   */\n  0x01\n    /* \"#utility.yul\":7898:7940   */\n  tag_68\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":7883:7940   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":7972:7976   */\n  dup2\n    /* \"#utility.yul\":7967:7970   */\n  dup5\n    /* \"#utility.yul\":7963:7977   */\n  div\n    /* \"#utility.yul\":7956:7961   */\n  dup2\n    /* \"#utility.yul\":7953:7978   */\n  gt\n    /* \"#utility.yul\":7950:8001   */\n  iszero\n  tag_164\n  jumpi\n    /* \"#utility.yul\":7981:7999   */\n  tag_165\n  tag_66\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":7950:8001   */\ntag_164:\n    /* \"#utility.yul\":8030:8034   */\n  dup2\n    /* \"#utility.yul\":8023:8028   */\n  dup2\n    /* \"#utility.yul\":8019:8035   */\n  mul\n    /* \"#utility.yul\":8010:8035   */\n  swap1\n  pop\n    /* \"#utility.yul\":6968:8041   */\ntag_150:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8047:8332   */\ntag_20:\n    /* \"#utility.yul\":8107:8112   */\n  0x00\n    /* \"#utility.yul\":8131:8154   */\n  tag_167\n    /* \"#utility.yul\":8149:8153   */\n  dup3\n    /* \"#utility.yul\":8131:8154   */\n  tag_51\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":8123:8154   */\n  swap2\n  pop\n    /* \"#utility.yul\":8175:8202   */\n  tag_168\n    /* \"#utility.yul\":8193:8201   */\n  dup4\n    /* \"#utility.yul\":8175:8202   */\n  tag_51\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":8163:8202   */\n  swap3\n  pop\n    /* \"#utility.yul\":8221:8325   */\n  tag_169\n    /* \"#utility.yul\":8258:8324   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8248:8256   */\n  dup5\n    /* \"#utility.yul\":8242:8246   */\n  dup5\n    /* \"#utility.yul\":8221:8325   */\n  tag_69\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":8212:8325   */\n  swap1\n  pop\n    /* \"#utility.yul\":8047:8332   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8338:8748   */\ntag_22:\n    /* \"#utility.yul\":8378:8385   */\n  0x00\n    /* \"#utility.yul\":8401:8421   */\n  tag_171\n    /* \"#utility.yul\":8419:8420   */\n  dup3\n    /* \"#utility.yul\":8401:8421   */\n  tag_51\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":8396:8421   */\n  swap2\n  pop\n    /* \"#utility.yul\":8435:8455   */\n  tag_172\n    /* \"#utility.yul\":8453:8454   */\n  dup4\n    /* \"#utility.yul\":8435:8455   */\n  tag_51\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":8430:8455   */\n  swap3\n  pop\n    /* \"#utility.yul\":8490:8491   */\n  dup3\n    /* \"#utility.yul\":8487:8488   */\n  dup3\n    /* \"#utility.yul\":8483:8492   */\n  mul\n    /* \"#utility.yul\":8512:8542   */\n  tag_173\n    /* \"#utility.yul\":8530:8541   */\n  dup2\n    /* \"#utility.yul\":8512:8542   */\n  tag_51\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":8501:8542   */\n  swap2\n  pop\n    /* \"#utility.yul\":8691:8692   */\n  dup3\n    /* \"#utility.yul\":8682:8689   */\n  dup3\n    /* \"#utility.yul\":8678:8693   */\n  div\n    /* \"#utility.yul\":8675:8676   */\n  dup5\n    /* \"#utility.yul\":8672:8694   */\n  eq\n    /* \"#utility.yul\":8652:8653   */\n  dup4\n    /* \"#utility.yul\":8645:8654   */\n  iszero\n    /* \"#utility.yul\":8625:8708   */\n  or\n    /* \"#utility.yul\":8602:8741   */\n  tag_174\n  jumpi\n    /* \"#utility.yul\":8721:8739   */\n  tag_175\n  tag_66\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":8602:8741   */\ntag_174:\n    /* \"#utility.yul\":8386:8748   */\n  pop\n    /* \"#utility.yul\":8338:8748   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8754:8945   */\ntag_34:\n    /* \"#utility.yul\":8794:8797   */\n  0x00\n    /* \"#utility.yul\":8813:8833   */\n  tag_177\n    /* \"#utility.yul\":8831:8832   */\n  dup3\n    /* \"#utility.yul\":8813:8833   */\n  tag_51\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":8808:8833   */\n  swap2\n  pop\n    /* \"#utility.yul\":8847:8867   */\n  tag_178\n    /* \"#utility.yul\":8865:8866   */\n  dup4\n    /* \"#utility.yul\":8847:8867   */\n  tag_51\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":8842:8867   */\n  swap3\n  pop\n    /* \"#utility.yul\":8890:8891   */\n  dup3\n    /* \"#utility.yul\":8887:8888   */\n  dup3\n    /* \"#utility.yul\":8883:8892   */\n  add\n    /* \"#utility.yul\":8876:8892   */\n  swap1\n  pop\n    /* \"#utility.yul\":8911:8914   */\n  dup1\n    /* \"#utility.yul\":8908:8909   */\n  dup3\n    /* \"#utility.yul\":8905:8915   */\n  gt\n    /* \"#utility.yul\":8902:8938   */\n  iszero\n  tag_179\n  jumpi\n    /* \"#utility.yul\":8918:8936   */\n  tag_180\n  tag_66\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":8902:8938   */\ntag_179:\n    /* \"#utility.yul\":8754:8945   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8951:9069   */\ntag_70:\n    /* \"#utility.yul\":9038:9062   */\n  tag_182\n    /* \"#utility.yul\":9056:9061   */\n  dup2\n    /* \"#utility.yul\":9038:9062   */\n  tag_51\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":9033:9036   */\n  dup3\n    /* \"#utility.yul\":9026:9063   */\n  mstore\n    /* \"#utility.yul\":8951:9069   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9075:9517   */\ntag_38:\n    /* \"#utility.yul\":9224:9228   */\n  0x00\n    /* \"#utility.yul\":9262:9264   */\n  0x60\n    /* \"#utility.yul\":9251:9260   */\n  dup3\n    /* \"#utility.yul\":9247:9265   */\n  add\n    /* \"#utility.yul\":9239:9265   */\n  swap1\n  pop\n    /* \"#utility.yul\":9275:9346   */\n  tag_184\n    /* \"#utility.yul\":9343:9344   */\n  0x00\n    /* \"#utility.yul\":9332:9341   */\n  dup4\n    /* \"#utility.yul\":9328:9345   */\n  add\n    /* \"#utility.yul\":9319:9325   */\n  dup7\n    /* \"#utility.yul\":9275:9346   */\n  tag_65\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":9356:9428   */\n  tag_185\n    /* \"#utility.yul\":9424:9426   */\n  0x20\n    /* \"#utility.yul\":9413:9422   */\n  dup4\n    /* \"#utility.yul\":9409:9427   */\n  add\n    /* \"#utility.yul\":9400:9406   */\n  dup6\n    /* \"#utility.yul\":9356:9428   */\n  tag_70\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":9438:9510   */\n  tag_186\n    /* \"#utility.yul\":9506:9508   */\n  0x40\n    /* \"#utility.yul\":9495:9504   */\n  dup4\n    /* \"#utility.yul\":9491:9509   */\n  add\n    /* \"#utility.yul\":9482:9488   */\n  dup5\n    /* \"#utility.yul\":9438:9510   */\n  tag_70\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":9075:9517   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9523:9745   */\ntag_42:\n    /* \"#utility.yul\":9616:9620   */\n  0x00\n    /* \"#utility.yul\":9654:9656   */\n  0x20\n    /* \"#utility.yul\":9643:9652   */\n  dup3\n    /* \"#utility.yul\":9639:9657   */\n  add\n    /* \"#utility.yul\":9631:9657   */\n  swap1\n  pop\n    /* \"#utility.yul\":9667:9738   */\n  tag_188\n    /* \"#utility.yul\":9735:9736   */\n  0x00\n    /* \"#utility.yul\":9724:9733   */\n  dup4\n    /* \"#utility.yul\":9720:9737   */\n  add\n    /* \"#utility.yul\":9711:9717   */\n  dup5\n    /* \"#utility.yul\":9667:9738   */\n  tag_70\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":9523:9745   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MyToken_flattened.sol\":27588:28975  contract CustomToken is ERC20, Ownable, Pausable {... */\ntag_24:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyToken_flattened.sol\":27588:28975  contract CustomToken is ERC20, Ownable, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x8da5cb5b\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x313ce567\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/MyToken_flattened.sol\":12705:12794  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken_flattened.sol\":14924:15110  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken_flattened.sol\":13775:13872  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken_flattened.sol\":15702:15946  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken_flattened.sol\":27910:28008  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken_flattened.sol\":28910:28973  function unpause() public onlyOwner {... */\n    tag_8:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/MyToken_flattened.sol\":28070:28163  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_9:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/MyToken_flattened.sol\":28226:28305  function burn(uint256 amount) public {... */\n    tag_10:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/MyToken_flattened.sol\":26510:26594  function paused() public view virtual returns (bool) {... */\n    tag_11:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken_flattened.sol\":13930:14046  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken_flattened.sol\":24091:24192  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      stop\n        /* \"contracts/MyToken_flattened.sol\":28387:28705  function burnFrom(address account, uint256 amount) public onlyOwner {... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      stop\n        /* \"contracts/MyToken_flattened.sol\":28777:28836  function pause() public onlyOwner {... */\n    tag_15:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      stop\n        /* \"contracts/MyToken_flattened.sol\":23436:23521  function owner() public view virtual returns (address) {... */\n    tag_16:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken_flattened.sol\":12907:13000  function symbol() public view virtual returns (string memory) {... */\n    tag_17:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken_flattened.sol\":14241:14419  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_18:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken_flattened.sol\":14477:14617  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken_flattened.sol\":24341:24556  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      stop\n        /* \"contracts/MyToken_flattened.sol\":12705:12794  function name() public view virtual returns (string memory) {... */\n    tag_25:\n        /* \"contracts/MyToken_flattened.sol\":12750:12763  string memory */\n      0x60\n        /* \"contracts/MyToken_flattened.sol\":12782:12787  _name */\n      0x03\n        /* \"contracts/MyToken_flattened.sol\":12775:12787  return _name */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_92\n      jump\t// in\n    tag_93:\n      dup1\n      iszero\n      tag_94\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_95\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_94)\n    tag_95:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_96:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_96\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/MyToken_flattened.sol\":12705:12794  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":14924:15110  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_31:\n        /* \"contracts/MyToken_flattened.sol\":14997:15001  bool */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":15013:15026  address owner */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":15029:15041  _msgSender() */\n      tag_98\n        /* \"contracts/MyToken_flattened.sol\":15029:15039  _msgSender */\n      tag_99\n        /* \"contracts/MyToken_flattened.sol\":15029:15041  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"contracts/MyToken_flattened.sol\":15013:15041  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/MyToken_flattened.sol\":15051:15082  _approve(owner, spender, value) */\n      tag_100\n        /* \"contracts/MyToken_flattened.sol\":15060:15065  owner */\n      dup2\n        /* \"contracts/MyToken_flattened.sol\":15067:15074  spender */\n      dup6\n        /* \"contracts/MyToken_flattened.sol\":15076:15081  value */\n      dup6\n        /* \"contracts/MyToken_flattened.sol\":15051:15059  _approve */\n      tag_101\n        /* \"contracts/MyToken_flattened.sol\":15051:15082  _approve(owner, spender, value) */\n      jump\t// in\n    tag_100:\n        /* \"contracts/MyToken_flattened.sol\":15099:15103  true */\n      0x01\n        /* \"contracts/MyToken_flattened.sol\":15092:15103  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/MyToken_flattened.sol\":14924:15110  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":13775:13872  function totalSupply() public view virtual returns (uint256) {... */\n    tag_35:\n        /* \"contracts/MyToken_flattened.sol\":13827:13834  uint256 */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":13853:13865  _totalSupply */\n      sload(0x02)\n        /* \"contracts/MyToken_flattened.sol\":13846:13865  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/MyToken_flattened.sol\":13775:13872  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":15702:15946  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_41:\n        /* \"contracts/MyToken_flattened.sol\":15789:15793  bool */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":15805:15820  address spender */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":15823:15835  _msgSender() */\n      tag_104\n        /* \"contracts/MyToken_flattened.sol\":15823:15833  _msgSender */\n      tag_99\n        /* \"contracts/MyToken_flattened.sol\":15823:15835  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"contracts/MyToken_flattened.sol\":15805:15835  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/MyToken_flattened.sol\":15845:15882  _spendAllowance(from, spender, value) */\n      tag_105\n        /* \"contracts/MyToken_flattened.sol\":15861:15865  from */\n      dup6\n        /* \"contracts/MyToken_flattened.sol\":15867:15874  spender */\n      dup3\n        /* \"contracts/MyToken_flattened.sol\":15876:15881  value */\n      dup6\n        /* \"contracts/MyToken_flattened.sol\":15845:15860  _spendAllowance */\n      tag_106\n        /* \"contracts/MyToken_flattened.sol\":15845:15882  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_105:\n        /* \"contracts/MyToken_flattened.sol\":15892:15918  _transfer(from, to, value) */\n      tag_107\n        /* \"contracts/MyToken_flattened.sol\":15902:15906  from */\n      dup6\n        /* \"contracts/MyToken_flattened.sol\":15908:15910  to */\n      dup6\n        /* \"contracts/MyToken_flattened.sol\":15912:15917  value */\n      dup6\n        /* \"contracts/MyToken_flattened.sol\":15892:15901  _transfer */\n      tag_108\n        /* \"contracts/MyToken_flattened.sol\":15892:15918  _transfer(from, to, value) */\n      jump\t// in\n    tag_107:\n        /* \"contracts/MyToken_flattened.sol\":15935:15939  true */\n      0x01\n        /* \"contracts/MyToken_flattened.sol\":15928:15939  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/MyToken_flattened.sol\":15702:15946  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":27910:28008  function decimals() public view virtual override returns (uint8) {... */\n    tag_44:\n        /* \"contracts/MyToken_flattened.sol\":27968:27973  uint8 */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":27992:28001  _decimals */\n      0x05\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MyToken_flattened.sol\":27985:28001  return _decimals */\n      swap1\n      pop\n        /* \"contracts/MyToken_flattened.sol\":27910:28008  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":28910:28973  function unpause() public onlyOwner {... */\n    tag_48:\n        /* \"contracts/MyToken_flattened.sol\":23329:23342  _checkOwner() */\n      tag_111\n        /* \"contracts/MyToken_flattened.sol\":23329:23340  _checkOwner */\n      tag_112\n        /* \"contracts/MyToken_flattened.sol\":23329:23342  _checkOwner() */\n      jump\t// in\n    tag_111:\n        /* \"contracts/MyToken_flattened.sol\":28956:28966  _unpause() */\n      tag_114\n        /* \"contracts/MyToken_flattened.sol\":28956:28964  _unpause */\n      tag_115\n        /* \"contracts/MyToken_flattened.sol\":28956:28966  _unpause() */\n      jump\t// in\n    tag_114:\n        /* \"contracts/MyToken_flattened.sol\":28910:28973  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":28070:28163  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_51:\n        /* \"contracts/MyToken_flattened.sol\":23329:23342  _checkOwner() */\n      tag_117\n        /* \"contracts/MyToken_flattened.sol\":23329:23340  _checkOwner */\n      tag_112\n        /* \"contracts/MyToken_flattened.sol\":23329:23342  _checkOwner() */\n      jump\t// in\n    tag_117:\n        /* \"contracts/MyToken_flattened.sol\":28139:28156  _mint(to, amount) */\n      tag_119\n        /* \"contracts/MyToken_flattened.sol\":28145:28147  to */\n      dup3\n        /* \"contracts/MyToken_flattened.sol\":28149:28155  amount */\n      dup3\n        /* \"contracts/MyToken_flattened.sol\":28139:28144  _mint */\n      tag_120\n        /* \"contracts/MyToken_flattened.sol\":28139:28156  _mint(to, amount) */\n      jump\t// in\n    tag_119:\n        /* \"contracts/MyToken_flattened.sol\":28070:28163  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":28226:28305  function burn(uint256 amount) public {... */\n    tag_55:\n        /* \"contracts/MyToken_flattened.sol\":28273:28298  _burn(msg.sender, amount) */\n      tag_122\n        /* \"contracts/MyToken_flattened.sol\":28279:28289  msg.sender */\n      caller\n        /* \"contracts/MyToken_flattened.sol\":28291:28297  amount */\n      dup3\n        /* \"contracts/MyToken_flattened.sol\":28273:28278  _burn */\n      tag_123\n        /* \"contracts/MyToken_flattened.sol\":28273:28298  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_122:\n        /* \"contracts/MyToken_flattened.sol\":28226:28305  function burn(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":26510:26594  function paused() public view virtual returns (bool) {... */\n    tag_57:\n        /* \"contracts/MyToken_flattened.sol\":26557:26561  bool */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":26580:26587  _paused */\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MyToken_flattened.sol\":26573:26587  return _paused */\n      swap1\n      pop\n        /* \"contracts/MyToken_flattened.sol\":26510:26594  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":13930:14046  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_62:\n        /* \"contracts/MyToken_flattened.sol\":13995:14002  uint256 */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":14021:14030  _balances */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":14021:14039  _balances[account] */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":14031:14038  account */\n      dup4\n        /* \"contracts/MyToken_flattened.sol\":14021:14039  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/MyToken_flattened.sol\":14014:14039  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/MyToken_flattened.sol\":13930:14046  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":24091:24192  function renounceOwnership() public virtual onlyOwner {... */\n    tag_65:\n        /* \"contracts/MyToken_flattened.sol\":23329:23342  _checkOwner() */\n      tag_127\n        /* \"contracts/MyToken_flattened.sol\":23329:23340  _checkOwner */\n      tag_112\n        /* \"contracts/MyToken_flattened.sol\":23329:23342  _checkOwner() */\n      jump\t// in\n    tag_127:\n        /* \"contracts/MyToken_flattened.sol\":24155:24185  _transferOwnership(address(0)) */\n      tag_129\n        /* \"contracts/MyToken_flattened.sol\":24182:24183  0 */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":24155:24173  _transferOwnership */\n      tag_130\n        /* \"contracts/MyToken_flattened.sol\":24155:24185  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/MyToken_flattened.sol\":24091:24192  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":28387:28705  function burnFrom(address account, uint256 amount) public onlyOwner {... */\n    tag_68:\n        /* \"contracts/MyToken_flattened.sol\":23329:23342  _checkOwner() */\n      tag_132\n        /* \"contracts/MyToken_flattened.sol\":23329:23340  _checkOwner */\n      tag_112\n        /* \"contracts/MyToken_flattened.sol\":23329:23342  _checkOwner() */\n      jump\t// in\n    tag_132:\n        /* \"contracts/MyToken_flattened.sol\":28465:28489  uint256 currentAllowance */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":28492:28522  allowance(account, msg.sender) */\n      tag_134\n        /* \"contracts/MyToken_flattened.sol\":28502:28509  account */\n      dup4\n        /* \"contracts/MyToken_flattened.sol\":28511:28521  msg.sender */\n      caller\n        /* \"contracts/MyToken_flattened.sol\":28492:28501  allowance */\n      tag_85\n        /* \"contracts/MyToken_flattened.sol\":28492:28522  allowance(account, msg.sender) */\n      jump\t// in\n    tag_134:\n        /* \"contracts/MyToken_flattened.sol\":28465:28522  uint256 currentAllowance = allowance(account, msg.sender) */\n      swap1\n      pop\n        /* \"contracts/MyToken_flattened.sol\":28560:28566  amount */\n      dup2\n        /* \"contracts/MyToken_flattened.sol\":28540:28556  currentAllowance */\n      dup2\n        /* \"contracts/MyToken_flattened.sol\":28540:28566  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"contracts/MyToken_flattened.sol\":28532:28600  require(currentAllowance >= amount, \"Burn amount exceeds allowance\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"contracts/MyToken_flattened.sol\":28610:28666  _approve(account, msg.sender, currentAllowance - amount) */\n      tag_138\n        /* \"contracts/MyToken_flattened.sol\":28619:28626  account */\n      dup4\n        /* \"contracts/MyToken_flattened.sol\":28628:28638  msg.sender */\n      caller\n        /* \"contracts/MyToken_flattened.sol\":28659:28665  amount */\n      dup5\n        /* \"contracts/MyToken_flattened.sol\":28640:28656  currentAllowance */\n      dup5\n        /* \"contracts/MyToken_flattened.sol\":28640:28665  currentAllowance - amount */\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"contracts/MyToken_flattened.sol\":28610:28618  _approve */\n      tag_101\n        /* \"contracts/MyToken_flattened.sol\":28610:28666  _approve(account, msg.sender, currentAllowance - amount) */\n      jump\t// in\n    tag_138:\n        /* \"contracts/MyToken_flattened.sol\":28676:28698  _burn(account, amount) */\n      tag_141\n        /* \"contracts/MyToken_flattened.sol\":28682:28689  account */\n      dup4\n        /* \"contracts/MyToken_flattened.sol\":28691:28697  amount */\n      dup4\n        /* \"contracts/MyToken_flattened.sol\":28676:28681  _burn */\n      tag_123\n        /* \"contracts/MyToken_flattened.sol\":28676:28698  _burn(account, amount) */\n      jump\t// in\n    tag_141:\n        /* \"contracts/MyToken_flattened.sol\":28455:28705  {... */\n      pop\n        /* \"contracts/MyToken_flattened.sol\":28387:28705  function burnFrom(address account, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":28777:28836  function pause() public onlyOwner {... */\n    tag_70:\n        /* \"contracts/MyToken_flattened.sol\":23329:23342  _checkOwner() */\n      tag_143\n        /* \"contracts/MyToken_flattened.sol\":23329:23340  _checkOwner */\n      tag_112\n        /* \"contracts/MyToken_flattened.sol\":23329:23342  _checkOwner() */\n      jump\t// in\n    tag_143:\n        /* \"contracts/MyToken_flattened.sol\":28821:28829  _pause() */\n      tag_145\n        /* \"contracts/MyToken_flattened.sol\":28821:28827  _pause */\n      tag_146\n        /* \"contracts/MyToken_flattened.sol\":28821:28829  _pause() */\n      jump\t// in\n    tag_145:\n        /* \"contracts/MyToken_flattened.sol\":28777:28836  function pause() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":23436:23521  function owner() public view virtual returns (address) {... */\n    tag_72:\n        /* \"contracts/MyToken_flattened.sol\":23482:23489  address */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":23508:23514  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken_flattened.sol\":23501:23514  return _owner */\n      swap1\n      pop\n        /* \"contracts/MyToken_flattened.sol\":23436:23521  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":12907:13000  function symbol() public view virtual returns (string memory) {... */\n    tag_76:\n        /* \"contracts/MyToken_flattened.sol\":12954:12967  string memory */\n      0x60\n        /* \"contracts/MyToken_flattened.sol\":12986:12993  _symbol */\n      0x04\n        /* \"contracts/MyToken_flattened.sol\":12979:12993  return _symbol */\n      dup1\n      sload\n      tag_149\n      swap1\n      tag_92\n      jump\t// in\n    tag_149:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_150\n      swap1\n      tag_92\n      jump\t// in\n    tag_150:\n      dup1\n      iszero\n      tag_151\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_152\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_151)\n    tag_152:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_153:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_153\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/MyToken_flattened.sol\":12907:13000  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":14241:14419  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_80:\n        /* \"contracts/MyToken_flattened.sol\":14310:14314  bool */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":14326:14339  address owner */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":14342:14354  _msgSender() */\n      tag_155\n        /* \"contracts/MyToken_flattened.sol\":14342:14352  _msgSender */\n      tag_99\n        /* \"contracts/MyToken_flattened.sol\":14342:14354  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"contracts/MyToken_flattened.sol\":14326:14354  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/MyToken_flattened.sol\":14364:14391  _transfer(owner, to, value) */\n      tag_156\n        /* \"contracts/MyToken_flattened.sol\":14374:14379  owner */\n      dup2\n        /* \"contracts/MyToken_flattened.sol\":14381:14383  to */\n      dup6\n        /* \"contracts/MyToken_flattened.sol\":14385:14390  value */\n      dup6\n        /* \"contracts/MyToken_flattened.sol\":14364:14373  _transfer */\n      tag_108\n        /* \"contracts/MyToken_flattened.sol\":14364:14391  _transfer(owner, to, value) */\n      jump\t// in\n    tag_156:\n        /* \"contracts/MyToken_flattened.sol\":14408:14412  true */\n      0x01\n        /* \"contracts/MyToken_flattened.sol\":14401:14412  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/MyToken_flattened.sol\":14241:14419  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":14477:14617  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_85:\n        /* \"contracts/MyToken_flattened.sol\":14557:14564  uint256 */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":14583:14594  _allowances */\n      0x01\n        /* \"contracts/MyToken_flattened.sol\":14583:14601  _allowances[owner] */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":14595:14600  owner */\n      dup5\n        /* \"contracts/MyToken_flattened.sol\":14583:14601  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken_flattened.sol\":14583:14610  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":14602:14609  spender */\n      dup4\n        /* \"contracts/MyToken_flattened.sol\":14583:14610  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/MyToken_flattened.sol\":14576:14610  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/MyToken_flattened.sol\":14477:14617  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":24341:24556  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_89:\n        /* \"contracts/MyToken_flattened.sol\":23329:23342  _checkOwner() */\n      tag_159\n        /* \"contracts/MyToken_flattened.sol\":23329:23340  _checkOwner */\n      tag_112\n        /* \"contracts/MyToken_flattened.sol\":23329:23342  _checkOwner() */\n      jump\t// in\n    tag_159:\n        /* \"contracts/MyToken_flattened.sol\":24445:24446  0 */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":24425:24447  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken_flattened.sol\":24425:24433  newOwner */\n      dup2\n        /* \"contracts/MyToken_flattened.sol\":24425:24447  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/MyToken_flattened.sol\":24421:24512  if (newOwner == address(0)) {... */\n      tag_161\n      jumpi\n        /* \"contracts/MyToken_flattened.sol\":24498:24499  0 */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":24470:24501  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyToken_flattened.sol\":24421:24512  if (newOwner == address(0)) {... */\n    tag_161:\n        /* \"contracts/MyToken_flattened.sol\":24521:24549  _transferOwnership(newOwner) */\n      tag_163\n        /* \"contracts/MyToken_flattened.sol\":24540:24548  newOwner */\n      dup2\n        /* \"contracts/MyToken_flattened.sol\":24521:24539  _transferOwnership */\n      tag_130\n        /* \"contracts/MyToken_flattened.sol\":24521:24549  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_163:\n        /* \"contracts/MyToken_flattened.sol\":24341:24556  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":4234:4330  function _msgSender() internal view virtual returns (address) {... */\n    tag_99:\n        /* \"contracts/MyToken_flattened.sol\":4287:4294  address */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":4313:4323  msg.sender */\n      caller\n        /* \"contracts/MyToken_flattened.sol\":4306:4323  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/MyToken_flattened.sol\":4234:4330  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":19652:19780  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_101:\n        /* \"contracts/MyToken_flattened.sol\":19736:19773  _approve(owner, spender, value, true) */\n      tag_166\n        /* \"contracts/MyToken_flattened.sol\":19745:19750  owner */\n      dup4\n        /* \"contracts/MyToken_flattened.sol\":19752:19759  spender */\n      dup4\n        /* \"contracts/MyToken_flattened.sol\":19761:19766  value */\n      dup4\n        /* \"contracts/MyToken_flattened.sol\":19768:19772  true */\n      0x01\n        /* \"contracts/MyToken_flattened.sol\":19736:19744  _approve */\n      tag_167\n        /* \"contracts/MyToken_flattened.sol\":19736:19773  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_166:\n        /* \"contracts/MyToken_flattened.sol\":19652:19780  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":21341:21818  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_106:\n        /* \"contracts/MyToken_flattened.sol\":21440:21464  uint256 currentAllowance */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":21467:21492  allowance(owner, spender) */\n      tag_169\n        /* \"contracts/MyToken_flattened.sol\":21477:21482  owner */\n      dup5\n        /* \"contracts/MyToken_flattened.sol\":21484:21491  spender */\n      dup5\n        /* \"contracts/MyToken_flattened.sol\":21467:21476  allowance */\n      tag_85\n        /* \"contracts/MyToken_flattened.sol\":21467:21492  allowance(owner, spender) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/MyToken_flattened.sol\":21440:21492  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/MyToken_flattened.sol\":21526:21543  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/MyToken_flattened.sol\":21506:21522  currentAllowance */\n      dup2\n        /* \"contracts/MyToken_flattened.sol\":21506:21543  currentAllowance != type(uint256).max */\n      eq\n        /* \"contracts/MyToken_flattened.sol\":21502:21812  if (currentAllowance != type(uint256).max) {... */\n      tag_170\n      jumpi\n        /* \"contracts/MyToken_flattened.sol\":21582:21587  value */\n      dup2\n        /* \"contracts/MyToken_flattened.sol\":21563:21579  currentAllowance */\n      dup2\n        /* \"contracts/MyToken_flattened.sol\":21563:21587  currentAllowance < value */\n      lt\n        /* \"contracts/MyToken_flattened.sol\":21559:21689  if (currentAllowance < value) {... */\n      iszero\n      tag_171\n      jumpi\n        /* \"contracts/MyToken_flattened.sol\":21641:21648  spender */\n      dup3\n        /* \"contracts/MyToken_flattened.sol\":21650:21666  currentAllowance */\n      dup2\n        /* \"contracts/MyToken_flattened.sol\":21668:21673  value */\n      dup4\n        /* \"contracts/MyToken_flattened.sol\":21614:21674  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyToken_flattened.sol\":21559:21689  if (currentAllowance < value) {... */\n    tag_171:\n        /* \"contracts/MyToken_flattened.sol\":21730:21787  _approve(owner, spender, currentAllowance - value, false) */\n      tag_174\n        /* \"contracts/MyToken_flattened.sol\":21739:21744  owner */\n      dup5\n        /* \"contracts/MyToken_flattened.sol\":21746:21753  spender */\n      dup5\n        /* \"contracts/MyToken_flattened.sol\":21774:21779  value */\n      dup5\n        /* \"contracts/MyToken_flattened.sol\":21755:21771  currentAllowance */\n      dup5\n        /* \"contracts/MyToken_flattened.sol\":21755:21779  currentAllowance - value */\n      sub\n        /* \"contracts/MyToken_flattened.sol\":21781:21786  false */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":21730:21738  _approve */\n      tag_167\n        /* \"contracts/MyToken_flattened.sol\":21730:21787  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_174:\n        /* \"contracts/MyToken_flattened.sol\":21502:21812  if (currentAllowance != type(uint256).max) {... */\n    tag_170:\n        /* \"contracts/MyToken_flattened.sol\":21430:21818  {... */\n      pop\n        /* \"contracts/MyToken_flattened.sol\":21341:21818  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":16319:16619  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_108:\n        /* \"contracts/MyToken_flattened.sol\":16418:16419  0 */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":16402:16420  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken_flattened.sol\":16402:16406  from */\n      dup4\n        /* \"contracts/MyToken_flattened.sol\":16402:16420  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/MyToken_flattened.sol\":16398:16484  if (from == address(0)) {... */\n      tag_176\n      jumpi\n        /* \"contracts/MyToken_flattened.sol\":16470:16471  0 */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":16443:16473  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyToken_flattened.sol\":16398:16484  if (from == address(0)) {... */\n    tag_176:\n        /* \"contracts/MyToken_flattened.sol\":16511:16512  0 */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":16497:16513  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken_flattened.sol\":16497:16499  to */\n      dup3\n        /* \"contracts/MyToken_flattened.sol\":16497:16513  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/MyToken_flattened.sol\":16493:16579  if (to == address(0)) {... */\n      tag_178\n      jumpi\n        /* \"contracts/MyToken_flattened.sol\":16565:16566  0 */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":16536:16568  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyToken_flattened.sol\":16493:16579  if (to == address(0)) {... */\n    tag_178:\n        /* \"contracts/MyToken_flattened.sol\":16588:16612  _update(from, to, value) */\n      tag_180\n        /* \"contracts/MyToken_flattened.sol\":16596:16600  from */\n      dup4\n        /* \"contracts/MyToken_flattened.sol\":16602:16604  to */\n      dup4\n        /* \"contracts/MyToken_flattened.sol\":16606:16611  value */\n      dup4\n        /* \"contracts/MyToken_flattened.sol\":16588:16595  _update */\n      tag_181\n        /* \"contracts/MyToken_flattened.sol\":16588:16612  _update(from, to, value) */\n      jump\t// in\n    tag_180:\n        /* \"contracts/MyToken_flattened.sol\":16319:16619  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":23594:23756  function _checkOwner() internal view virtual {... */\n    tag_112:\n        /* \"contracts/MyToken_flattened.sol\":23664:23676  _msgSender() */\n      tag_183\n        /* \"contracts/MyToken_flattened.sol\":23664:23674  _msgSender */\n      tag_99\n        /* \"contracts/MyToken_flattened.sol\":23664:23676  _msgSender() */\n      jump\t// in\n    tag_183:\n        /* \"contracts/MyToken_flattened.sol\":23653:23676  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken_flattened.sol\":23653:23660  owner() */\n      tag_184\n        /* \"contracts/MyToken_flattened.sol\":23653:23658  owner */\n      tag_72\n        /* \"contracts/MyToken_flattened.sol\":23653:23660  owner() */\n      jump\t// in\n    tag_184:\n        /* \"contracts/MyToken_flattened.sol\":23653:23676  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyToken_flattened.sol\":23649:23750  if (owner() != _msgSender()) {... */\n      tag_185\n      jumpi\n        /* \"contracts/MyToken_flattened.sol\":23726:23738  _msgSender() */\n      tag_186\n        /* \"contracts/MyToken_flattened.sol\":23726:23736  _msgSender */\n      tag_99\n        /* \"contracts/MyToken_flattened.sol\":23726:23738  _msgSender() */\n      jump\t// in\n    tag_186:\n        /* \"contracts/MyToken_flattened.sol\":23699:23739  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyToken_flattened.sol\":23649:23750  if (owner() != _msgSender()) {... */\n    tag_185:\n        /* \"contracts/MyToken_flattened.sol\":23594:23756  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":27328:27445  function _unpause() internal virtual whenPaused {... */\n    tag_115:\n        /* \"contracts/MyToken_flattened.sol\":26381:26397  _requirePaused() */\n      tag_189\n        /* \"contracts/MyToken_flattened.sol\":26381:26395  _requirePaused */\n      tag_190\n        /* \"contracts/MyToken_flattened.sol\":26381:26397  _requirePaused() */\n      jump\t// in\n    tag_189:\n        /* \"contracts/MyToken_flattened.sol\":27396:27401  false */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":27386:27393  _paused */\n      0x05\n      0x14\n        /* \"contracts/MyToken_flattened.sol\":27386:27401  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken_flattened.sol\":27416:27438  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"contracts/MyToken_flattened.sol\":27425:27437  _msgSender() */\n      tag_192\n        /* \"contracts/MyToken_flattened.sol\":27425:27435  _msgSender */\n      tag_99\n        /* \"contracts/MyToken_flattened.sol\":27425:27437  _msgSender() */\n      jump\t// in\n    tag_192:\n        /* \"contracts/MyToken_flattened.sol\":27416:27438  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_193\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/MyToken_flattened.sol\":27328:27445  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":18384:18592  function _mint(address account, uint256 value) internal {... */\n    tag_120:\n        /* \"contracts/MyToken_flattened.sol\":18473:18474  0 */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":18454:18475  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken_flattened.sol\":18454:18461  account */\n      dup3\n        /* \"contracts/MyToken_flattened.sol\":18454:18475  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/MyToken_flattened.sol\":18450:18541  if (account == address(0)) {... */\n      tag_195\n      jumpi\n        /* \"contracts/MyToken_flattened.sol\":18527:18528  0 */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":18498:18530  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyToken_flattened.sol\":18450:18541  if (account == address(0)) {... */\n    tag_195:\n        /* \"contracts/MyToken_flattened.sol\":18550:18585  _update(address(0), account, value) */\n      tag_197\n        /* \"contracts/MyToken_flattened.sol\":18566:18567  0 */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":18570:18577  account */\n      dup4\n        /* \"contracts/MyToken_flattened.sol\":18579:18584  value */\n      dup4\n        /* \"contracts/MyToken_flattened.sol\":18550:18557  _update */\n      tag_181\n        /* \"contracts/MyToken_flattened.sol\":18550:18585  _update(address(0), account, value) */\n      jump\t// in\n    tag_197:\n        /* \"contracts/MyToken_flattened.sol\":18384:18592  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":18910:19116  function _burn(address account, uint256 value) internal {... */\n    tag_123:\n        /* \"contracts/MyToken_flattened.sol\":18999:19000  0 */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":18980:19001  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken_flattened.sol\":18980:18987  account */\n      dup3\n        /* \"contracts/MyToken_flattened.sol\":18980:19001  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/MyToken_flattened.sol\":18976:19065  if (account == address(0)) {... */\n      tag_199\n      jumpi\n        /* \"contracts/MyToken_flattened.sol\":19051:19052  0 */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":19024:19054  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyToken_flattened.sol\":18976:19065  if (account == address(0)) {... */\n    tag_199:\n        /* \"contracts/MyToken_flattened.sol\":19074:19109  _update(account, address(0), value) */\n      tag_201\n        /* \"contracts/MyToken_flattened.sol\":19082:19089  account */\n      dup3\n        /* \"contracts/MyToken_flattened.sol\":19099:19100  0 */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":19103:19108  value */\n      dup4\n        /* \"contracts/MyToken_flattened.sol\":19074:19081  _update */\n      tag_181\n        /* \"contracts/MyToken_flattened.sol\":19074:19109  _update(account, address(0), value) */\n      jump\t// in\n    tag_201:\n        /* \"contracts/MyToken_flattened.sol\":18910:19116  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":24710:24897  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_130:\n        /* \"contracts/MyToken_flattened.sol\":24783:24799  address oldOwner */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":24802:24808  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken_flattened.sol\":24783:24808  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/MyToken_flattened.sol\":24827:24835  newOwner */\n      dup2\n        /* \"contracts/MyToken_flattened.sol\":24818:24824  _owner */\n      0x05\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":24818:24835  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken_flattened.sol\":24881:24889  newOwner */\n      dup2\n        /* \"contracts/MyToken_flattened.sol\":24850:24890  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken_flattened.sol\":24871:24879  oldOwner */\n      dup2\n        /* \"contracts/MyToken_flattened.sol\":24850:24890  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/MyToken_flattened.sol\":24773:24897  {... */\n      pop\n        /* \"contracts/MyToken_flattened.sol\":24710:24897  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":27081:27196  function _pause() internal virtual whenNotPaused {... */\n    tag_146:\n        /* \"contracts/MyToken_flattened.sol\":26134:26153  _requireNotPaused() */\n      tag_204\n        /* \"contracts/MyToken_flattened.sol\":26134:26151  _requireNotPaused */\n      tag_205\n        /* \"contracts/MyToken_flattened.sol\":26134:26153  _requireNotPaused() */\n      jump\t// in\n    tag_204:\n        /* \"contracts/MyToken_flattened.sol\":27150:27154  true */\n      0x01\n        /* \"contracts/MyToken_flattened.sol\":27140:27147  _paused */\n      0x05\n      0x14\n        /* \"contracts/MyToken_flattened.sol\":27140:27154  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken_flattened.sol\":27169:27189  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"contracts/MyToken_flattened.sol\":27176:27188  _msgSender() */\n      tag_207\n        /* \"contracts/MyToken_flattened.sol\":27176:27186  _msgSender */\n      tag_99\n        /* \"contracts/MyToken_flattened.sol\":27176:27188  _msgSender() */\n      jump\t// in\n    tag_207:\n        /* \"contracts/MyToken_flattened.sol\":27169:27189  Paused(_msgSender()) */\n      mload(0x40)\n      tag_208\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/MyToken_flattened.sol\":27081:27196  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":20627:21059  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_167:\n        /* \"contracts/MyToken_flattened.sol\":20756:20757  0 */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":20739:20758  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken_flattened.sol\":20739:20744  owner */\n      dup5\n        /* \"contracts/MyToken_flattened.sol\":20739:20758  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/MyToken_flattened.sol\":20735:20824  if (owner == address(0)) {... */\n      tag_210\n      jumpi\n        /* \"contracts/MyToken_flattened.sol\":20810:20811  0 */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":20781:20813  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyToken_flattened.sol\":20735:20824  if (owner == address(0)) {... */\n    tag_210:\n        /* \"contracts/MyToken_flattened.sol\":20856:20857  0 */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":20837:20858  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken_flattened.sol\":20837:20844  spender */\n      dup4\n        /* \"contracts/MyToken_flattened.sol\":20837:20858  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/MyToken_flattened.sol\":20833:20923  if (spender == address(0)) {... */\n      tag_212\n      jumpi\n        /* \"contracts/MyToken_flattened.sol\":20909:20910  0 */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":20881:20912  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyToken_flattened.sol\":20833:20923  if (spender == address(0)) {... */\n    tag_212:\n        /* \"contracts/MyToken_flattened.sol\":20962:20967  value */\n      dup2\n        /* \"contracts/MyToken_flattened.sol\":20932:20943  _allowances */\n      0x01\n        /* \"contracts/MyToken_flattened.sol\":20932:20950  _allowances[owner] */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":20944:20949  owner */\n      dup7\n        /* \"contracts/MyToken_flattened.sol\":20932:20950  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken_flattened.sol\":20932:20959  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":20951:20958  spender */\n      dup6\n        /* \"contracts/MyToken_flattened.sol\":20932:20959  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken_flattened.sol\":20932:20967  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken_flattened.sol\":20981:20990  emitEvent */\n      dup1\n        /* \"contracts/MyToken_flattened.sol\":20977:21053  if (emitEvent) {... */\n      iszero\n      tag_214\n      jumpi\n        /* \"contracts/MyToken_flattened.sol\":21027:21034  spender */\n      dup3\n        /* \"contracts/MyToken_flattened.sol\":21011:21042  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken_flattened.sol\":21020:21025  owner */\n      dup5\n        /* \"contracts/MyToken_flattened.sol\":21011:21042  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/MyToken_flattened.sol\":21036:21041  value */\n      dup5\n        /* \"contracts/MyToken_flattened.sol\":21011:21042  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_215\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/MyToken_flattened.sol\":20977:21053  if (emitEvent) {... */\n    tag_214:\n        /* \"contracts/MyToken_flattened.sol\":20627:21059  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":16934:18041  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_181:\n        /* \"contracts/MyToken_flattened.sol\":17039:17040  0 */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":17023:17041  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken_flattened.sol\":17023:17027  from */\n      dup4\n        /* \"contracts/MyToken_flattened.sol\":17023:17041  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/MyToken_flattened.sol\":17019:17559  if (from == address(0)) {... */\n      tag_217\n      jumpi\n        /* \"contracts/MyToken_flattened.sol\":17175:17180  value */\n      dup1\n        /* \"contracts/MyToken_flattened.sol\":17159:17171  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":17159:17180  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_218\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken_flattened.sol\":17019:17559  if (from == address(0)) {... */\n      jump(tag_220)\n    tag_217:\n        /* \"contracts/MyToken_flattened.sol\":17211:17230  uint256 fromBalance */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":17233:17242  _balances */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":17233:17248  _balances[from] */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":17243:17247  from */\n      dup6\n        /* \"contracts/MyToken_flattened.sol\":17233:17248  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/MyToken_flattened.sol\":17211:17248  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"contracts/MyToken_flattened.sol\":17280:17285  value */\n      dup2\n        /* \"contracts/MyToken_flattened.sol\":17266:17277  fromBalance */\n      dup2\n        /* \"contracts/MyToken_flattened.sol\":17266:17285  fromBalance < value */\n      lt\n        /* \"contracts/MyToken_flattened.sol\":17262:17377  if (fromBalance < value) {... */\n      iszero\n      tag_221\n      jumpi\n        /* \"contracts/MyToken_flattened.sol\":17337:17341  from */\n      dup4\n        /* \"contracts/MyToken_flattened.sol\":17343:17354  fromBalance */\n      dup2\n        /* \"contracts/MyToken_flattened.sol\":17356:17361  value */\n      dup4\n        /* \"contracts/MyToken_flattened.sol\":17312:17362  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyToken_flattened.sol\":17262:17377  if (fromBalance < value) {... */\n    tag_221:\n        /* \"contracts/MyToken_flattened.sol\":17529:17534  value */\n      dup2\n        /* \"contracts/MyToken_flattened.sol\":17515:17526  fromBalance */\n      dup2\n        /* \"contracts/MyToken_flattened.sol\":17515:17534  fromBalance - value */\n      sub\n        /* \"contracts/MyToken_flattened.sol\":17497:17506  _balances */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":17497:17512  _balances[from] */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":17507:17511  from */\n      dup7\n        /* \"contracts/MyToken_flattened.sol\":17497:17512  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken_flattened.sol\":17497:17534  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken_flattened.sol\":17197:17559  {... */\n      pop\n        /* \"contracts/MyToken_flattened.sol\":17019:17559  if (from == address(0)) {... */\n    tag_220:\n        /* \"contracts/MyToken_flattened.sol\":17587:17588  0 */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":17573:17589  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken_flattened.sol\":17573:17575  to */\n      dup3\n        /* \"contracts/MyToken_flattened.sol\":17573:17589  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/MyToken_flattened.sol\":17569:17994  if (to == address(0)) {... */\n      tag_223\n      jumpi\n        /* \"contracts/MyToken_flattened.sol\":17752:17757  value */\n      dup1\n        /* \"contracts/MyToken_flattened.sol\":17736:17748  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":17736:17757  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken_flattened.sol\":17569:17994  if (to == address(0)) {... */\n      jump(tag_224)\n    tag_223:\n        /* \"contracts/MyToken_flattened.sol\":17964:17969  value */\n      dup1\n        /* \"contracts/MyToken_flattened.sol\":17947:17956  _balances */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":17947:17960  _balances[to] */\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":17957:17959  to */\n      dup5\n        /* \"contracts/MyToken_flattened.sol\":17947:17960  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/MyToken_flattened.sol\":17947:17969  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken_flattened.sol\":17569:17994  if (to == address(0)) {... */\n    tag_224:\n        /* \"contracts/MyToken_flattened.sol\":18024:18026  to */\n      dup2\n        /* \"contracts/MyToken_flattened.sol\":18009:18034  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken_flattened.sol\":18018:18022  from */\n      dup4\n        /* \"contracts/MyToken_flattened.sol\":18009:18034  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/MyToken_flattened.sol\":18028:18033  value */\n      dup4\n        /* \"contracts/MyToken_flattened.sol\":18009:18034  Transfer(from, to, value) */\n      mload(0x40)\n      tag_225\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/MyToken_flattened.sol\":16934:18041  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":26840:26946  function _requirePaused() internal view virtual {... */\n    tag_190:\n        /* \"contracts/MyToken_flattened.sol\":26906:26914  paused() */\n      tag_227\n        /* \"contracts/MyToken_flattened.sol\":26906:26912  paused */\n      tag_57\n        /* \"contracts/MyToken_flattened.sol\":26906:26914  paused() */\n      jump\t// in\n    tag_227:\n        /* \"contracts/MyToken_flattened.sol\":26898:26939  require(paused(), \"Pausable: not paused\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_228:\n        /* \"contracts/MyToken_flattened.sol\":26840:26946  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/MyToken_flattened.sol\":26662:26768  function _requireNotPaused() internal view virtual {... */\n    tag_205:\n        /* \"contracts/MyToken_flattened.sol\":26732:26740  paused() */\n      tag_232\n        /* \"contracts/MyToken_flattened.sol\":26732:26738  paused */\n      tag_57\n        /* \"contracts/MyToken_flattened.sol\":26732:26740  paused() */\n      jump\t// in\n    tag_232:\n        /* \"contracts/MyToken_flattened.sol\":26731:26740  !paused() */\n      iszero\n        /* \"contracts/MyToken_flattened.sol\":26723:26761  require(!paused(), \"Pausable: paused\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_233:\n        /* \"contracts/MyToken_flattened.sol\":26662:26768  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_236:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_237:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_238:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_239:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_240:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_271\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_236\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":711:782   */\n      tag_272\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_237\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_273\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_238\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":881:910   */\n      tag_274\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_239\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_27:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_276\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_240\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_242:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_244:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_245:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_282\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_244\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_246:\n        /* \"#utility.yul\":1876:1900   */\n      tag_284\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_245\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_285\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_285:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_247:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_287\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_246\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_248:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_249:\n        /* \"#utility.yul\":2232:2256   */\n      tag_290\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_248\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_291\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_291:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_250:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_293\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_249\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_30:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_296\n      tag_242\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":2525:2644   */\n    tag_295:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_297\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_247\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_298\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_250\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_251:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_252:\n        /* \"#utility.yul\":3089:3110   */\n      tag_301\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_251\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_33:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_303\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_252\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_253:\n        /* \"#utility.yul\":3426:3450   */\n      tag_305\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_248\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_37:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_307\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_253\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_40:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_310\n      tag_242\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":3801:3920   */\n    tag_309:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_311\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_247\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_312\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_247\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_313\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_250\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_254:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_255:\n        /* \"#utility.yul\":4491:4513   */\n      tag_316\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_254\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_46:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_318\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_255\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_54:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_321\n      tag_242\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":4822:4941   */\n    tag_320:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_322\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_250\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_61:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_325\n      tag_242\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":5157:5276   */\n    tag_324:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_326\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_247\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5534   */\n    tag_256:\n        /* \"#utility.yul\":5503:5527   */\n      tag_328\n        /* \"#utility.yul\":5521:5526   */\n      dup2\n        /* \"#utility.yul\":5503:5527   */\n      tag_245\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":5498:5501   */\n      dup3\n        /* \"#utility.yul\":5491:5528   */\n      mstore\n        /* \"#utility.yul\":5416:5534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5762   */\n    tag_74:\n        /* \"#utility.yul\":5633:5637   */\n      0x00\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5660:5669   */\n      dup3\n        /* \"#utility.yul\":5656:5674   */\n      add\n        /* \"#utility.yul\":5648:5674   */\n      swap1\n      pop\n        /* \"#utility.yul\":5684:5755   */\n      tag_330\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5741:5750   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5728:5734   */\n      dup5\n        /* \"#utility.yul\":5684:5755   */\n      tag_256\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":5540:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6242   */\n    tag_84:\n        /* \"#utility.yul\":5836:5842   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      0x00\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5980   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":5899:5978   */\n      tag_333\n      tag_242\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":5861:5980   */\n    tag_332:\n        /* \"#utility.yul\":6019:6020   */\n      0x00\n        /* \"#utility.yul\":6044:6097   */\n      tag_334\n        /* \"#utility.yul\":6089:6096   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6069:6078   */\n      dup7\n        /* \"#utility.yul\":6065:6087   */\n      add\n        /* \"#utility.yul\":6044:6097   */\n      tag_247\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":6034:6097   */\n      swap3\n      pop\n        /* \"#utility.yul\":5990:6107   */\n      pop\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6172:6225   */\n      tag_335\n        /* \"#utility.yul\":6217:6224   */\n      dup6\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup7\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_247\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6117:6235   */\n      pop\n        /* \"#utility.yul\":5768:6242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6428   */\n    tag_257:\n        /* \"#utility.yul\":6296:6373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6286:6374   */\n      mstore\n        /* \"#utility.yul\":6393:6397   */\n      0x22\n        /* \"#utility.yul\":6390:6391   */\n      0x04\n        /* \"#utility.yul\":6383:6398   */\n      mstore\n        /* \"#utility.yul\":6417:6421   */\n      0x24\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6407:6422   */\n      revert\n        /* \"#utility.yul\":6434:6754   */\n    tag_92:\n        /* \"#utility.yul\":6478:6484   */\n      0x00\n        /* \"#utility.yul\":6515:6516   */\n      0x02\n        /* \"#utility.yul\":6509:6513   */\n      dup3\n        /* \"#utility.yul\":6505:6517   */\n      div\n        /* \"#utility.yul\":6495:6517   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6563   */\n      0x01\n        /* \"#utility.yul\":6556:6560   */\n      dup3\n        /* \"#utility.yul\":6552:6564   */\n      and\n        /* \"#utility.yul\":6583:6601   */\n      dup1\n        /* \"#utility.yul\":6573:6654   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":6639:6643   */\n      0x7f\n        /* \"#utility.yul\":6631:6637   */\n      dup3\n        /* \"#utility.yul\":6627:6644   */\n      and\n        /* \"#utility.yul\":6617:6644   */\n      swap2\n      pop\n        /* \"#utility.yul\":6573:6654   */\n    tag_338:\n        /* \"#utility.yul\":6701:6703   */\n      0x20\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6690:6704   */\n      lt\n        /* \"#utility.yul\":6670:6688   */\n      dup2\n        /* \"#utility.yul\":6667:6705   */\n      sub\n        /* \"#utility.yul\":6664:6748   */\n      tag_339\n      jumpi\n        /* \"#utility.yul\":6720:6738   */\n      tag_340\n      tag_257\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":6664:6748   */\n    tag_339:\n        /* \"#utility.yul\":6485:6754   */\n      pop\n        /* \"#utility.yul\":6434:6754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6760:6939   */\n    tag_258:\n        /* \"#utility.yul\":6900:6931   */\n      0x4275726e20616d6f756e74206578636565647320616c6c6f77616e6365000000\n        /* \"#utility.yul\":6896:6897   */\n      0x00\n        /* \"#utility.yul\":6888:6894   */\n      dup3\n        /* \"#utility.yul\":6884:6898   */\n      add\n        /* \"#utility.yul\":6877:6932   */\n      mstore\n        /* \"#utility.yul\":6760:6939   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6945:7311   */\n    tag_259:\n        /* \"#utility.yul\":7087:7090   */\n      0x00\n        /* \"#utility.yul\":7108:7175   */\n      tag_343\n        /* \"#utility.yul\":7172:7174   */\n      0x1d\n        /* \"#utility.yul\":7167:7170   */\n      dup4\n        /* \"#utility.yul\":7108:7175   */\n      tag_237\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":7101:7175   */\n      swap2\n      pop\n        /* \"#utility.yul\":7184:7277   */\n      tag_344\n        /* \"#utility.yul\":7273:7276   */\n      dup3\n        /* \"#utility.yul\":7184:7277   */\n      tag_258\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":7302:7304   */\n      0x20\n        /* \"#utility.yul\":7297:7300   */\n      dup3\n        /* \"#utility.yul\":7293:7305   */\n      add\n        /* \"#utility.yul\":7286:7305   */\n      swap1\n      pop\n        /* \"#utility.yul\":6945:7311   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7317:7736   */\n    tag_137:\n        /* \"#utility.yul\":7483:7487   */\n      0x00\n        /* \"#utility.yul\":7521:7523   */\n      0x20\n        /* \"#utility.yul\":7510:7519   */\n      dup3\n        /* \"#utility.yul\":7506:7524   */\n      add\n        /* \"#utility.yul\":7498:7524   */\n      swap1\n      pop\n        /* \"#utility.yul\":7570:7579   */\n      dup2\n        /* \"#utility.yul\":7564:7568   */\n      dup2\n        /* \"#utility.yul\":7560:7580   */\n      sub\n        /* \"#utility.yul\":7556:7557   */\n      0x00\n        /* \"#utility.yul\":7545:7554   */\n      dup4\n        /* \"#utility.yul\":7541:7558   */\n      add\n        /* \"#utility.yul\":7534:7581   */\n      mstore\n        /* \"#utility.yul\":7598:7729   */\n      tag_346\n        /* \"#utility.yul\":7724:7728   */\n      dup2\n        /* \"#utility.yul\":7598:7729   */\n      tag_259\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":7590:7729   */\n      swap1\n      pop\n        /* \"#utility.yul\":7317:7736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7742:7922   */\n    tag_260:\n        /* \"#utility.yul\":7790:7867   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7787:7788   */\n      0x00\n        /* \"#utility.yul\":7780:7868   */\n      mstore\n        /* \"#utility.yul\":7887:7891   */\n      0x11\n        /* \"#utility.yul\":7884:7885   */\n      0x04\n        /* \"#utility.yul\":7877:7892   */\n      mstore\n        /* \"#utility.yul\":7911:7915   */\n      0x24\n        /* \"#utility.yul\":7908:7909   */\n      0x00\n        /* \"#utility.yul\":7901:7916   */\n      revert\n        /* \"#utility.yul\":7928:8122   */\n    tag_140:\n        /* \"#utility.yul\":7968:7972   */\n      0x00\n        /* \"#utility.yul\":7988:8008   */\n      tag_349\n        /* \"#utility.yul\":8006:8007   */\n      dup3\n        /* \"#utility.yul\":7988:8008   */\n      tag_248\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":7983:8008   */\n      swap2\n      pop\n        /* \"#utility.yul\":8022:8042   */\n      tag_350\n        /* \"#utility.yul\":8040:8041   */\n      dup4\n        /* \"#utility.yul\":8022:8042   */\n      tag_248\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":8017:8042   */\n      swap3\n      pop\n        /* \"#utility.yul\":8066:8067   */\n      dup3\n        /* \"#utility.yul\":8063:8064   */\n      dup3\n        /* \"#utility.yul\":8059:8068   */\n      sub\n        /* \"#utility.yul\":8051:8068   */\n      swap1\n      pop\n        /* \"#utility.yul\":8090:8091   */\n      dup2\n        /* \"#utility.yul\":8084:8088   */\n      dup2\n        /* \"#utility.yul\":8081:8092   */\n      gt\n        /* \"#utility.yul\":8078:8115   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":8095:8113   */\n      tag_352\n      tag_260\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":8078:8115   */\n    tag_351:\n        /* \"#utility.yul\":7928:8122   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8128:8570   */\n    tag_173:\n        /* \"#utility.yul\":8277:8281   */\n      0x00\n        /* \"#utility.yul\":8315:8317   */\n      0x60\n        /* \"#utility.yul\":8304:8313   */\n      dup3\n        /* \"#utility.yul\":8300:8318   */\n      add\n        /* \"#utility.yul\":8292:8318   */\n      swap1\n      pop\n        /* \"#utility.yul\":8328:8399   */\n      tag_354\n        /* \"#utility.yul\":8396:8397   */\n      0x00\n        /* \"#utility.yul\":8385:8394   */\n      dup4\n        /* \"#utility.yul\":8381:8398   */\n      add\n        /* \"#utility.yul\":8372:8378   */\n      dup7\n        /* \"#utility.yul\":8328:8399   */\n      tag_256\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":8409:8481   */\n      tag_355\n        /* \"#utility.yul\":8477:8479   */\n      0x20\n        /* \"#utility.yul\":8466:8475   */\n      dup4\n        /* \"#utility.yul\":8462:8480   */\n      add\n        /* \"#utility.yul\":8453:8459   */\n      dup6\n        /* \"#utility.yul\":8409:8481   */\n      tag_253\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":8491:8563   */\n      tag_356\n        /* \"#utility.yul\":8559:8561   */\n      0x40\n        /* \"#utility.yul\":8548:8557   */\n      dup4\n        /* \"#utility.yul\":8544:8562   */\n      add\n        /* \"#utility.yul\":8535:8541   */\n      dup5\n        /* \"#utility.yul\":8491:8563   */\n      tag_253\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":8128:8570   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8576:8767   */\n    tag_219:\n        /* \"#utility.yul\":8616:8619   */\n      0x00\n        /* \"#utility.yul\":8635:8655   */\n      tag_358\n        /* \"#utility.yul\":8653:8654   */\n      dup3\n        /* \"#utility.yul\":8635:8655   */\n      tag_248\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":8630:8655   */\n      swap2\n      pop\n        /* \"#utility.yul\":8669:8689   */\n      tag_359\n        /* \"#utility.yul\":8687:8688   */\n      dup4\n        /* \"#utility.yul\":8669:8689   */\n      tag_248\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":8664:8689   */\n      swap3\n      pop\n        /* \"#utility.yul\":8712:8713   */\n      dup3\n        /* \"#utility.yul\":8709:8710   */\n      dup3\n        /* \"#utility.yul\":8705:8714   */\n      add\n        /* \"#utility.yul\":8698:8714   */\n      swap1\n      pop\n        /* \"#utility.yul\":8733:8736   */\n      dup1\n        /* \"#utility.yul\":8730:8731   */\n      dup3\n        /* \"#utility.yul\":8727:8737   */\n      gt\n        /* \"#utility.yul\":8724:8760   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":8740:8758   */\n      tag_361\n      tag_260\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":8724:8760   */\n    tag_360:\n        /* \"#utility.yul\":8576:8767   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8773:8943   */\n    tag_261:\n        /* \"#utility.yul\":8913:8935   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":8909:8910   */\n      0x00\n        /* \"#utility.yul\":8901:8907   */\n      dup3\n        /* \"#utility.yul\":8897:8911   */\n      add\n        /* \"#utility.yul\":8890:8936   */\n      mstore\n        /* \"#utility.yul\":8773:8943   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8949:9315   */\n    tag_262:\n        /* \"#utility.yul\":9091:9094   */\n      0x00\n        /* \"#utility.yul\":9112:9179   */\n      tag_364\n        /* \"#utility.yul\":9176:9178   */\n      0x14\n        /* \"#utility.yul\":9171:9174   */\n      dup4\n        /* \"#utility.yul\":9112:9179   */\n      tag_237\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":9105:9179   */\n      swap2\n      pop\n        /* \"#utility.yul\":9188:9281   */\n      tag_365\n        /* \"#utility.yul\":9277:9280   */\n      dup3\n        /* \"#utility.yul\":9188:9281   */\n      tag_261\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":9306:9308   */\n      0x20\n        /* \"#utility.yul\":9301:9304   */\n      dup3\n        /* \"#utility.yul\":9297:9309   */\n      add\n        /* \"#utility.yul\":9290:9309   */\n      swap1\n      pop\n        /* \"#utility.yul\":8949:9315   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9321:9740   */\n    tag_230:\n        /* \"#utility.yul\":9487:9491   */\n      0x00\n        /* \"#utility.yul\":9525:9527   */\n      0x20\n        /* \"#utility.yul\":9514:9523   */\n      dup3\n        /* \"#utility.yul\":9510:9528   */\n      add\n        /* \"#utility.yul\":9502:9528   */\n      swap1\n      pop\n        /* \"#utility.yul\":9574:9583   */\n      dup2\n        /* \"#utility.yul\":9568:9572   */\n      dup2\n        /* \"#utility.yul\":9564:9584   */\n      sub\n        /* \"#utility.yul\":9560:9561   */\n      0x00\n        /* \"#utility.yul\":9549:9558   */\n      dup4\n        /* \"#utility.yul\":9545:9562   */\n      add\n        /* \"#utility.yul\":9538:9585   */\n      mstore\n        /* \"#utility.yul\":9602:9733   */\n      tag_367\n        /* \"#utility.yul\":9728:9732   */\n      dup2\n        /* \"#utility.yul\":9602:9733   */\n      tag_262\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":9594:9733   */\n      swap1\n      pop\n        /* \"#utility.yul\":9321:9740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9746:9912   */\n    tag_263:\n        /* \"#utility.yul\":9886:9904   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":9882:9883   */\n      0x00\n        /* \"#utility.yul\":9874:9880   */\n      dup3\n        /* \"#utility.yul\":9870:9884   */\n      add\n        /* \"#utility.yul\":9863:9905   */\n      mstore\n        /* \"#utility.yul\":9746:9912   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9918:10284   */\n    tag_264:\n        /* \"#utility.yul\":10060:10063   */\n      0x00\n        /* \"#utility.yul\":10081:10148   */\n      tag_370\n        /* \"#utility.yul\":10145:10147   */\n      0x10\n        /* \"#utility.yul\":10140:10143   */\n      dup4\n        /* \"#utility.yul\":10081:10148   */\n      tag_237\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":10074:10148   */\n      swap2\n      pop\n        /* \"#utility.yul\":10157:10250   */\n      tag_371\n        /* \"#utility.yul\":10246:10249   */\n      dup3\n        /* \"#utility.yul\":10157:10250   */\n      tag_263\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":10275:10277   */\n      0x20\n        /* \"#utility.yul\":10270:10273   */\n      dup3\n        /* \"#utility.yul\":10266:10278   */\n      add\n        /* \"#utility.yul\":10259:10278   */\n      swap1\n      pop\n        /* \"#utility.yul\":9918:10284   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10290:10709   */\n    tag_235:\n        /* \"#utility.yul\":10456:10460   */\n      0x00\n        /* \"#utility.yul\":10494:10496   */\n      0x20\n        /* \"#utility.yul\":10483:10492   */\n      dup3\n        /* \"#utility.yul\":10479:10497   */\n      add\n        /* \"#utility.yul\":10471:10497   */\n      swap1\n      pop\n        /* \"#utility.yul\":10543:10552   */\n      dup2\n        /* \"#utility.yul\":10537:10541   */\n      dup2\n        /* \"#utility.yul\":10533:10553   */\n      sub\n        /* \"#utility.yul\":10529:10530   */\n      0x00\n        /* \"#utility.yul\":10518:10527   */\n      dup4\n        /* \"#utility.yul\":10514:10531   */\n      add\n        /* \"#utility.yul\":10507:10554   */\n      mstore\n        /* \"#utility.yul\":10571:10702   */\n      tag_373\n        /* \"#utility.yul\":10697:10701   */\n      dup2\n        /* \"#utility.yul\":10571:10702   */\n      tag_264\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":10563:10702   */\n      swap1\n      pop\n        /* \"#utility.yul\":10290:10709   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207cf15792ed0ae03ad45f64b1ee9777b64d2f241b10ea0703e20f900fc17b9a8364736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1061": {
									"entryPoint": null,
									"id": 1061,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_309": {
									"entryPoint": null,
									"id": 309,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_820": {
									"entryPoint": null,
									"id": 820,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_942": {
									"entryPoint": null,
									"id": 942,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_612": {
									"entryPoint": 599,
									"id": 612,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_916": {
									"entryPoint": 404,
									"id": 916,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_579": {
									"entryPoint": 732,
									"id": 579,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2690,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2194,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 2485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2276,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1705,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2137,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1324,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1279,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1462,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1603,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1640,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9748:1",
										"nodeType": "YulBlock",
										"src": "0:9748:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:1",
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nativeSrc": "77:22:1",
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nativeSrc": "87:12:1",
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:1",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:1",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nativeSrc": "140:152:1",
													"nodeType": "YulBlock",
													"src": "140:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:1",
																		"nodeType": "YulLiteral",
																		"src": "157:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:1",
																		"nodeType": "YulLiteral",
																		"src": "160:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:1"
																},
																"nativeSrc": "150:88:1",
																"nodeType": "YulFunctionCall",
																"src": "150:88:1"
															},
															"nativeSrc": "150:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:1",
																		"nodeType": "YulLiteral",
																		"src": "254:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:1",
																		"nodeType": "YulLiteral",
																		"src": "257:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:1"
																},
																"nativeSrc": "247:15:1",
																"nodeType": "YulFunctionCall",
																"src": "247:15:1"
															},
															"nativeSrc": "247:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:1",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:1",
																		"nodeType": "YulLiteral",
																		"src": "281:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:1"
																},
																"nativeSrc": "271:15:1",
																"nodeType": "YulFunctionCall",
																"src": "271:15:1"
															},
															"nativeSrc": "271:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:1"
											},
											{
												"body": {
													"nativeSrc": "326:152:1",
													"nodeType": "YulBlock",
													"src": "326:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:1",
																		"nodeType": "YulLiteral",
																		"src": "343:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:1",
																		"nodeType": "YulLiteral",
																		"src": "346:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:1"
																},
																"nativeSrc": "336:88:1",
																"nodeType": "YulFunctionCall",
																"src": "336:88:1"
															},
															"nativeSrc": "336:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:1",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:1",
																		"nodeType": "YulLiteral",
																		"src": "443:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nativeSrc": "433:15:1",
																"nodeType": "YulFunctionCall",
																"src": "433:15:1"
															},
															"nativeSrc": "433:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:1",
																		"nodeType": "YulLiteral",
																		"src": "464:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:1",
																		"nodeType": "YulLiteral",
																		"src": "467:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:1"
																},
																"nativeSrc": "457:15:1",
																"nodeType": "YulFunctionCall",
																"src": "457:15:1"
															},
															"nativeSrc": "457:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:1"
											},
											{
												"body": {
													"nativeSrc": "535:269:1",
													"nodeType": "YulBlock",
													"src": "535:269:1",
													"statements": [
														{
															"nativeSrc": "545:22:1",
															"nodeType": "YulAssignment",
															"src": "545:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:1",
																		"nodeType": "YulLiteral",
																		"src": "565:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:1"
																},
																"nativeSrc": "555:12:1",
																"nodeType": "YulFunctionCall",
																"src": "555:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:1"
																}
															]
														},
														{
															"nativeSrc": "576:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:1",
																		"nodeType": "YulLiteral",
																		"src": "612:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:1"
																},
																"nativeSrc": "602:12:1",
																"nodeType": "YulFunctionCall",
																"src": "602:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:1",
																	"nodeType": "YulTypedName",
																	"src": "580:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:1",
																"nodeType": "YulBlock",
																"src": "653:51:1",
																"statements": [
																	{
																		"nativeSrc": "667:27:1",
																		"nodeType": "YulAssignment",
																		"src": "667:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:1",
																					"nodeType": "YulLiteral",
																					"src": "689:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:1"
																			},
																			"nativeSrc": "677:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:1"
																},
																"nativeSrc": "626:26:1",
																"nodeType": "YulFunctionCall",
																"src": "626:26:1"
															},
															"nativeSrc": "623:81:1",
															"nodeType": "YulIf",
															"src": "623:81:1"
														},
														{
															"body": {
																"nativeSrc": "756:42:1",
																"nodeType": "YulBlock",
																"src": "756:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:1"
																			},
																			"nativeSrc": "770:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:1"
																		},
																		"nativeSrc": "770:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:1",
																				"nodeType": "YulLiteral",
																				"src": "751:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:1"
																		},
																		"nativeSrc": "740:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:1"
																},
																"nativeSrc": "717:38:1",
																"nodeType": "YulFunctionCall",
																"src": "717:38:1"
															},
															"nativeSrc": "714:84:1",
															"nodeType": "YulIf",
															"src": "714:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:1",
														"nodeType": "YulTypedName",
														"src": "519:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:1",
														"nodeType": "YulTypedName",
														"src": "528:6:1",
														"type": ""
													}
												],
												"src": "484:320:1"
											},
											{
												"body": {
													"nativeSrc": "864:87:1",
													"nodeType": "YulBlock",
													"src": "864:87:1",
													"statements": [
														{
															"nativeSrc": "874:11:1",
															"nodeType": "YulAssignment",
															"src": "874:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:1",
																"nodeType": "YulIdentifier",
																"src": "882:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:1",
																		"nodeType": "YulLiteral",
																		"src": "902:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:1"
																},
																"nativeSrc": "895:14:1",
																"nodeType": "YulFunctionCall",
																"src": "895:14:1"
															},
															"nativeSrc": "895:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:1"
														},
														{
															"nativeSrc": "918:26:1",
															"nodeType": "YulAssignment",
															"src": "918:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:1",
																		"nodeType": "YulLiteral",
																		"src": "936:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:1",
																		"nodeType": "YulLiteral",
																		"src": "939:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:1"
																},
																"nativeSrc": "926:18:1",
																"nodeType": "YulFunctionCall",
																"src": "926:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:1",
														"nodeType": "YulTypedName",
														"src": "851:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:1",
														"nodeType": "YulTypedName",
														"src": "859:4:1",
														"type": ""
													}
												],
												"src": "810:141:1"
											},
											{
												"body": {
													"nativeSrc": "1001:49:1",
													"nodeType": "YulBlock",
													"src": "1001:49:1",
													"statements": [
														{
															"nativeSrc": "1011:33:1",
															"nodeType": "YulAssignment",
															"src": "1011:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:1"
																		},
																		"nativeSrc": "1025:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:1"
																},
																"nativeSrc": "1021:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:1",
														"nodeType": "YulTypedName",
														"src": "984:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:1",
														"nodeType": "YulTypedName",
														"src": "994:6:1",
														"type": ""
													}
												],
												"src": "957:93:1"
											},
											{
												"body": {
													"nativeSrc": "1109:54:1",
													"nodeType": "YulBlock",
													"src": "1109:54:1",
													"statements": [
														{
															"nativeSrc": "1119:37:1",
															"nodeType": "YulAssignment",
															"src": "1119:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:1"
																},
																"nativeSrc": "1140:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:1",
														"nodeType": "YulTypedName",
														"src": "1084:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:1",
														"nodeType": "YulTypedName",
														"src": "1090:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:1",
														"nodeType": "YulTypedName",
														"src": "1100:8:1",
														"type": ""
													}
												],
												"src": "1056:107:1"
											},
											{
												"body": {
													"nativeSrc": "1245:317:1",
													"nodeType": "YulBlock",
													"src": "1245:317:1",
													"statements": [
														{
															"nativeSrc": "1255:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:1"
																},
																"nativeSrc": "1272:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:1",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:1",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:1"
																},
																"nativeSrc": "1311:97:1",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:1",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:1",
															"nodeType": "YulAssignment",
															"src": "1417:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:1"
																},
																"nativeSrc": "1429:39:1",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:1"
																}
															]
														},
														{
															"nativeSrc": "1477:30:1",
															"nodeType": "YulAssignment",
															"src": "1477:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:1"
																		},
																		"nativeSrc": "1497:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:1"
																},
																"nativeSrc": "1486:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:1"
																}
															]
														},
														{
															"nativeSrc": "1516:40:1",
															"nodeType": "YulAssignment",
															"src": "1516:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:1"
																		},
																		"nativeSrc": "1536:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:1"
																},
																"nativeSrc": "1526:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:1",
														"nodeType": "YulTypedName",
														"src": "1206:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:1",
														"nodeType": "YulTypedName",
														"src": "1213:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:1",
														"nodeType": "YulTypedName",
														"src": "1225:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:1",
														"nodeType": "YulTypedName",
														"src": "1238:6:1",
														"type": ""
													}
												],
												"src": "1169:393:1"
											},
											{
												"body": {
													"nativeSrc": "1613:32:1",
													"nodeType": "YulBlock",
													"src": "1613:32:1",
													"statements": [
														{
															"nativeSrc": "1623:16:1",
															"nodeType": "YulAssignment",
															"src": "1623:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:1",
																"nodeType": "YulIdentifier",
																"src": "1634:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:1",
														"nodeType": "YulTypedName",
														"src": "1595:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:1",
														"nodeType": "YulTypedName",
														"src": "1605:7:1",
														"type": ""
													}
												],
												"src": "1568:77:1"
											},
											{
												"body": {
													"nativeSrc": "1683:28:1",
													"nodeType": "YulBlock",
													"src": "1683:28:1",
													"statements": [
														{
															"nativeSrc": "1693:12:1",
															"nodeType": "YulAssignment",
															"src": "1693:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:1",
																"nodeType": "YulIdentifier",
																"src": "1700:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:1",
														"nodeType": "YulTypedName",
														"src": "1669:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:1",
														"nodeType": "YulTypedName",
														"src": "1679:3:1",
														"type": ""
													}
												],
												"src": "1651:60:1"
											},
											{
												"body": {
													"nativeSrc": "1777:82:1",
													"nodeType": "YulBlock",
													"src": "1777:82:1",
													"statements": [
														{
															"nativeSrc": "1787:66:1",
															"nodeType": "YulAssignment",
															"src": "1787:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:1"
																				},
																				"nativeSrc": "1827:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:1"
																		},
																		"nativeSrc": "1818:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:1"
																},
																"nativeSrc": "1800:53:1",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:1",
														"nodeType": "YulTypedName",
														"src": "1757:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:1",
														"nodeType": "YulTypedName",
														"src": "1767:9:1",
														"type": ""
													}
												],
												"src": "1717:142:1"
											},
											{
												"body": {
													"nativeSrc": "1912:28:1",
													"nodeType": "YulBlock",
													"src": "1912:28:1",
													"statements": [
														{
															"nativeSrc": "1922:12:1",
															"nodeType": "YulAssignment",
															"src": "1922:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:1",
																"nodeType": "YulIdentifier",
																"src": "1929:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:1",
														"nodeType": "YulTypedName",
														"src": "1898:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:1",
														"nodeType": "YulTypedName",
														"src": "1908:3:1",
														"type": ""
													}
												],
												"src": "1865:75:1"
											},
											{
												"body": {
													"nativeSrc": "2022:193:1",
													"nodeType": "YulBlock",
													"src": "2022:193:1",
													"statements": [
														{
															"nativeSrc": "2032:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:1"
																},
																"nativeSrc": "2056:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:1",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:1"
																				},
																				"nativeSrc": "2145:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:1"
																				},
																				"nativeSrc": "2166:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:1"
																		},
																		"nativeSrc": "2117:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:1"
																},
																"nativeSrc": "2104:105:1",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:1"
															},
															"nativeSrc": "2104:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:1",
														"nodeType": "YulTypedName",
														"src": "1999:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:1",
														"nodeType": "YulTypedName",
														"src": "2005:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:1",
														"nodeType": "YulTypedName",
														"src": "2013:7:1",
														"type": ""
													}
												],
												"src": "1946:269:1"
											},
											{
												"body": {
													"nativeSrc": "2270:24:1",
													"nodeType": "YulBlock",
													"src": "2270:24:1",
													"statements": [
														{
															"nativeSrc": "2280:8:1",
															"nodeType": "YulAssignment",
															"src": "2280:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:1",
																"nodeType": "YulLiteral",
																"src": "2287:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:1",
														"nodeType": "YulTypedName",
														"src": "2266:3:1",
														"type": ""
													}
												],
												"src": "2221:73:1"
											},
											{
												"body": {
													"nativeSrc": "2353:136:1",
													"nodeType": "YulBlock",
													"src": "2353:136:1",
													"statements": [
														{
															"nativeSrc": "2363:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:1"
																},
																"nativeSrc": "2377:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:1"
																},
																"nativeSrc": "2418:65:1",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:1"
															},
															"nativeSrc": "2418:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:1",
														"nodeType": "YulTypedName",
														"src": "2339:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:1",
														"nodeType": "YulTypedName",
														"src": "2345:6:1",
														"type": ""
													}
												],
												"src": "2300:189:1"
											},
											{
												"body": {
													"nativeSrc": "2545:136:1",
													"nodeType": "YulBlock",
													"src": "2545:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:1",
																"nodeType": "YulBlock",
																"src": "2612:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:1"
																			},
																			"nativeSrc": "2626:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:1"
																		},
																		"nativeSrc": "2626:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:1"
																},
																"nativeSrc": "2562:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:1"
															},
															"nativeSrc": "2555:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:1",
																"nodeType": "YulBlock",
																"src": "2577:26:1",
																"statements": [
																	{
																		"nativeSrc": "2579:22:1",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:1"
																			},
																			"nativeSrc": "2588:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:1",
																"nodeType": "YulBlock",
																"src": "2559:2:1",
																"statements": []
															},
															"src": "2555:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:1",
														"nodeType": "YulTypedName",
														"src": "2533:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:1",
														"nodeType": "YulTypedName",
														"src": "2540:3:1",
														"type": ""
													}
												],
												"src": "2495:186:1"
											},
											{
												"body": {
													"nativeSrc": "2766:464:1",
													"nodeType": "YulBlock",
													"src": "2766:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:1",
																"nodeType": "YulBlock",
																"src": "2792:431:1",
																"statements": [
																	{
																		"nativeSrc": "2806:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:1"
																			},
																			"nativeSrc": "2822:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:1",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:1"
																					},
																					"nativeSrc": "2906:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:1"
																			},
																			"nativeSrc": "2892:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:1",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:1",
																			"nodeType": "YulBlock",
																			"src": "3093:27:1",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:1",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:1",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:1"
																			},
																			"nativeSrc": "3074:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:1"
																		},
																		"nativeSrc": "3071:49:1",
																		"nodeType": "YulIf",
																		"src": "3071:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:1"
																							},
																							"nativeSrc": "3189:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:1"
																					},
																					"nativeSrc": "3175:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:1"
																			},
																			"nativeSrc": "3133:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:1"
																		},
																		"nativeSrc": "3133:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:1"
																},
																"nativeSrc": "2780:11:1",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:1"
															},
															"nativeSrc": "2777:446:1",
															"nodeType": "YulIf",
															"src": "2777:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:1",
														"nodeType": "YulTypedName",
														"src": "2742:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:1",
														"nodeType": "YulTypedName",
														"src": "2749:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:1",
														"nodeType": "YulTypedName",
														"src": "2754:10:1",
														"type": ""
													}
												],
												"src": "2687:543:1"
											},
											{
												"body": {
													"nativeSrc": "3299:54:1",
													"nodeType": "YulBlock",
													"src": "3299:54:1",
													"statements": [
														{
															"nativeSrc": "3309:37:1",
															"nodeType": "YulAssignment",
															"src": "3309:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:1"
																},
																"nativeSrc": "3330:16:1",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:1",
														"nodeType": "YulTypedName",
														"src": "3274:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:1",
														"nodeType": "YulTypedName",
														"src": "3280:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:1",
														"nodeType": "YulTypedName",
														"src": "3290:8:1",
														"type": ""
													}
												],
												"src": "3236:117:1"
											},
											{
												"body": {
													"nativeSrc": "3410:118:1",
													"nodeType": "YulBlock",
													"src": "3410:118:1",
													"statements": [
														{
															"nativeSrc": "3420:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:1"
																				},
																				"nativeSrc": "3465:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:1"
																				},
																				"nativeSrc": "3480:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:1"
																		},
																		"nativeSrc": "3436:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:1"
																},
																"nativeSrc": "3432:56:1",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:1",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:1",
															"nodeType": "YulAssignment",
															"src": "3497:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:1"
																},
																"nativeSrc": "3507:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:1",
														"nodeType": "YulTypedName",
														"src": "3387:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:1",
														"nodeType": "YulTypedName",
														"src": "3393:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:1",
														"nodeType": "YulTypedName",
														"src": "3403:6:1",
														"type": ""
													}
												],
												"src": "3359:169:1"
											},
											{
												"body": {
													"nativeSrc": "3614:214:1",
													"nodeType": "YulBlock",
													"src": "3614:214:1",
													"statements": [
														{
															"nativeSrc": "3747:37:1",
															"nodeType": "YulAssignment",
															"src": "3747:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:1"
																},
																"nativeSrc": "3755:29:1",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:1"
																}
															]
														},
														{
															"nativeSrc": "3793:29:1",
															"nodeType": "YulAssignment",
															"src": "3793:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:1"
																		},
																		"nativeSrc": "3810:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:1"
																},
																"nativeSrc": "3801:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:1",
														"nodeType": "YulTypedName",
														"src": "3595:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:1",
														"nodeType": "YulTypedName",
														"src": "3601:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:1",
														"nodeType": "YulTypedName",
														"src": "3609:4:1",
														"type": ""
													}
												],
												"src": "3533:295:1"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:1",
													"nodeType": "YulBlock",
													"src": "3925:1303:1",
													"statements": [
														{
															"nativeSrc": "3936:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:1"
																},
																"nativeSrc": "3950:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:1",
																"nodeType": "YulBlock",
																"src": "4072:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:1"
																			},
																			"nativeSrc": "4074:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:1"
																		},
																		"nativeSrc": "4074:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:1",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:1"
																},
																"nativeSrc": "4041:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:1"
															},
															"nativeSrc": "4038:56:1",
															"nodeType": "YulIf",
															"src": "4038:56:1"
														},
														{
															"nativeSrc": "4104:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:1"
																		},
																		"nativeSrc": "4144:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:1"
																},
																"nativeSrc": "4118:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:1"
																},
																"nativeSrc": "4203:67:1",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:1"
															},
															"nativeSrc": "4203:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:1"
														},
														{
															"nativeSrc": "4280:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:1",
																"nodeType": "YulLiteral",
																"src": "4297:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:1",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:1",
															"nodeType": "YulAssignment",
															"src": "4308:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:1",
																"nodeType": "YulLiteral",
																"src": "4321:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:1",
																		"nodeType": "YulBlock",
																		"src": "4372:611:1",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:1",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:1"
																							},
																							"nativeSrc": "4413:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:1"
																					},
																					"nativeSrc": "4401:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:1",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:1"
																					},
																					"nativeSrc": "4451:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:1",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:1",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:1",
																					"nodeType": "YulBlock",
																					"src": "4569:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:1"
																												},
																												"nativeSrc": "4608:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:1"
																										},
																										"nativeSrc": "4602:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:1"
																								},
																								"nativeSrc": "4587:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:1"
																							},
																							"nativeSrc": "4587:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:1"
																						},
																						{
																							"nativeSrc": "4646:24:1",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:1",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:1"
																								},
																								"nativeSrc": "4656:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:1",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:1",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:1"
																								},
																								"nativeSrc": "4700:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:1"
																					},
																					"nativeSrc": "4532:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:1"
																				},
																				"nativeSrc": "4524:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:1",
																					"nodeType": "YulBlock",
																					"src": "4547:21:1",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:1",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:1",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:1"
																								},
																								"nativeSrc": "4554:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:1",
																					"nodeType": "YulBlock",
																					"src": "4528:3:1",
																					"statements": []
																				},
																				"src": "4524:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:1",
																					"nodeType": "YulBlock",
																					"src": "4768:156:1",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:1"
																										},
																										"nativeSrc": "4809:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:1"
																								},
																								"nativeSrc": "4803:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:1",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:1",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:1"
																												},
																												"nativeSrc": "4891:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:1"
																										},
																										"nativeSrc": "4861:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:1"
																								},
																								"nativeSrc": "4846:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:1"
																							},
																							"nativeSrc": "4846:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:1"
																					},
																					"nativeSrc": "4748:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:1"
																				},
																				"nativeSrc": "4745:179:1",
																				"nodeType": "YulIf",
																				"src": "4745:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:1",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:1"
																									},
																									"nativeSrc": "4954:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:1",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:1"
																							},
																							"nativeSrc": "4950:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:1"
																					},
																					"nativeSrc": "4937:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:1"
																				},
																				"nativeSrc": "4937:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:1"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:1",
																	"nodeType": "YulCase",
																	"src": "4365:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:1",
																		"nodeType": "YulBlock",
																		"src": "5000:222:1",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:1",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:1",
																					"nodeType": "YulBlock",
																					"src": "5051:67:1",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:1",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:1"
																										},
																										"nativeSrc": "5084:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:1"
																								},
																								"nativeSrc": "5078:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:1"
																				},
																				"nativeSrc": "5041:77:1",
																				"nodeType": "YulIf",
																				"src": "5041:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:1"
																							},
																							"nativeSrc": "5144:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:1"
																					},
																					"nativeSrc": "5131:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:1"
																				},
																				"nativeSrc": "5131:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:1"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:1",
																	"nodeType": "YulCase",
																	"src": "4992:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:1"
																},
																"nativeSrc": "4342:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:1"
															},
															"nativeSrc": "4335:887:1",
															"nodeType": "YulSwitch",
															"src": "4335:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:1",
														"nodeType": "YulTypedName",
														"src": "3914:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:1",
														"nodeType": "YulTypedName",
														"src": "3920:3:1",
														"type": ""
													}
												],
												"src": "3833:1395:1"
											},
											{
												"body": {
													"nativeSrc": "5279:81:1",
													"nodeType": "YulBlock",
													"src": "5279:81:1",
													"statements": [
														{
															"nativeSrc": "5289:65:1",
															"nodeType": "YulAssignment",
															"src": "5289:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:1",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:1"
																},
																"nativeSrc": "5300:54:1",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:1",
														"nodeType": "YulTypedName",
														"src": "5261:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:1",
														"nodeType": "YulTypedName",
														"src": "5271:7:1",
														"type": ""
													}
												],
												"src": "5234:126:1"
											},
											{
												"body": {
													"nativeSrc": "5411:51:1",
													"nodeType": "YulBlock",
													"src": "5411:51:1",
													"statements": [
														{
															"nativeSrc": "5421:35:1",
															"nodeType": "YulAssignment",
															"src": "5421:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:1"
																},
																"nativeSrc": "5432:24:1",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:1",
														"nodeType": "YulTypedName",
														"src": "5393:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:1",
														"nodeType": "YulTypedName",
														"src": "5403:7:1",
														"type": ""
													}
												],
												"src": "5366:96:1"
											},
											{
												"body": {
													"nativeSrc": "5533:53:1",
													"nodeType": "YulBlock",
													"src": "5533:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:1"
																		},
																		"nativeSrc": "5555:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:1"
																},
																"nativeSrc": "5543:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:1"
															},
															"nativeSrc": "5543:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:1",
														"nodeType": "YulTypedName",
														"src": "5521:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:1",
														"nodeType": "YulTypedName",
														"src": "5528:3:1",
														"type": ""
													}
												],
												"src": "5468:118:1"
											},
											{
												"body": {
													"nativeSrc": "5690:124:1",
													"nodeType": "YulBlock",
													"src": "5690:124:1",
													"statements": [
														{
															"nativeSrc": "5700:26:1",
															"nodeType": "YulAssignment",
															"src": "5700:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:1"
																},
																"nativeSrc": "5708:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:1"
																		},
																		"nativeSrc": "5789:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:1"
																},
																"nativeSrc": "5736:71:1",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:1"
															},
															"nativeSrc": "5736:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:1",
														"nodeType": "YulTypedName",
														"src": "5662:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:1",
														"nodeType": "YulTypedName",
														"src": "5674:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:1",
														"nodeType": "YulTypedName",
														"src": "5685:4:1",
														"type": ""
													}
												],
												"src": "5592:222:1"
											},
											{
												"body": {
													"nativeSrc": "5848:152:1",
													"nodeType": "YulBlock",
													"src": "5848:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5865:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5865:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5868:77:1",
																		"nodeType": "YulLiteral",
																		"src": "5868:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5858:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5858:6:1"
																},
																"nativeSrc": "5858:88:1",
																"nodeType": "YulFunctionCall",
																"src": "5858:88:1"
															},
															"nativeSrc": "5858:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "5858:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5962:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5962:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5965:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5965:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5955:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5955:6:1"
																},
																"nativeSrc": "5955:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5955:15:1"
															},
															"nativeSrc": "5955:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "5955:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5986:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5986:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5989:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5989:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5979:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5979:6:1"
																},
																"nativeSrc": "5979:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5979:15:1"
															},
															"nativeSrc": "5979:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "5979:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5820:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "5820:180:1"
											},
											{
												"body": {
													"nativeSrc": "6057:51:1",
													"nodeType": "YulBlock",
													"src": "6057:51:1",
													"statements": [
														{
															"nativeSrc": "6067:34:1",
															"nodeType": "YulAssignment",
															"src": "6067:34:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6092:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6092:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6095:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6095:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6088:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6088:3:1"
																},
																"nativeSrc": "6088:13:1",
																"nodeType": "YulFunctionCall",
																"src": "6088:13:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6067:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "6067:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "6006:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6038:5:1",
														"nodeType": "YulTypedName",
														"src": "6038:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6048:8:1",
														"nodeType": "YulTypedName",
														"src": "6048:8:1",
														"type": ""
													}
												],
												"src": "6006:102:1"
											},
											{
												"body": {
													"nativeSrc": "6187:775:1",
													"nodeType": "YulBlock",
													"src": "6187:775:1",
													"statements": [
														{
															"nativeSrc": "6197:15:1",
															"nodeType": "YulAssignment",
															"src": "6197:15:1",
															"value": {
																"name": "_power",
																"nativeSrc": "6206:6:1",
																"nodeType": "YulIdentifier",
																"src": "6206:6:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6197:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "6197:5:1"
																}
															]
														},
														{
															"nativeSrc": "6221:14:1",
															"nodeType": "YulAssignment",
															"src": "6221:14:1",
															"value": {
																"name": "_base",
																"nativeSrc": "6230:5:1",
																"nodeType": "YulIdentifier",
																"src": "6230:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "6221:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6221:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6279:677:1",
																"nodeType": "YulBlock",
																"src": "6279:677:1",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "6367:22:1",
																			"nodeType": "YulBlock",
																			"src": "6367:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "6369:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "6369:16:1"
																						},
																						"nativeSrc": "6369:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "6369:18:1"
																					},
																					"nativeSrc": "6369:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "6369:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6345:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "6345:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "6355:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6355:3:1"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "6360:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "6360:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "6351:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "6351:3:1"
																					},
																					"nativeSrc": "6351:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6351:14:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "6342:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "6342:2:1"
																			},
																			"nativeSrc": "6342:24:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6342:24:1"
																		},
																		"nativeSrc": "6339:50:1",
																		"nodeType": "YulIf",
																		"src": "6339:50:1"
																	},
																	{
																		"body": {
																			"nativeSrc": "6434:419:1",
																			"nodeType": "YulBlock",
																			"src": "6434:419:1",
																			"statements": [
																				{
																					"nativeSrc": "6814:25:1",
																					"nodeType": "YulAssignment",
																					"src": "6814:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "6827:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "6827:5:1"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "6834:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "6834:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "6823:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6823:3:1"
																						},
																						"nativeSrc": "6823:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "6823:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "6814:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "6814:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "6409:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "6409:8:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6419:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6419:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6405:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6405:3:1"
																			},
																			"nativeSrc": "6405:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6405:16:1"
																		},
																		"nativeSrc": "6402:451:1",
																		"nodeType": "YulIf",
																		"src": "6402:451:1"
																	},
																	{
																		"nativeSrc": "6866:23:1",
																		"nodeType": "YulAssignment",
																		"src": "6866:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6878:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "6878:4:1"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "6884:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "6884:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "6874:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6874:3:1"
																			},
																			"nativeSrc": "6874:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6874:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "6866:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "6866:4:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6902:44:1",
																		"nodeType": "YulAssignment",
																		"src": "6902:44:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "6937:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "6937:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "6914:22:1",
																				"nodeType": "YulIdentifier",
																				"src": "6914:22:1"
																			},
																			"nativeSrc": "6914:32:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6914:32:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "6902:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "6902:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6255:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "6255:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6265:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6265:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6252:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6252:2:1"
																},
																"nativeSrc": "6252:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6252:15:1"
															},
															"nativeSrc": "6244:712:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6268:2:1",
																"nodeType": "YulBlock",
																"src": "6268:2:1",
																"statements": []
															},
															"pre": {
																"nativeSrc": "6248:3:1",
																"nodeType": "YulBlock",
																"src": "6248:3:1",
																"statements": []
															},
															"src": "6244:712:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "6114:848:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "6142:6:1",
														"nodeType": "YulTypedName",
														"src": "6142:6:1",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "6150:5:1",
														"nodeType": "YulTypedName",
														"src": "6150:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6157:8:1",
														"nodeType": "YulTypedName",
														"src": "6157:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "6167:3:1",
														"nodeType": "YulTypedName",
														"src": "6167:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6175:5:1",
														"nodeType": "YulTypedName",
														"src": "6175:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "6182:4:1",
														"nodeType": "YulTypedName",
														"src": "6182:4:1",
														"type": ""
													}
												],
												"src": "6114:848:1"
											},
											{
												"body": {
													"nativeSrc": "7028:1013:1",
													"nodeType": "YulBlock",
													"src": "7028:1013:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7223:20:1",
																"nodeType": "YulBlock",
																"src": "7223:20:1",
																"statements": [
																	{
																		"nativeSrc": "7225:10:1",
																		"nodeType": "YulAssignment",
																		"src": "7225:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7234:1:1",
																			"nodeType": "YulLiteral",
																			"src": "7234:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7225:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7225:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7236:5:1",
																		"nodeType": "YulLeave",
																		"src": "7236:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7213:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "7213:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7206:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7206:6:1"
																},
																"nativeSrc": "7206:16:1",
																"nodeType": "YulFunctionCall",
																"src": "7206:16:1"
															},
															"nativeSrc": "7203:40:1",
															"nodeType": "YulIf",
															"src": "7203:40:1"
														},
														{
															"body": {
																"nativeSrc": "7268:20:1",
																"nodeType": "YulBlock",
																"src": "7268:20:1",
																"statements": [
																	{
																		"nativeSrc": "7270:10:1",
																		"nodeType": "YulAssignment",
																		"src": "7270:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7279:1:1",
																			"nodeType": "YulLiteral",
																			"src": "7279:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7270:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7270:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7281:5:1",
																		"nodeType": "YulLeave",
																		"src": "7281:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7262:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7262:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7255:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7255:6:1"
																},
																"nativeSrc": "7255:12:1",
																"nodeType": "YulFunctionCall",
																"src": "7255:12:1"
															},
															"nativeSrc": "7252:36:1",
															"nodeType": "YulIf",
															"src": "7252:36:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7398:20:1",
																		"nodeType": "YulBlock",
																		"src": "7398:20:1",
																		"statements": [
																			{
																				"nativeSrc": "7400:10:1",
																				"nodeType": "YulAssignment",
																				"src": "7400:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7409:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7409:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "7400:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "7400:5:1"
																					}
																				]
																			},
																			{
																				"nativeSrc": "7411:5:1",
																				"nodeType": "YulLeave",
																				"src": "7411:5:1"
																			}
																		]
																	},
																	"nativeSrc": "7391:27:1",
																	"nodeType": "YulCase",
																	"src": "7391:27:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7396:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7396:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "7442:176:1",
																		"nodeType": "YulBlock",
																		"src": "7442:176:1",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "7477:22:1",
																					"nodeType": "YulBlock",
																					"src": "7477:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "7479:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "7479:16:1"
																								},
																								"nativeSrc": "7479:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "7479:18:1"
																							},
																							"nativeSrc": "7479:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "7479:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "7462:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "7462:8:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7472:3:1",
																							"nodeType": "YulLiteral",
																							"src": "7472:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "7459:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "7459:2:1"
																					},
																					"nativeSrc": "7459:17:1",
																					"nodeType": "YulFunctionCall",
																					"src": "7459:17:1"
																				},
																				"nativeSrc": "7456:43:1",
																				"nodeType": "YulIf",
																				"src": "7456:43:1"
																			},
																			{
																				"nativeSrc": "7512:25:1",
																				"nodeType": "YulAssignment",
																				"src": "7512:25:1",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7525:1:1",
																							"nodeType": "YulLiteral",
																							"src": "7525:1:1",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "7528:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "7528:8:1"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "7521:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "7521:3:1"
																					},
																					"nativeSrc": "7521:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "7521:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "7512:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "7512:5:1"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7568:22:1",
																					"nodeType": "YulBlock",
																					"src": "7568:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "7570:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "7570:16:1"
																								},
																								"nativeSrc": "7570:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "7570:18:1"
																							},
																							"nativeSrc": "7570:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "7570:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "7556:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "7556:5:1"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "7563:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "7563:3:1"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "7553:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "7553:2:1"
																					},
																					"nativeSrc": "7553:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "7553:14:1"
																				},
																				"nativeSrc": "7550:40:1",
																				"nodeType": "YulIf",
																				"src": "7550:40:1"
																			},
																			{
																				"nativeSrc": "7603:5:1",
																				"nodeType": "YulLeave",
																				"src": "7603:5:1"
																			}
																		]
																	},
																	"nativeSrc": "7427:191:1",
																	"nodeType": "YulCase",
																	"src": "7427:191:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7432:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7432:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "7348:4:1",
																"nodeType": "YulIdentifier",
																"src": "7348:4:1"
															},
															"nativeSrc": "7341:277:1",
															"nodeType": "YulSwitch",
															"src": "7341:277:1"
														},
														{
															"body": {
																"nativeSrc": "7750:123:1",
																"nodeType": "YulBlock",
																"src": "7750:123:1",
																"statements": [
																	{
																		"nativeSrc": "7764:28:1",
																		"nodeType": "YulAssignment",
																		"src": "7764:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7777:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "7777:4:1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "7783:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "7783:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "7773:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7773:3:1"
																			},
																			"nativeSrc": "7773:19:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7773:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7764:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7764:5:1"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7823:22:1",
																			"nodeType": "YulBlock",
																			"src": "7823:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7825:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "7825:16:1"
																						},
																						"nativeSrc": "7825:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "7825:18:1"
																					},
																					"nativeSrc": "7825:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "7825:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "7811:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "7811:5:1"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "7818:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7818:3:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7808:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "7808:2:1"
																			},
																			"nativeSrc": "7808:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7808:14:1"
																		},
																		"nativeSrc": "7805:40:1",
																		"nodeType": "YulIf",
																		"src": "7805:40:1"
																	},
																	{
																		"nativeSrc": "7858:5:1",
																		"nodeType": "YulLeave",
																		"src": "7858:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7653:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "7653:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7659:2:1",
																						"nodeType": "YulLiteral",
																						"src": "7659:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7650:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "7650:2:1"
																				},
																				"nativeSrc": "7650:12:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7650:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7667:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "7667:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7677:2:1",
																						"nodeType": "YulLiteral",
																						"src": "7677:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7664:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "7664:2:1"
																				},
																				"nativeSrc": "7664:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7664:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7646:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7646:3:1"
																		},
																		"nativeSrc": "7646:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7646:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7702:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "7702:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7708:3:1",
																						"nodeType": "YulLiteral",
																						"src": "7708:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7699:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "7699:2:1"
																				},
																				"nativeSrc": "7699:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7699:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7717:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "7717:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7727:2:1",
																						"nodeType": "YulLiteral",
																						"src": "7727:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7714:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "7714:2:1"
																				},
																				"nativeSrc": "7714:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7714:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7695:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7695:3:1"
																		},
																		"nativeSrc": "7695:36:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7695:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7630:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7630:2:1"
																},
																"nativeSrc": "7630:111:1",
																"nodeType": "YulFunctionCall",
																"src": "7630:111:1"
															},
															"nativeSrc": "7627:246:1",
															"nodeType": "YulIf",
															"src": "7627:246:1"
														},
														{
															"nativeSrc": "7883:57:1",
															"nodeType": "YulAssignment",
															"src": "7883:57:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7917:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7917:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "7920:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7920:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7926:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "7926:8:1"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "7936:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7936:3:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "7898:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "7898:18:1"
																},
																"nativeSrc": "7898:42:1",
																"nodeType": "YulFunctionCall",
																"src": "7898:42:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7883:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7883:5:1"
																},
																{
																	"name": "base",
																	"nativeSrc": "7890:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7890:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7979:22:1",
																"nodeType": "YulBlock",
																"src": "7979:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7981:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7981:16:1"
																			},
																			"nativeSrc": "7981:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7981:18:1"
																		},
																		"nativeSrc": "7981:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7981:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "7956:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7956:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "7967:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7967:3:1"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "7972:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "7972:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7963:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7963:3:1"
																		},
																		"nativeSrc": "7963:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7963:14:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7953:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7953:2:1"
																},
																"nativeSrc": "7953:25:1",
																"nodeType": "YulFunctionCall",
																"src": "7953:25:1"
															},
															"nativeSrc": "7950:51:1",
															"nodeType": "YulIf",
															"src": "7950:51:1"
														},
														{
															"nativeSrc": "8010:25:1",
															"nodeType": "YulAssignment",
															"src": "8010:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8023:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8023:5:1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8030:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8030:4:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8019:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8019:3:1"
																},
																"nativeSrc": "8019:16:1",
																"nodeType": "YulFunctionCall",
																"src": "8019:16:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8010:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "8010:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "6968:1073:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "6998:4:1",
														"nodeType": "YulTypedName",
														"src": "6998:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7004:8:1",
														"nodeType": "YulTypedName",
														"src": "7004:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7014:3:1",
														"nodeType": "YulTypedName",
														"src": "7014:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7022:5:1",
														"nodeType": "YulTypedName",
														"src": "7022:5:1",
														"type": ""
													}
												],
												"src": "6968:1073:1"
											},
											{
												"body": {
													"nativeSrc": "8113:219:1",
													"nodeType": "YulBlock",
													"src": "8113:219:1",
													"statements": [
														{
															"nativeSrc": "8123:31:1",
															"nodeType": "YulAssignment",
															"src": "8123:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8149:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8149:4:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8131:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8131:17:1"
																},
																"nativeSrc": "8131:23:1",
																"nodeType": "YulFunctionCall",
																"src": "8131:23:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "8123:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8123:4:1"
																}
															]
														},
														{
															"nativeSrc": "8163:39:1",
															"nodeType": "YulAssignment",
															"src": "8163:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8193:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "8193:8:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8175:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8175:17:1"
																},
																"nativeSrc": "8175:27:1",
																"nodeType": "YulFunctionCall",
																"src": "8175:27:1"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "8163:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "8163:8:1"
																}
															]
														},
														{
															"nativeSrc": "8212:113:1",
															"nodeType": "YulAssignment",
															"src": "8212:113:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8242:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8242:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8248:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "8248:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8258:66:1",
																		"nodeType": "YulLiteral",
																		"src": "8258:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "8221:20:1",
																	"nodeType": "YulIdentifier",
																	"src": "8221:20:1"
																},
																"nativeSrc": "8221:104:1",
																"nodeType": "YulFunctionCall",
																"src": "8221:104:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8212:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "8212:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "8047:285:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "8088:4:1",
														"nodeType": "YulTypedName",
														"src": "8088:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8094:8:1",
														"nodeType": "YulTypedName",
														"src": "8094:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8107:5:1",
														"nodeType": "YulTypedName",
														"src": "8107:5:1",
														"type": ""
													}
												],
												"src": "8047:285:1"
											},
											{
												"body": {
													"nativeSrc": "8386:362:1",
													"nodeType": "YulBlock",
													"src": "8386:362:1",
													"statements": [
														{
															"nativeSrc": "8396:25:1",
															"nodeType": "YulAssignment",
															"src": "8396:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8419:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8419:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8401:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8401:17:1"
																},
																"nativeSrc": "8401:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8401:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8396:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8396:1:1"
																}
															]
														},
														{
															"nativeSrc": "8430:25:1",
															"nodeType": "YulAssignment",
															"src": "8430:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8453:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8453:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8435:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8435:17:1"
																},
																"nativeSrc": "8435:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8435:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8430:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8430:1:1"
																}
															]
														},
														{
															"nativeSrc": "8464:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8464:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8487:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8487:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8490:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8490:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8483:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8483:3:1"
																},
																"nativeSrc": "8483:9:1",
																"nodeType": "YulFunctionCall",
																"src": "8483:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8468:11:1",
																	"nodeType": "YulTypedName",
																	"src": "8468:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8501:41:1",
															"nodeType": "YulAssignment",
															"src": "8501:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8530:11:1",
																		"nodeType": "YulIdentifier",
																		"src": "8530:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8512:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8512:17:1"
																},
																"nativeSrc": "8512:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8512:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8501:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "8501:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8719:22:1",
																"nodeType": "YulBlock",
																"src": "8719:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8721:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8721:16:1"
																			},
																			"nativeSrc": "8721:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8721:18:1"
																		},
																		"nativeSrc": "8721:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8721:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8652:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "8652:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8645:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "8645:6:1"
																				},
																				"nativeSrc": "8645:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8645:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8675:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "8675:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8682:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "8682:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8691:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "8691:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8678:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "8678:3:1"
																						},
																						"nativeSrc": "8678:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "8678:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8672:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "8672:2:1"
																				},
																				"nativeSrc": "8672:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8672:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8625:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "8625:2:1"
																		},
																		"nativeSrc": "8625:83:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8625:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8605:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8605:6:1"
																},
																"nativeSrc": "8605:113:1",
																"nodeType": "YulFunctionCall",
																"src": "8605:113:1"
															},
															"nativeSrc": "8602:139:1",
															"nodeType": "YulIf",
															"src": "8602:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8338:410:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8369:1:1",
														"nodeType": "YulTypedName",
														"src": "8369:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8372:1:1",
														"nodeType": "YulTypedName",
														"src": "8372:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8378:7:1",
														"nodeType": "YulTypedName",
														"src": "8378:7:1",
														"type": ""
													}
												],
												"src": "8338:410:1"
											},
											{
												"body": {
													"nativeSrc": "8798:147:1",
													"nodeType": "YulBlock",
													"src": "8798:147:1",
													"statements": [
														{
															"nativeSrc": "8808:25:1",
															"nodeType": "YulAssignment",
															"src": "8808:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8831:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8831:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8813:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8813:17:1"
																},
																"nativeSrc": "8813:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8813:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8808:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8808:1:1"
																}
															]
														},
														{
															"nativeSrc": "8842:25:1",
															"nodeType": "YulAssignment",
															"src": "8842:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8865:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8865:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8847:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8847:17:1"
																},
																"nativeSrc": "8847:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8847:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8842:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8842:1:1"
																}
															]
														},
														{
															"nativeSrc": "8876:16:1",
															"nodeType": "YulAssignment",
															"src": "8876:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8887:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8887:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8890:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8890:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8883:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8883:3:1"
																},
																"nativeSrc": "8883:9:1",
																"nodeType": "YulFunctionCall",
																"src": "8883:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8876:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8876:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8916:22:1",
																"nodeType": "YulBlock",
																"src": "8916:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8918:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8918:16:1"
																			},
																			"nativeSrc": "8918:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8918:18:1"
																		},
																		"nativeSrc": "8918:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8918:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8908:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8908:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8911:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8911:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8905:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8905:2:1"
																},
																"nativeSrc": "8905:10:1",
																"nodeType": "YulFunctionCall",
																"src": "8905:10:1"
															},
															"nativeSrc": "8902:36:1",
															"nodeType": "YulIf",
															"src": "8902:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8754:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8785:1:1",
														"nodeType": "YulTypedName",
														"src": "8785:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8788:1:1",
														"nodeType": "YulTypedName",
														"src": "8788:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8794:3:1",
														"nodeType": "YulTypedName",
														"src": "8794:3:1",
														"type": ""
													}
												],
												"src": "8754:191:1"
											},
											{
												"body": {
													"nativeSrc": "9016:53:1",
													"nodeType": "YulBlock",
													"src": "9016:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9033:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9033:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9056:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "9056:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9038:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "9038:17:1"
																		},
																		"nativeSrc": "9038:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9038:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9026:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9026:6:1"
																},
																"nativeSrc": "9026:37:1",
																"nodeType": "YulFunctionCall",
																"src": "9026:37:1"
															},
															"nativeSrc": "9026:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "9026:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8951:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9004:5:1",
														"nodeType": "YulTypedName",
														"src": "9004:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9011:3:1",
														"nodeType": "YulTypedName",
														"src": "9011:3:1",
														"type": ""
													}
												],
												"src": "8951:118:1"
											},
											{
												"body": {
													"nativeSrc": "9229:288:1",
													"nodeType": "YulBlock",
													"src": "9229:288:1",
													"statements": [
														{
															"nativeSrc": "9239:26:1",
															"nodeType": "YulAssignment",
															"src": "9239:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9251:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9251:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9262:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9262:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9247:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9247:3:1"
																},
																"nativeSrc": "9247:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9247:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9239:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9239:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9319:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9319:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9332:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9332:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9343:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9343:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9328:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9328:3:1"
																		},
																		"nativeSrc": "9328:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9328:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9275:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "9275:43:1"
																},
																"nativeSrc": "9275:71:1",
																"nodeType": "YulFunctionCall",
																"src": "9275:71:1"
															},
															"nativeSrc": "9275:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "9275:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9400:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9400:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9413:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9413:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9424:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9424:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9409:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9409:3:1"
																		},
																		"nativeSrc": "9409:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9409:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9356:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "9356:43:1"
																},
																"nativeSrc": "9356:72:1",
																"nodeType": "YulFunctionCall",
																"src": "9356:72:1"
															},
															"nativeSrc": "9356:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "9356:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9482:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9482:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9495:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9495:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9506:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9506:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9491:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9491:3:1"
																		},
																		"nativeSrc": "9491:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9491:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9438:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "9438:43:1"
																},
																"nativeSrc": "9438:72:1",
																"nodeType": "YulFunctionCall",
																"src": "9438:72:1"
															},
															"nativeSrc": "9438:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "9438:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9075:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9185:9:1",
														"nodeType": "YulTypedName",
														"src": "9185:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9197:6:1",
														"nodeType": "YulTypedName",
														"src": "9197:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9205:6:1",
														"nodeType": "YulTypedName",
														"src": "9205:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9213:6:1",
														"nodeType": "YulTypedName",
														"src": "9213:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9224:4:1",
														"nodeType": "YulTypedName",
														"src": "9224:4:1",
														"type": ""
													}
												],
												"src": "9075:442:1"
											},
											{
												"body": {
													"nativeSrc": "9621:124:1",
													"nodeType": "YulBlock",
													"src": "9621:124:1",
													"statements": [
														{
															"nativeSrc": "9631:26:1",
															"nodeType": "YulAssignment",
															"src": "9631:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9643:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9643:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9654:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9654:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9639:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9639:3:1"
																},
																"nativeSrc": "9639:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9639:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9631:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9631:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9711:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9711:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9724:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9724:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9735:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9735:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9720:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9720:3:1"
																		},
																		"nativeSrc": "9720:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9720:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9667:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "9667:43:1"
																},
																"nativeSrc": "9667:71:1",
																"nodeType": "YulFunctionCall",
																"src": "9667:71:1"
															},
															"nativeSrc": "9667:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "9667:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9523:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9593:9:1",
														"nodeType": "YulTypedName",
														"src": "9593:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9605:6:1",
														"nodeType": "YulTypedName",
														"src": "9605:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9616:4:1",
														"nodeType": "YulTypedName",
														"src": "9616:4:1",
														"type": ""
													}
												],
												"src": "9523:222:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50336040518060400160405280600581526020017f446567656e0000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f44474e0000000000000000000000000000000000000000000000000000000000815250816003908161008c9190610732565b50806004908161009c9190610732565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361010f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101069190610840565b60405180910390fd5b61011e8161019460201b60201c565b505f600560146101000a81548160ff0219169083151502179055506012600560156101000a81548160ff021916908360ff16021790555061018f33600560159054906101000a900460ff1660ff16600a61017891906109b5565b606461018491906109ff565b61025760201b60201c565b610ad0565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102c7575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102be9190610840565b60405180910390fd5b6102d85f83836102dc60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361032c578060025f8282546103209190610a40565b925050819055506103fa565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156103b5578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016103ac93929190610a82565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610441578060025f828254039250508190555061048b565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104e89190610ab7565b60405180910390a3505050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061057057607f821691505b6020821081036105835761058261052c565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026105e57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826105aa565b6105ef86836105aa565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61063361062e61062984610607565b610610565b610607565b9050919050565b5f819050919050565b61064c83610619565b6106606106588261063a565b8484546105b6565b825550505050565b5f5f905090565b610677610668565b610682818484610643565b505050565b5b818110156106a55761069a5f8261066f565b600181019050610688565b5050565b601f8211156106ea576106bb81610589565b6106c48461059b565b810160208510156106d3578190505b6106e76106df8561059b565b830182610687565b50505b505050565b5f82821c905092915050565b5f61070a5f19846008026106ef565b1980831691505092915050565b5f61072283836106fb565b9150826002028217905092915050565b61073b826104f5565b67ffffffffffffffff811115610754576107536104ff565b5b61075e8254610559565b6107698282856106a9565b5f60209050601f83116001811461079a575f8415610788578287015190505b6107928582610717565b8655506107f9565b601f1984166107a886610589565b5f5b828110156107cf578489015182556001820191506020850194506020810190506107aa565b868310156107ec57848901516107e8601f8916826106fb565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61082a82610801565b9050919050565b61083a81610820565b82525050565b5f6020820190506108535f830184610831565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b60018511156108db578086048111156108b7576108b6610859565b5b60018516156108c65780820291505b80810290506108d485610886565b945061089b565b94509492505050565b5f826108f357600190506109ae565b81610900575f90506109ae565b816001811461091657600281146109205761094f565b60019150506109ae565b60ff84111561093257610931610859565b5b8360020a91508482111561094957610948610859565b5b506109ae565b5060208310610133831016604e8410600b84101617156109845782820a90508381111561097f5761097e610859565b5b6109ae565b6109918484846001610892565b925090508184048111156109a8576109a7610859565b5b81810290505b9392505050565b5f6109bf82610607565b91506109ca83610607565b92506109f77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846108e4565b905092915050565b5f610a0982610607565b9150610a1483610607565b9250828202610a2281610607565b91508282048414831517610a3957610a38610859565b5b5092915050565b5f610a4a82610607565b9150610a5583610607565b9250828201905080821115610a6d57610a6c610859565b5b92915050565b610a7c81610607565b82525050565b5f606082019050610a955f830186610831565b610aa26020830185610a73565b610aaf6040830184610a73565b949350505050565b5f602082019050610aca5f830184610a73565b92915050565b61160b80610add5f395ff3fe608060405234801561000f575f5ffd5b5060043610610114575f3560e01c806370a08231116100a05780638da5cb5b1161006f5780638da5cb5b1461029257806395d89b41146102b0578063a9059cbb146102ce578063dd62ed3e146102fe578063f2fde38b1461032e57610114565b806370a0823114610232578063715018a61461026257806379cc67901461026c5780638456cb591461028857610114565b8063313ce567116100e7578063313ce567146101b45780633f4ba83a146101d257806340c10f19146101dc57806342966c68146101f85780635c975abb1461021457610114565b806306fdde0314610118578063095ea7b31461013657806318160ddd1461016657806323b872dd14610184575b5f5ffd5b61012061034a565b60405161012d91906110ee565b60405180910390f35b610150600480360381019061014b919061119f565b6103da565b60405161015d91906111f7565b60405180910390f35b61016e6103fc565b60405161017b919061121f565b60405180910390f35b61019e60048036038101906101999190611238565b610405565b6040516101ab91906111f7565b60405180910390f35b6101bc610433565b6040516101c991906112a3565b60405180910390f35b6101da610449565b005b6101f660048036038101906101f1919061119f565b61045b565b005b610212600480360381019061020d91906112bc565b610471565b005b61021c61047e565b60405161022991906111f7565b60405180910390f35b61024c600480360381019061024791906112e7565b610494565b604051610259919061121f565b60405180910390f35b61026a6104d9565b005b6102866004803603810190610281919061119f565b6104ec565b005b610290610569565b005b61029a61057b565b6040516102a79190611321565b60405180910390f35b6102b86105a3565b6040516102c591906110ee565b60405180910390f35b6102e860048036038101906102e3919061119f565b610633565b6040516102f591906111f7565b60405180910390f35b6103186004803603810190610313919061133a565b610655565b604051610325919061121f565b60405180910390f35b610348600480360381019061034391906112e7565b6106d7565b005b606060038054610359906113a5565b80601f0160208091040260200160405190810160405280929190818152602001828054610385906113a5565b80156103d05780601f106103a7576101008083540402835291602001916103d0565b820191905f5260205f20905b8154815290600101906020018083116103b357829003601f168201915b5050505050905090565b5f5f6103e461075b565b90506103f1818585610762565b600191505092915050565b5f600254905090565b5f5f61040f61075b565b905061041c858285610774565b610427858585610806565b60019150509392505050565b5f600560159054906101000a900460ff16905090565b6104516108f6565b61045961097d565b565b6104636108f6565b61046d82826109df565b5050565b61047b3382610a5e565b50565b5f600560149054906101000a900460ff16905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6104e16108f6565b6104ea5f610add565b565b6104f46108f6565b5f6104ff8333610655565b905081811015610544576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053b9061141f565b60405180910390fd5b61055a83338484610555919061146a565b610762565b6105648383610a5e565b505050565b6105716108f6565b610579610ba0565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105b2906113a5565b80601f01602080910402602001604051908101604052809291908181526020018280546105de906113a5565b80156106295780601f1061060057610100808354040283529160200191610629565b820191905f5260205f20905b81548152906001019060200180831161060c57829003601f168201915b5050505050905090565b5f5f61063d61075b565b905061064a818585610806565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6106df6108f6565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361074f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107469190611321565b60405180910390fd5b61075881610add565b50565b5f33905090565b61076f8383836001610c03565b505050565b5f61077f8484610655565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461080057818110156107f1578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016107e89392919061149d565b60405180910390fd5b6107ff84848484035f610c03565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610876575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161086d9190611321565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108e6575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108dd9190611321565b60405180910390fd5b6108f1838383610dd2565b505050565b6108fe61075b565b73ffffffffffffffffffffffffffffffffffffffff1661091c61057b565b73ffffffffffffffffffffffffffffffffffffffff161461097b5761093f61075b565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109729190611321565b60405180910390fd5b565b610985610feb565b5f600560146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6109c861075b565b6040516109d59190611321565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a4f575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a469190611321565b60405180910390fd5b610a5a5f8383610dd2565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ace575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610ac59190611321565b60405180910390fd5b610ad9825f83610dd2565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610ba8611034565b6001600560146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610bec61075b565b604051610bf99190611321565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c73575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c6a9190611321565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ce3575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610cda9190611321565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610dcc578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610dc3919061121f565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e22578060025f828254610e1691906114d2565b92505081905550610ef0565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610eab578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610ea29392919061149d565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f37578060025f8282540392505081905550610f81565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fde919061121f565b60405180910390a3505050565b610ff361047e565b611032576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110299061154f565b60405180910390fd5b565b61103c61047e565b1561107c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611073906115b7565b60405180910390fd5b565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6110c08261107e565b6110ca8185611088565b93506110da818560208601611098565b6110e3816110a6565b840191505092915050565b5f6020820190508181035f83015261110681846110b6565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61113b82611112565b9050919050565b61114b81611131565b8114611155575f5ffd5b50565b5f8135905061116681611142565b92915050565b5f819050919050565b61117e8161116c565b8114611188575f5ffd5b50565b5f8135905061119981611175565b92915050565b5f5f604083850312156111b5576111b461110e565b5b5f6111c285828601611158565b92505060206111d38582860161118b565b9150509250929050565b5f8115159050919050565b6111f1816111dd565b82525050565b5f60208201905061120a5f8301846111e8565b92915050565b6112198161116c565b82525050565b5f6020820190506112325f830184611210565b92915050565b5f5f5f6060848603121561124f5761124e61110e565b5b5f61125c86828701611158565b935050602061126d86828701611158565b925050604061127e8682870161118b565b9150509250925092565b5f60ff82169050919050565b61129d81611288565b82525050565b5f6020820190506112b65f830184611294565b92915050565b5f602082840312156112d1576112d061110e565b5b5f6112de8482850161118b565b91505092915050565b5f602082840312156112fc576112fb61110e565b5b5f61130984828501611158565b91505092915050565b61131b81611131565b82525050565b5f6020820190506113345f830184611312565b92915050565b5f5f604083850312156113505761134f61110e565b5b5f61135d85828601611158565b925050602061136e85828601611158565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806113bc57607f821691505b6020821081036113cf576113ce611378565b5b50919050565b7f4275726e20616d6f756e74206578636565647320616c6c6f77616e63650000005f82015250565b5f611409601d83611088565b9150611414826113d5565b602082019050919050565b5f6020820190508181035f830152611436816113fd565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6114748261116c565b915061147f8361116c565b92508282039050818111156114975761149661143d565b5b92915050565b5f6060820190506114b05f830186611312565b6114bd6020830185611210565b6114ca6040830184611210565b949350505050565b5f6114dc8261116c565b91506114e78361116c565b92508282019050808211156114ff576114fe61143d565b5b92915050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f611539601483611088565b915061154482611505565b602082019050919050565b5f6020820190508181035f8301526115668161152d565b9050919050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6115a1601083611088565b91506115ac8261156d565b602082019050919050565b5f6020820190508181035f8301526115ce81611595565b905091905056fea26469706673582212207cf15792ed0ae03ad45f64b1ee9777b64d2f241b10ea0703e20f900fc17b9a8364736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x446567656E000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44474E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x732 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x732 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x840 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11E DUP2 PUSH2 0x194 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x12 PUSH1 0x5 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x18F CALLER PUSH1 0x5 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xA PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x9FF JUMP JUMPDEST PUSH2 0x257 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xAD0 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2C7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x840 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D8 PUSH0 DUP4 DUP4 PUSH2 0x2DC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x32C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0xA40 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3FA JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x3B5 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x441 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x48B JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x4E8 SWAP2 SWAP1 PUSH2 0xAB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x570 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x583 JUMPI PUSH2 0x582 PUSH2 0x52C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x5E5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x5EF DUP7 DUP4 PUSH2 0x5AA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x633 PUSH2 0x62E PUSH2 0x629 DUP5 PUSH2 0x607 JUMP JUMPDEST PUSH2 0x610 JUMP JUMPDEST PUSH2 0x607 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x64C DUP4 PUSH2 0x619 JUMP JUMPDEST PUSH2 0x660 PUSH2 0x658 DUP3 PUSH2 0x63A JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x5B6 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x677 PUSH2 0x668 JUMP JUMPDEST PUSH2 0x682 DUP2 DUP5 DUP5 PUSH2 0x643 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6A5 JUMPI PUSH2 0x69A PUSH0 DUP3 PUSH2 0x66F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x688 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x6EA JUMPI PUSH2 0x6BB DUP2 PUSH2 0x589 JUMP JUMPDEST PUSH2 0x6C4 DUP5 PUSH2 0x59B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x6D3 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x6E7 PUSH2 0x6DF DUP6 PUSH2 0x59B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x687 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x70A PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x6EF JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x722 DUP4 DUP4 PUSH2 0x6FB JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x73B DUP3 PUSH2 0x4F5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x754 JUMPI PUSH2 0x753 PUSH2 0x4FF JUMP JUMPDEST JUMPDEST PUSH2 0x75E DUP3 SLOAD PUSH2 0x559 JUMP JUMPDEST PUSH2 0x769 DUP3 DUP3 DUP6 PUSH2 0x6A9 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x79A JUMPI PUSH0 DUP5 ISZERO PUSH2 0x788 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x792 DUP6 DUP3 PUSH2 0x717 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x7A8 DUP7 PUSH2 0x589 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x7CF JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7AA JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x7EC JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x7E8 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x6FB JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x82A DUP3 PUSH2 0x801 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x83A DUP2 PUSH2 0x820 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x853 PUSH0 DUP4 ADD DUP5 PUSH2 0x831 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x8DB JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x8B7 JUMPI PUSH2 0x8B6 PUSH2 0x859 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x8C6 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x8D4 DUP6 PUSH2 0x886 JUMP JUMPDEST SWAP5 POP PUSH2 0x89B JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x8F3 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x9AE JUMP JUMPDEST DUP2 PUSH2 0x900 JUMPI PUSH0 SWAP1 POP PUSH2 0x9AE JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x916 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x920 JUMPI PUSH2 0x94F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x9AE JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x932 JUMPI PUSH2 0x931 PUSH2 0x859 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x949 JUMPI PUSH2 0x948 PUSH2 0x859 JUMP JUMPDEST JUMPDEST POP PUSH2 0x9AE JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x984 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x97F JUMPI PUSH2 0x97E PUSH2 0x859 JUMP JUMPDEST JUMPDEST PUSH2 0x9AE JUMP JUMPDEST PUSH2 0x991 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x892 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x9A8 JUMPI PUSH2 0x9A7 PUSH2 0x859 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9BF DUP3 PUSH2 0x607 JUMP JUMPDEST SWAP2 POP PUSH2 0x9CA DUP4 PUSH2 0x607 JUMP JUMPDEST SWAP3 POP PUSH2 0x9F7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x8E4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA09 DUP3 PUSH2 0x607 JUMP JUMPDEST SWAP2 POP PUSH2 0xA14 DUP4 PUSH2 0x607 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xA22 DUP2 PUSH2 0x607 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xA39 JUMPI PUSH2 0xA38 PUSH2 0x859 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA4A DUP3 PUSH2 0x607 JUMP JUMPDEST SWAP2 POP PUSH2 0xA55 DUP4 PUSH2 0x607 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA6D JUMPI PUSH2 0xA6C PUSH2 0x859 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA7C DUP2 PUSH2 0x607 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xA95 PUSH0 DUP4 ADD DUP7 PUSH2 0x831 JUMP JUMPDEST PUSH2 0xAA2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA73 JUMP JUMPDEST PUSH2 0xAAF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA73 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xACA PUSH0 DUP4 ADD DUP5 PUSH2 0xA73 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x160B DUP1 PUSH2 0xADD PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x32E JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x288 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x214 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x184 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x120 PUSH2 0x34A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x10EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x121F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH2 0x433 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x12A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH2 0x449 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH2 0x45B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x12BC JUMP JUMPDEST PUSH2 0x471 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21C PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x12E7 JUMP JUMPDEST PUSH2 0x494 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x121F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH2 0x4D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x286 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x290 PUSH2 0x569 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29A PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B8 PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x10EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x133A JUMP JUMPDEST PUSH2 0x655 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x121F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x12E7 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x359 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x385 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3E4 PUSH2 0x75B JUMP JUMPDEST SWAP1 POP PUSH2 0x3F1 DUP2 DUP6 DUP6 PUSH2 0x762 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x40F PUSH2 0x75B JUMP JUMPDEST SWAP1 POP PUSH2 0x41C DUP6 DUP3 DUP6 PUSH2 0x774 JUMP JUMPDEST PUSH2 0x427 DUP6 DUP6 DUP6 PUSH2 0x806 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x451 PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x459 PUSH2 0x97D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x463 PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x46D DUP3 DUP3 PUSH2 0x9DF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x47B CALLER DUP3 PUSH2 0xA5E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E1 PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x4EA PUSH0 PUSH2 0xADD JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4F4 PUSH2 0x8F6 JUMP JUMPDEST PUSH0 PUSH2 0x4FF DUP4 CALLER PUSH2 0x655 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x544 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53B SWAP1 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x55A DUP4 CALLER DUP5 DUP5 PUSH2 0x555 SWAP2 SWAP1 PUSH2 0x146A JUMP JUMPDEST PUSH2 0x762 JUMP JUMPDEST PUSH2 0x564 DUP4 DUP4 PUSH2 0xA5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x571 PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x579 PUSH2 0xBA0 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5B2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5DE SWAP1 PUSH2 0x13A5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x629 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x600 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x629 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x60C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x63D PUSH2 0x75B JUMP JUMPDEST SWAP1 POP PUSH2 0x64A DUP2 DUP6 DUP6 PUSH2 0x806 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6DF PUSH2 0x8F6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x74F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x746 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x758 DUP2 PUSH2 0xADD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x76F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC03 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x77F DUP5 DUP5 PUSH2 0x655 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x800 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7F1 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x149D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7FF DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xC03 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x876 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86D SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DD SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8F1 DUP4 DUP4 DUP4 PUSH2 0xDD2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8FE PUSH2 0x75B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x91C PUSH2 0x57B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x97B JUMPI PUSH2 0x93F PUSH2 0x75B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x985 PUSH2 0xFEB JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x9C8 PUSH2 0x75B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D5 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA4F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA46 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA5A PUSH0 DUP4 DUP4 PUSH2 0xDD2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xACE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC5 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAD9 DUP3 PUSH0 DUP4 PUSH2 0xDD2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xBA8 PUSH2 0x1034 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xBEC PUSH2 0x75B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF9 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC73 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6A SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCE3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDA SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xDCC JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDC3 SWAP2 SWAP1 PUSH2 0x121F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE22 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE16 SWAP2 SWAP1 PUSH2 0x14D2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEF0 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xEAB JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x149D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF37 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF81 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xFDE SWAP2 SWAP1 PUSH2 0x121F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xFF3 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x1032 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1029 SWAP1 PUSH2 0x154F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x103C PUSH2 0x47E JUMP JUMPDEST ISZERO PUSH2 0x107C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1073 SWAP1 PUSH2 0x15B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10C0 DUP3 PUSH2 0x107E JUMP JUMPDEST PUSH2 0x10CA DUP2 DUP6 PUSH2 0x1088 JUMP JUMPDEST SWAP4 POP PUSH2 0x10DA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1098 JUMP JUMPDEST PUSH2 0x10E3 DUP2 PUSH2 0x10A6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1106 DUP2 DUP5 PUSH2 0x10B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x113B DUP3 PUSH2 0x1112 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x114B DUP2 PUSH2 0x1131 JUMP JUMPDEST DUP2 EQ PUSH2 0x1155 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1166 DUP2 PUSH2 0x1142 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x117E DUP2 PUSH2 0x116C JUMP JUMPDEST DUP2 EQ PUSH2 0x1188 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1199 DUP2 PUSH2 0x1175 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11B5 JUMPI PUSH2 0x11B4 PUSH2 0x110E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11C2 DUP6 DUP3 DUP7 ADD PUSH2 0x1158 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11D3 DUP6 DUP3 DUP7 ADD PUSH2 0x118B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11F1 DUP2 PUSH2 0x11DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x120A PUSH0 DUP4 ADD DUP5 PUSH2 0x11E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1219 DUP2 PUSH2 0x116C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1232 PUSH0 DUP4 ADD DUP5 PUSH2 0x1210 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x124F JUMPI PUSH2 0x124E PUSH2 0x110E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x125C DUP7 DUP3 DUP8 ADD PUSH2 0x1158 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x126D DUP7 DUP3 DUP8 ADD PUSH2 0x1158 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x127E DUP7 DUP3 DUP8 ADD PUSH2 0x118B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x129D DUP2 PUSH2 0x1288 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12B6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1294 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D1 JUMPI PUSH2 0x12D0 PUSH2 0x110E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12DE DUP5 DUP3 DUP6 ADD PUSH2 0x118B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12FC JUMPI PUSH2 0x12FB PUSH2 0x110E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1309 DUP5 DUP3 DUP6 ADD PUSH2 0x1158 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x131B DUP2 PUSH2 0x1131 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1334 PUSH0 DUP4 ADD DUP5 PUSH2 0x1312 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1350 JUMPI PUSH2 0x134F PUSH2 0x110E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x135D DUP6 DUP3 DUP7 ADD PUSH2 0x1158 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x136E DUP6 DUP3 DUP7 ADD PUSH2 0x1158 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x13BC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x13CF JUMPI PUSH2 0x13CE PUSH2 0x1378 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4275726E20616D6F756E74206578636565647320616C6C6F77616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1409 PUSH1 0x1D DUP4 PUSH2 0x1088 JUMP JUMPDEST SWAP2 POP PUSH2 0x1414 DUP3 PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1436 DUP2 PUSH2 0x13FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1474 DUP3 PUSH2 0x116C JUMP JUMPDEST SWAP2 POP PUSH2 0x147F DUP4 PUSH2 0x116C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1497 JUMPI PUSH2 0x1496 PUSH2 0x143D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x14B0 PUSH0 DUP4 ADD DUP7 PUSH2 0x1312 JUMP JUMPDEST PUSH2 0x14BD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1210 JUMP JUMPDEST PUSH2 0x14CA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1210 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14DC DUP3 PUSH2 0x116C JUMP JUMPDEST SWAP2 POP PUSH2 0x14E7 DUP4 PUSH2 0x116C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x14FF JUMPI PUSH2 0x14FE PUSH2 0x143D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1539 PUSH1 0x14 DUP4 PUSH2 0x1088 JUMP JUMPDEST SWAP2 POP PUSH2 0x1544 DUP3 PUSH2 0x1505 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1566 DUP2 PUSH2 0x152D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15A1 PUSH1 0x10 DUP4 PUSH2 0x1088 JUMP JUMPDEST SWAP2 POP PUSH2 0x15AC DUP3 PUSH2 0x156D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15CE DUP2 PUSH2 0x1595 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xF15792ED0AE03AD45F64B1EE9777B64D2F241B10EA0703E20F900FC17B SWAP11 DUP4 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "27588:1387:0:-:0;;;27674:146;;;;;;;;;;27718:10;12527:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12601:5;12593;:13;;;;;;:::i;:::-;;12626:7;12616;:17;;;;;;:::i;:::-;;12527:113;;23095:1;23071:26;;:12;:26;;;23067:95;;23148:1;23120:31;;;;;;;;;;;:::i;:::-;;;;;;;;23067:95;23171:32;23190:12;23171:18;;;:32;;:::i;:::-;23023:187;25901:5;25891:7;;:15;;;;;;;;;;;;;;;;;;27752:2:::2;27740:9;;:14;;;;;;;;;;;;;;;;;;27764:49;27770:10;27802:9;;;;;;;;;;;27794:18;;27788:2;:24;;;;:::i;:::-;27782:3;:30;;;;:::i;:::-;27764:5;;;:49;;:::i;:::-;27588:1387:::0;;24710:187;24783:16;24802:6;;;;;;;;;;;24783:25;;24827:8;24818:6;;:17;;;;;;;;;;;;;;;;;;24881:8;24850:40;;24871:8;24850:40;;;;;;;;;;;;24773:124;24710:187;:::o;18384:208::-;18473:1;18454:21;;:7;:21;;;18450:91;;18527:1;18498:32;;;;;;;;;;;:::i;:::-;;;;;;;;18450:91;18550:35;18566:1;18570:7;18579:5;18550:7;;;:35;;:::i;:::-;18384:208;;:::o;16934:1107::-;17039:1;17023:18;;:4;:18;;;17019:540;;17175:5;17159:12;;:21;;;;;;;:::i;:::-;;;;;;;;17019:540;;;17211:19;17233:9;:15;17243:4;17233:15;;;;;;;;;;;;;;;;17211:37;;17280:5;17266:11;:19;17262:115;;;17337:4;17343:11;17356:5;17312:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;17262:115;17529:5;17515:11;:19;17497:9;:15;17507:4;17497:15;;;;;;;;;;;;;;;:37;;;;17197:362;17019:540;17587:1;17573:16;;:2;:16;;;17569:425;;17752:5;17736:12;;:21;;;;;;;;;;;17569:425;;;17964:5;17947:9;:13;17957:2;17947:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;17569:425;18024:2;18009:25;;18018:4;18009:25;;;18028:5;18009:25;;;;;;:::i;:::-;;;;;;;;16934:1107;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2287:1;2280:8;;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:180::-;5868:77;5865:1;5858:88;5965:4;5962:1;5955:15;5989:4;5986:1;5979:15;6006:102;6048:8;6095:5;6092:1;6088:13;6067:34;;6006:102;;;:::o;6114:848::-;6175:5;6182:4;6206:6;6197:15;;6230:5;6221:14;;6244:712;6265:1;6255:8;6252:15;6244:712;;;6360:4;6355:3;6351:14;6345:4;6342:24;6339:50;;;6369:18;;:::i;:::-;6339:50;6419:1;6409:8;6405:16;6402:451;;;6834:4;6827:5;6823:16;6814:25;;6402:451;6884:4;6878;6874:15;6866:23;;6914:32;6937:8;6914:32;:::i;:::-;6902:44;;6244:712;;;6114:848;;;;;;;:::o;6968:1073::-;7022:5;7213:8;7203:40;;7234:1;7225:10;;7236:5;;7203:40;7262:4;7252:36;;7279:1;7270:10;;7281:5;;7252:36;7348:4;7396:1;7391:27;;;;7432:1;7427:191;;;;7341:277;;7391:27;7409:1;7400:10;;7411:5;;;7427:191;7472:3;7462:8;7459:17;7456:43;;;7479:18;;:::i;:::-;7456:43;7528:8;7525:1;7521:16;7512:25;;7563:3;7556:5;7553:14;7550:40;;;7570:18;;:::i;:::-;7550:40;7603:5;;;7341:277;;7727:2;7717:8;7714:16;7708:3;7702:4;7699:13;7695:36;7677:2;7667:8;7664:16;7659:2;7653:4;7650:12;7646:35;7630:111;7627:246;;;7783:8;7777:4;7773:19;7764:28;;7818:3;7811:5;7808:14;7805:40;;;7825:18;;:::i;:::-;7805:40;7858:5;;7627:246;7898:42;7936:3;7926:8;7920:4;7917:1;7898:42;:::i;:::-;7883:57;;;;7972:4;7967:3;7963:14;7956:5;7953:25;7950:51;;;7981:18;;:::i;:::-;7950:51;8030:4;8023:5;8019:16;8010:25;;6968:1073;;;;;;:::o;8047:285::-;8107:5;8131:23;8149:4;8131:23;:::i;:::-;8123:31;;8175:27;8193:8;8175:27;:::i;:::-;8163:39;;8221:104;8258:66;8248:8;8242:4;8221:104;:::i;:::-;8212:113;;8047:285;;;;:::o;8338:410::-;8378:7;8401:20;8419:1;8401:20;:::i;:::-;8396:25;;8435:20;8453:1;8435:20;:::i;:::-;8430:25;;8490:1;8487;8483:9;8512:30;8530:11;8512:30;:::i;:::-;8501:41;;8691:1;8682:7;8678:15;8675:1;8672:22;8652:1;8645:9;8625:83;8602:139;;8721:18;;:::i;:::-;8602:139;8386:362;8338:410;;;;:::o;8754:191::-;8794:3;8813:20;8831:1;8813:20;:::i;:::-;8808:25;;8847:20;8865:1;8847:20;:::i;:::-;8842:25;;8890:1;8887;8883:9;8876:16;;8911:3;8908:1;8905:10;8902:36;;;8918:18;;:::i;:::-;8902:36;8754:191;;;;:::o;8951:118::-;9038:24;9056:5;9038:24;:::i;:::-;9033:3;9026:37;8951:118;;:::o;9075:442::-;9224:4;9262:2;9251:9;9247:18;9239:26;;9275:71;9343:1;9332:9;9328:17;9319:6;9275:71;:::i;:::-;9356:72;9424:2;9413:9;9409:18;9400:6;9356:72;:::i;:::-;9438;9506:2;9495:9;9491:18;9482:6;9438:72;:::i;:::-;9075:442;;;;;;:::o;9523:222::-;9616:4;9654:2;9643:9;9639:18;9631:26;;9667:71;9735:1;9724:9;9720:17;9711:6;9667:71;:::i;:::-;9523:222;;;;:::o;27588:1387:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_663": {
									"entryPoint": 1890,
									"id": 663,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_723": {
									"entryPoint": 3075,
									"id": 723,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_645": {
									"entryPoint": 2654,
									"id": 645,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_854": {
									"entryPoint": 2294,
									"id": 854,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_612": {
									"entryPoint": 2527,
									"id": 612,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_112": {
									"entryPoint": 1883,
									"id": 112,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_1006": {
									"entryPoint": 2976,
									"id": 1006,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_979": {
									"entryPoint": 4148,
									"id": 979,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_990": {
									"entryPoint": 4075,
									"id": 990,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_771": {
									"entryPoint": 1908,
									"id": 771,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_916": {
									"entryPoint": 2781,
									"id": 916,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_502": {
									"entryPoint": 2054,
									"id": 502,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_1022": {
									"entryPoint": 2429,
									"id": 1022,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_579": {
									"entryPoint": 3538,
									"id": 579,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_399": {
									"entryPoint": 1621,
									"id": 399,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_423": {
									"entryPoint": 986,
									"id": 423,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_358": {
									"entryPoint": 1172,
									"id": 358,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_1136": {
									"entryPoint": 1260,
									"id": 1136,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_1097": {
									"entryPoint": 1137,
									"id": 1097,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_1070": {
									"entryPoint": 1075,
									"id": 1070,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_1085": {
									"entryPoint": 1115,
									"id": 1085,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_318": {
									"entryPoint": 842,
									"id": 318,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_837": {
									"entryPoint": 1403,
									"id": 837,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1145": {
									"entryPoint": 1385,
									"id": 1145,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_967": {
									"entryPoint": 1150,
									"id": 967,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_868": {
									"entryPoint": 1241,
									"id": 868,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_327": {
									"entryPoint": 1443,
									"id": 327,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_345": {
									"entryPoint": 1020,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_455": {
									"entryPoint": 1029,
									"id": 455,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_896": {
									"entryPoint": 1751,
									"id": 896,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_382": {
									"entryPoint": 1587,
									"id": 382,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_1154": {
									"entryPoint": 1097,
									"id": 1154,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7ef2c9f5e580187fcc8d6f6d699a2ef64f075db51a0688aa776a42d0c7069e3f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5277,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7ef2c9f5e580187fcc8d6f6d699a2ef64f075db51a0688aa776a42d0c7069e3f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4248,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5181,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4984,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4366,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 5381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 5485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7ef2c9f5e580187fcc8d6f6d699a2ef64f075db51a0688aa776a42d0c7069e3f": {
									"entryPoint": 5077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10712:1",
										"nodeType": "YulBlock",
										"src": "0:10712:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:1",
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nativeSrc": "77:22:1",
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nativeSrc": "87:12:1",
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:1",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:1",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nativeSrc": "208:73:1",
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nativeSrc": "218:19:1",
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nativeSrc": "218:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nativeSrc": "246:29:1",
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:1",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nativeSrc": "261:14:1",
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:1",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:1",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:1",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nativeSrc": "349:77:1",
													"nodeType": "YulBlock",
													"src": "349:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:1"
																},
																"nativeSrc": "360:23:1",
																"nodeType": "YulFunctionCall",
																"src": "360:23:1"
															},
															"nativeSrc": "360:23:1",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:1"
																		},
																		"nativeSrc": "399:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:1",
																		"nodeType": "YulLiteral",
																		"src": "417:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:1"
																},
																"nativeSrc": "392:27:1",
																"nodeType": "YulFunctionCall",
																"src": "392:27:1"
															},
															"nativeSrc": "392:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:1",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:1",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:1",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:139:1"
											},
											{
												"body": {
													"nativeSrc": "480:54:1",
													"nodeType": "YulBlock",
													"src": "480:54:1",
													"statements": [
														{
															"nativeSrc": "490:38:1",
															"nodeType": "YulAssignment",
															"src": "490:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:1",
																				"nodeType": "YulLiteral",
																				"src": "515:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:1"
																		},
																		"nativeSrc": "504:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:1",
																				"nodeType": "YulLiteral",
																				"src": "524:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:1"
																		},
																		"nativeSrc": "520:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:1"
																},
																"nativeSrc": "500:28:1",
																"nodeType": "YulFunctionCall",
																"src": "500:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:1",
														"nodeType": "YulTypedName",
														"src": "463:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:1",
														"nodeType": "YulTypedName",
														"src": "473:6:1",
														"type": ""
													}
												],
												"src": "432:102:1"
											},
											{
												"body": {
													"nativeSrc": "632:285:1",
													"nodeType": "YulBlock",
													"src": "632:285:1",
													"statements": [
														{
															"nativeSrc": "642:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:1"
																},
																"nativeSrc": "656:39:1",
																"nodeType": "YulFunctionCall",
																"src": "656:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:1",
																	"nodeType": "YulTypedName",
																	"src": "646:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:1",
															"nodeType": "YulAssignment",
															"src": "704:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:1"
																},
																"nativeSrc": "711:71:1",
																"nodeType": "YulFunctionCall",
																"src": "711:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:1",
																				"nodeType": "YulLiteral",
																				"src": "837:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:1"
																		},
																		"nativeSrc": "826:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:1"
																},
																"nativeSrc": "791:65:1",
																"nodeType": "YulFunctionCall",
																"src": "791:65:1"
															},
															"nativeSrc": "791:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:1"
														},
														{
															"nativeSrc": "865:46:1",
															"nodeType": "YulAssignment",
															"src": "865:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:1"
																		},
																		"nativeSrc": "881:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:1"
																},
																"nativeSrc": "872:39:1",
																"nodeType": "YulFunctionCall",
																"src": "872:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:1",
														"nodeType": "YulTypedName",
														"src": "613:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:1",
														"nodeType": "YulTypedName",
														"src": "620:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:1",
														"nodeType": "YulTypedName",
														"src": "628:3:1",
														"type": ""
													}
												],
												"src": "540:377:1"
											},
											{
												"body": {
													"nativeSrc": "1041:195:1",
													"nodeType": "YulBlock",
													"src": "1041:195:1",
													"statements": [
														{
															"nativeSrc": "1051:26:1",
															"nodeType": "YulAssignment",
															"src": "1051:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:1"
																},
																"nativeSrc": "1059:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:1"
																		},
																		"nativeSrc": "1094:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:1"
																		},
																		"nativeSrc": "1113:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:1"
																},
																"nativeSrc": "1087:47:1",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:1"
															},
															"nativeSrc": "1087:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:1"
														},
														{
															"nativeSrc": "1143:86:1",
															"nodeType": "YulAssignment",
															"src": "1143:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:1"
																},
																"nativeSrc": "1151:78:1",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:1",
														"nodeType": "YulTypedName",
														"src": "1013:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:1",
														"nodeType": "YulTypedName",
														"src": "1025:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:1",
														"nodeType": "YulTypedName",
														"src": "1036:4:1",
														"type": ""
													}
												],
												"src": "923:313:1"
											},
											{
												"body": {
													"nativeSrc": "1282:35:1",
													"nodeType": "YulBlock",
													"src": "1282:35:1",
													"statements": [
														{
															"nativeSrc": "1292:19:1",
															"nodeType": "YulAssignment",
															"src": "1292:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:1"
																},
																"nativeSrc": "1302:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:1",
														"nodeType": "YulTypedName",
														"src": "1275:6:1",
														"type": ""
													}
												],
												"src": "1242:75:1"
											},
											{
												"body": {
													"nativeSrc": "1412:28:1",
													"nodeType": "YulBlock",
													"src": "1412:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:1"
																},
																"nativeSrc": "1422:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:1"
															},
															"nativeSrc": "1422:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:1"
											},
											{
												"body": {
													"nativeSrc": "1535:28:1",
													"nodeType": "YulBlock",
													"src": "1535:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:1"
																},
																"nativeSrc": "1545:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:1"
															},
															"nativeSrc": "1545:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:1"
											},
											{
												"body": {
													"nativeSrc": "1614:81:1",
													"nodeType": "YulBlock",
													"src": "1614:81:1",
													"statements": [
														{
															"nativeSrc": "1624:65:1",
															"nodeType": "YulAssignment",
															"src": "1624:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:1",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:1"
																},
																"nativeSrc": "1635:54:1",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:1",
														"nodeType": "YulTypedName",
														"src": "1596:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:1",
														"nodeType": "YulTypedName",
														"src": "1606:7:1",
														"type": ""
													}
												],
												"src": "1569:126:1"
											},
											{
												"body": {
													"nativeSrc": "1746:51:1",
													"nodeType": "YulBlock",
													"src": "1746:51:1",
													"statements": [
														{
															"nativeSrc": "1756:35:1",
															"nodeType": "YulAssignment",
															"src": "1756:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:1"
																},
																"nativeSrc": "1767:24:1",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:1",
														"nodeType": "YulTypedName",
														"src": "1728:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:1",
														"nodeType": "YulTypedName",
														"src": "1738:7:1",
														"type": ""
													}
												],
												"src": "1701:96:1"
											},
											{
												"body": {
													"nativeSrc": "1846:79:1",
													"nodeType": "YulBlock",
													"src": "1846:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:1",
																"nodeType": "YulBlock",
																"src": "1903:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:1"
																			},
																			"nativeSrc": "1905:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:1"
																		},
																		"nativeSrc": "1905:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:1"
																				},
																				"nativeSrc": "1876:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:1"
																		},
																		"nativeSrc": "1866:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:1"
																},
																"nativeSrc": "1859:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:1"
															},
															"nativeSrc": "1856:63:1",
															"nodeType": "YulIf",
															"src": "1856:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:1",
														"nodeType": "YulTypedName",
														"src": "1839:5:1",
														"type": ""
													}
												],
												"src": "1803:122:1"
											},
											{
												"body": {
													"nativeSrc": "1983:87:1",
													"nodeType": "YulBlock",
													"src": "1983:87:1",
													"statements": [
														{
															"nativeSrc": "1993:29:1",
															"nodeType": "YulAssignment",
															"src": "1993:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:1"
																},
																"nativeSrc": "2002:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:1"
																},
																"nativeSrc": "2031:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:1"
															},
															"nativeSrc": "2031:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:1",
														"nodeType": "YulTypedName",
														"src": "1961:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:1",
														"nodeType": "YulTypedName",
														"src": "1969:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:1",
														"nodeType": "YulTypedName",
														"src": "1977:5:1",
														"type": ""
													}
												],
												"src": "1931:139:1"
											},
											{
												"body": {
													"nativeSrc": "2121:32:1",
													"nodeType": "YulBlock",
													"src": "2121:32:1",
													"statements": [
														{
															"nativeSrc": "2131:16:1",
															"nodeType": "YulAssignment",
															"src": "2131:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:1",
																"nodeType": "YulIdentifier",
																"src": "2142:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:1",
														"nodeType": "YulTypedName",
														"src": "2103:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:1",
														"nodeType": "YulTypedName",
														"src": "2113:7:1",
														"type": ""
													}
												],
												"src": "2076:77:1"
											},
											{
												"body": {
													"nativeSrc": "2202:79:1",
													"nodeType": "YulBlock",
													"src": "2202:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:1",
																"nodeType": "YulBlock",
																"src": "2259:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:1"
																			},
																			"nativeSrc": "2261:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:1"
																		},
																		"nativeSrc": "2261:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:1"
																				},
																				"nativeSrc": "2232:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:1"
																		},
																		"nativeSrc": "2222:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:1"
																},
																"nativeSrc": "2215:43:1",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:1"
															},
															"nativeSrc": "2212:63:1",
															"nodeType": "YulIf",
															"src": "2212:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:1",
														"nodeType": "YulTypedName",
														"src": "2195:5:1",
														"type": ""
													}
												],
												"src": "2159:122:1"
											},
											{
												"body": {
													"nativeSrc": "2339:87:1",
													"nodeType": "YulBlock",
													"src": "2339:87:1",
													"statements": [
														{
															"nativeSrc": "2349:29:1",
															"nodeType": "YulAssignment",
															"src": "2349:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:1"
																},
																"nativeSrc": "2358:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:1"
																},
																"nativeSrc": "2387:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:1"
															},
															"nativeSrc": "2387:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:1",
														"nodeType": "YulTypedName",
														"src": "2317:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:1",
														"nodeType": "YulTypedName",
														"src": "2325:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:1",
														"nodeType": "YulTypedName",
														"src": "2333:5:1",
														"type": ""
													}
												],
												"src": "2287:139:1"
											},
											{
												"body": {
													"nativeSrc": "2515:391:1",
													"nodeType": "YulBlock",
													"src": "2515:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:1",
																"nodeType": "YulBlock",
																"src": "2561:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:1"
																			},
																			"nativeSrc": "2563:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:1"
																		},
																		"nativeSrc": "2563:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:1"
																		},
																		"nativeSrc": "2532:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:1"
																},
																"nativeSrc": "2528:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:1"
															},
															"nativeSrc": "2525:119:1",
															"nodeType": "YulIf",
															"src": "2525:119:1"
														},
														{
															"nativeSrc": "2654:117:1",
															"nodeType": "YulBlock",
															"src": "2654:117:1",
															"statements": [
																{
																	"nativeSrc": "2669:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:1"
																				},
																				"nativeSrc": "2729:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:1"
																		},
																		"nativeSrc": "2708:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:1",
															"nodeType": "YulBlock",
															"src": "2781:118:1",
															"statements": [
																{
																	"nativeSrc": "2796:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:1"
																				},
																				"nativeSrc": "2857:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:1"
																		},
																		"nativeSrc": "2836:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:1",
														"nodeType": "YulTypedName",
														"src": "2477:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:1",
														"nodeType": "YulTypedName",
														"src": "2488:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:1",
														"nodeType": "YulTypedName",
														"src": "2500:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:1",
														"nodeType": "YulTypedName",
														"src": "2508:6:1",
														"type": ""
													}
												],
												"src": "2432:474:1"
											},
											{
												"body": {
													"nativeSrc": "2954:48:1",
													"nodeType": "YulBlock",
													"src": "2954:48:1",
													"statements": [
														{
															"nativeSrc": "2964:32:1",
															"nodeType": "YulAssignment",
															"src": "2964:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:1"
																		},
																		"nativeSrc": "2982:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:1"
																},
																"nativeSrc": "2975:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:1",
														"nodeType": "YulTypedName",
														"src": "2936:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:1",
														"nodeType": "YulTypedName",
														"src": "2946:7:1",
														"type": ""
													}
												],
												"src": "2912:90:1"
											},
											{
												"body": {
													"nativeSrc": "3067:50:1",
													"nodeType": "YulBlock",
													"src": "3067:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:1"
																		},
																		"nativeSrc": "3089:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:1"
																},
																"nativeSrc": "3077:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:1"
															},
															"nativeSrc": "3077:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:1",
														"nodeType": "YulTypedName",
														"src": "3055:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:1",
														"nodeType": "YulTypedName",
														"src": "3062:3:1",
														"type": ""
													}
												],
												"src": "3008:109:1"
											},
											{
												"body": {
													"nativeSrc": "3215:118:1",
													"nodeType": "YulBlock",
													"src": "3215:118:1",
													"statements": [
														{
															"nativeSrc": "3225:26:1",
															"nodeType": "YulAssignment",
															"src": "3225:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:1"
																},
																"nativeSrc": "3233:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:1"
																		},
																		"nativeSrc": "3308:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:1"
																},
																"nativeSrc": "3261:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:1"
															},
															"nativeSrc": "3261:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:1",
														"nodeType": "YulTypedName",
														"src": "3187:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:1",
														"nodeType": "YulTypedName",
														"src": "3199:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:1",
														"nodeType": "YulTypedName",
														"src": "3210:4:1",
														"type": ""
													}
												],
												"src": "3123:210:1"
											},
											{
												"body": {
													"nativeSrc": "3404:53:1",
													"nodeType": "YulBlock",
													"src": "3404:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:1"
																		},
																		"nativeSrc": "3426:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:1"
																},
																"nativeSrc": "3414:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:1"
															},
															"nativeSrc": "3414:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:1",
														"nodeType": "YulTypedName",
														"src": "3392:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:1",
														"nodeType": "YulTypedName",
														"src": "3399:3:1",
														"type": ""
													}
												],
												"src": "3339:118:1"
											},
											{
												"body": {
													"nativeSrc": "3561:124:1",
													"nodeType": "YulBlock",
													"src": "3561:124:1",
													"statements": [
														{
															"nativeSrc": "3571:26:1",
															"nodeType": "YulAssignment",
															"src": "3571:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:1"
																},
																"nativeSrc": "3579:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:1"
																		},
																		"nativeSrc": "3660:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:1"
																},
																"nativeSrc": "3607:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:1"
															},
															"nativeSrc": "3607:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:1",
														"nodeType": "YulTypedName",
														"src": "3533:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:1",
														"nodeType": "YulTypedName",
														"src": "3545:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:1",
														"nodeType": "YulTypedName",
														"src": "3556:4:1",
														"type": ""
													}
												],
												"src": "3463:222:1"
											},
											{
												"body": {
													"nativeSrc": "3791:519:1",
													"nodeType": "YulBlock",
													"src": "3791:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:1",
																"nodeType": "YulBlock",
																"src": "3837:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:1"
																			},
																			"nativeSrc": "3839:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:1"
																		},
																		"nativeSrc": "3839:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:1"
																		},
																		"nativeSrc": "3808:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:1"
																},
																"nativeSrc": "3804:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:1"
															},
															"nativeSrc": "3801:119:1",
															"nodeType": "YulIf",
															"src": "3801:119:1"
														},
														{
															"nativeSrc": "3930:117:1",
															"nodeType": "YulBlock",
															"src": "3930:117:1",
															"statements": [
																{
																	"nativeSrc": "3945:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:1"
																				},
																				"nativeSrc": "4005:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:1"
																		},
																		"nativeSrc": "3984:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:1",
															"nodeType": "YulBlock",
															"src": "4057:118:1",
															"statements": [
																{
																	"nativeSrc": "4072:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:1"
																				},
																				"nativeSrc": "4133:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:1"
																		},
																		"nativeSrc": "4112:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:1",
															"nodeType": "YulBlock",
															"src": "4185:118:1",
															"statements": [
																{
																	"nativeSrc": "4200:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:1"
																				},
																				"nativeSrc": "4261:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:1"
																		},
																		"nativeSrc": "4240:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:1",
														"nodeType": "YulTypedName",
														"src": "3745:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:1",
														"nodeType": "YulTypedName",
														"src": "3756:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:1",
														"nodeType": "YulTypedName",
														"src": "3768:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:1",
														"nodeType": "YulTypedName",
														"src": "3776:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:1",
														"nodeType": "YulTypedName",
														"src": "3784:6:1",
														"type": ""
													}
												],
												"src": "3691:619:1"
											},
											{
												"body": {
													"nativeSrc": "4359:43:1",
													"nodeType": "YulBlock",
													"src": "4359:43:1",
													"statements": [
														{
															"nativeSrc": "4369:27:1",
															"nodeType": "YulAssignment",
															"src": "4369:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:1"
																},
																"nativeSrc": "4380:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:1",
														"nodeType": "YulTypedName",
														"src": "4341:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:1",
														"nodeType": "YulTypedName",
														"src": "4351:7:1",
														"type": ""
													}
												],
												"src": "4316:86:1"
											},
											{
												"body": {
													"nativeSrc": "4469:51:1",
													"nodeType": "YulBlock",
													"src": "4469:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:1",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:1"
																		},
																		"nativeSrc": "4491:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:1"
																},
																"nativeSrc": "4479:35:1",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:1"
															},
															"nativeSrc": "4479:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:1",
														"nodeType": "YulTypedName",
														"src": "4457:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:1",
														"nodeType": "YulTypedName",
														"src": "4464:3:1",
														"type": ""
													}
												],
												"src": "4408:112:1"
											},
											{
												"body": {
													"nativeSrc": "4620:120:1",
													"nodeType": "YulBlock",
													"src": "4620:120:1",
													"statements": [
														{
															"nativeSrc": "4630:26:1",
															"nodeType": "YulAssignment",
															"src": "4630:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:1"
																},
																"nativeSrc": "4638:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:1"
																		},
																		"nativeSrc": "4715:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:1",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:1"
																},
																"nativeSrc": "4666:67:1",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:1"
															},
															"nativeSrc": "4666:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:1",
														"nodeType": "YulTypedName",
														"src": "4592:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:1",
														"nodeType": "YulTypedName",
														"src": "4604:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:1",
														"nodeType": "YulTypedName",
														"src": "4615:4:1",
														"type": ""
													}
												],
												"src": "4526:214:1"
											},
											{
												"body": {
													"nativeSrc": "4812:263:1",
													"nodeType": "YulBlock",
													"src": "4812:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:1",
																"nodeType": "YulBlock",
																"src": "4858:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:1"
																			},
																			"nativeSrc": "4860:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:1"
																		},
																		"nativeSrc": "4860:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:1"
																		},
																		"nativeSrc": "4829:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:1"
																},
																"nativeSrc": "4825:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:1"
															},
															"nativeSrc": "4822:119:1",
															"nodeType": "YulIf",
															"src": "4822:119:1"
														},
														{
															"nativeSrc": "4951:117:1",
															"nodeType": "YulBlock",
															"src": "4951:117:1",
															"statements": [
																{
																	"nativeSrc": "4966:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:1"
																				},
																				"nativeSrc": "5026:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5005:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:1"
																		},
																		"nativeSrc": "5005:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4746:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:1",
														"nodeType": "YulTypedName",
														"src": "4782:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:1",
														"nodeType": "YulTypedName",
														"src": "4793:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:1",
														"nodeType": "YulTypedName",
														"src": "4805:6:1",
														"type": ""
													}
												],
												"src": "4746:329:1"
											},
											{
												"body": {
													"nativeSrc": "5147:263:1",
													"nodeType": "YulBlock",
													"src": "5147:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:1",
																"nodeType": "YulBlock",
																"src": "5193:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:1"
																			},
																			"nativeSrc": "5195:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:1"
																		},
																		"nativeSrc": "5195:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:1"
																		},
																		"nativeSrc": "5164:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:1"
																},
																"nativeSrc": "5160:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:1"
															},
															"nativeSrc": "5157:119:1",
															"nodeType": "YulIf",
															"src": "5157:119:1"
														},
														{
															"nativeSrc": "5286:117:1",
															"nodeType": "YulBlock",
															"src": "5286:117:1",
															"statements": [
																{
																	"nativeSrc": "5301:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:1"
																				},
																				"nativeSrc": "5361:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5340:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:1"
																		},
																		"nativeSrc": "5340:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5081:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:1",
														"nodeType": "YulTypedName",
														"src": "5117:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:1",
														"nodeType": "YulTypedName",
														"src": "5128:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:1",
														"nodeType": "YulTypedName",
														"src": "5140:6:1",
														"type": ""
													}
												],
												"src": "5081:329:1"
											},
											{
												"body": {
													"nativeSrc": "5481:53:1",
													"nodeType": "YulBlock",
													"src": "5481:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5498:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5498:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5521:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5521:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5503:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "5503:17:1"
																		},
																		"nativeSrc": "5503:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5491:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:1"
																},
																"nativeSrc": "5491:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5491:37:1"
															},
															"nativeSrc": "5491:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "5491:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5416:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5469:5:1",
														"nodeType": "YulTypedName",
														"src": "5469:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5476:3:1",
														"nodeType": "YulTypedName",
														"src": "5476:3:1",
														"type": ""
													}
												],
												"src": "5416:118:1"
											},
											{
												"body": {
													"nativeSrc": "5638:124:1",
													"nodeType": "YulBlock",
													"src": "5638:124:1",
													"statements": [
														{
															"nativeSrc": "5648:26:1",
															"nodeType": "YulAssignment",
															"src": "5648:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5660:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5660:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5671:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5656:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5656:3:1"
																},
																"nativeSrc": "5656:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5656:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5648:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5648:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5728:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5741:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5737:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:1"
																		},
																		"nativeSrc": "5737:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5684:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "5684:43:1"
																},
																"nativeSrc": "5684:71:1",
																"nodeType": "YulFunctionCall",
																"src": "5684:71:1"
															},
															"nativeSrc": "5684:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "5684:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5540:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5610:9:1",
														"nodeType": "YulTypedName",
														"src": "5610:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5622:6:1",
														"nodeType": "YulTypedName",
														"src": "5622:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5633:4:1",
														"nodeType": "YulTypedName",
														"src": "5633:4:1",
														"type": ""
													}
												],
												"src": "5540:222:1"
											},
											{
												"body": {
													"nativeSrc": "5851:391:1",
													"nodeType": "YulBlock",
													"src": "5851:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:83:1",
																"nodeType": "YulBlock",
																"src": "5897:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5899:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5899:77:1"
																			},
																			"nativeSrc": "5899:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:79:1"
																		},
																		"nativeSrc": "5899:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:1"
																		},
																		"nativeSrc": "5868:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5864:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:1"
																},
																"nativeSrc": "5864:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5864:32:1"
															},
															"nativeSrc": "5861:119:1",
															"nodeType": "YulIf",
															"src": "5861:119:1"
														},
														{
															"nativeSrc": "5990:117:1",
															"nodeType": "YulBlock",
															"src": "5990:117:1",
															"statements": [
																{
																	"nativeSrc": "6005:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6005:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6019:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6019:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6009:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6009:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6034:63:1",
																	"nodeType": "YulAssignment",
																	"src": "6034:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6069:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6069:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6080:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6080:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6065:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6065:3:1"
																				},
																				"nativeSrc": "6065:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6065:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6089:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6089:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6044:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "6044:20:1"
																		},
																		"nativeSrc": "6044:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6034:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6034:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6117:118:1",
															"nodeType": "YulBlock",
															"src": "6117:118:1",
															"statements": [
																{
																	"nativeSrc": "6132:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6132:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6146:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6146:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6136:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6136:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:1",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:1"
																				},
																				"nativeSrc": "6193:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6172:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:1"
																		},
																		"nativeSrc": "6172:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6162:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5768:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:1",
														"nodeType": "YulTypedName",
														"src": "5813:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5824:7:1",
														"nodeType": "YulTypedName",
														"src": "5824:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5836:6:1",
														"nodeType": "YulTypedName",
														"src": "5836:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:1",
														"nodeType": "YulTypedName",
														"src": "5844:6:1",
														"type": ""
													}
												],
												"src": "5768:474:1"
											},
											{
												"body": {
													"nativeSrc": "6276:152:1",
													"nodeType": "YulBlock",
													"src": "6276:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6293:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6293:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6296:77:1",
																		"nodeType": "YulLiteral",
																		"src": "6296:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:1"
																},
																"nativeSrc": "6286:88:1",
																"nodeType": "YulFunctionCall",
																"src": "6286:88:1"
															},
															"nativeSrc": "6286:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "6286:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6390:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6390:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6393:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6393:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:1"
																},
																"nativeSrc": "6383:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6383:15:1"
															},
															"nativeSrc": "6383:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6383:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6414:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6417:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6417:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6407:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:1"
																},
																"nativeSrc": "6407:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6407:15:1"
															},
															"nativeSrc": "6407:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6407:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6248:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "6248:180:1"
											},
											{
												"body": {
													"nativeSrc": "6485:269:1",
													"nodeType": "YulBlock",
													"src": "6485:269:1",
													"statements": [
														{
															"nativeSrc": "6495:22:1",
															"nodeType": "YulAssignment",
															"src": "6495:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6509:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6509:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6515:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6515:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6505:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:1"
																},
																"nativeSrc": "6505:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6505:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6495:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:1"
																}
															]
														},
														{
															"nativeSrc": "6526:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6526:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6556:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6556:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6552:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:1"
																},
																"nativeSrc": "6552:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6552:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6530:18:1",
																	"nodeType": "YulTypedName",
																	"src": "6530:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6603:51:1",
																"nodeType": "YulBlock",
																"src": "6603:51:1",
																"statements": [
																	{
																		"nativeSrc": "6617:27:1",
																		"nodeType": "YulAssignment",
																		"src": "6617:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6631:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "6631:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6639:4:1",
																					"nodeType": "YulLiteral",
																					"src": "6639:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6627:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6627:3:1"
																			},
																			"nativeSrc": "6627:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6627:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6617:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6617:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6583:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "6583:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6576:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:1"
																},
																"nativeSrc": "6576:26:1",
																"nodeType": "YulFunctionCall",
																"src": "6576:26:1"
															},
															"nativeSrc": "6573:81:1",
															"nodeType": "YulIf",
															"src": "6573:81:1"
														},
														{
															"body": {
																"nativeSrc": "6706:42:1",
																"nodeType": "YulBlock",
																"src": "6706:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6720:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "6720:16:1"
																			},
																			"nativeSrc": "6720:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6720:18:1"
																		},
																		"nativeSrc": "6720:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6720:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6670:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "6670:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6693:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6701:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6690:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "6690:2:1"
																		},
																		"nativeSrc": "6690:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6667:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6667:2:1"
																},
																"nativeSrc": "6667:38:1",
																"nodeType": "YulFunctionCall",
																"src": "6667:38:1"
															},
															"nativeSrc": "6664:84:1",
															"nodeType": "YulIf",
															"src": "6664:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6434:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6469:4:1",
														"nodeType": "YulTypedName",
														"src": "6469:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6478:6:1",
														"nodeType": "YulTypedName",
														"src": "6478:6:1",
														"type": ""
													}
												],
												"src": "6434:320:1"
											},
											{
												"body": {
													"nativeSrc": "6866:73:1",
													"nodeType": "YulBlock",
													"src": "6866:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6888:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6888:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6896:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6896:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6884:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6884:3:1"
																		},
																		"nativeSrc": "6884:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6884:14:1"
																	},
																	{
																		"hexValue": "4275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "6900:31:1",
																		"nodeType": "YulLiteral",
																		"src": "6900:31:1",
																		"type": "",
																		"value": "Burn amount exceeds allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6877:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6877:6:1"
																},
																"nativeSrc": "6877:55:1",
																"nodeType": "YulFunctionCall",
																"src": "6877:55:1"
															},
															"nativeSrc": "6877:55:1",
															"nodeType": "YulExpressionStatement",
															"src": "6877:55:1"
														}
													]
												},
												"name": "store_literal_in_memory_7ef2c9f5e580187fcc8d6f6d699a2ef64f075db51a0688aa776a42d0c7069e3f",
												"nativeSrc": "6760:179:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6858:6:1",
														"nodeType": "YulTypedName",
														"src": "6858:6:1",
														"type": ""
													}
												],
												"src": "6760:179:1"
											},
											{
												"body": {
													"nativeSrc": "7091:220:1",
													"nodeType": "YulBlock",
													"src": "7091:220:1",
													"statements": [
														{
															"nativeSrc": "7101:74:1",
															"nodeType": "YulAssignment",
															"src": "7101:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7167:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7167:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7172:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7172:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7108:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "7108:58:1"
																},
																"nativeSrc": "7108:67:1",
																"nodeType": "YulFunctionCall",
																"src": "7108:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7101:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7101:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7273:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7273:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7ef2c9f5e580187fcc8d6f6d699a2ef64f075db51a0688aa776a42d0c7069e3f",
																	"nativeSrc": "7184:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "7184:88:1"
																},
																"nativeSrc": "7184:93:1",
																"nodeType": "YulFunctionCall",
																"src": "7184:93:1"
															},
															"nativeSrc": "7184:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "7184:93:1"
														},
														{
															"nativeSrc": "7286:19:1",
															"nodeType": "YulAssignment",
															"src": "7286:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7297:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7297:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7302:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7302:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7293:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7293:3:1"
																},
																"nativeSrc": "7293:12:1",
																"nodeType": "YulFunctionCall",
																"src": "7293:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7286:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7286:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7ef2c9f5e580187fcc8d6f6d699a2ef64f075db51a0688aa776a42d0c7069e3f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6945:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7079:3:1",
														"nodeType": "YulTypedName",
														"src": "7079:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7087:3:1",
														"nodeType": "YulTypedName",
														"src": "7087:3:1",
														"type": ""
													}
												],
												"src": "6945:366:1"
											},
											{
												"body": {
													"nativeSrc": "7488:248:1",
													"nodeType": "YulBlock",
													"src": "7488:248:1",
													"statements": [
														{
															"nativeSrc": "7498:26:1",
															"nodeType": "YulAssignment",
															"src": "7498:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7510:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7510:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7521:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7521:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7506:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7506:3:1"
																},
																"nativeSrc": "7506:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7506:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7498:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7498:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7545:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7545:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7556:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7556:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7541:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7541:3:1"
																		},
																		"nativeSrc": "7541:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7541:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7564:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "7564:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7570:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7570:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7560:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7560:3:1"
																		},
																		"nativeSrc": "7560:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7560:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7534:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7534:6:1"
																},
																"nativeSrc": "7534:47:1",
																"nodeType": "YulFunctionCall",
																"src": "7534:47:1"
															},
															"nativeSrc": "7534:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "7534:47:1"
														},
														{
															"nativeSrc": "7590:139:1",
															"nodeType": "YulAssignment",
															"src": "7590:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7724:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7724:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7ef2c9f5e580187fcc8d6f6d699a2ef64f075db51a0688aa776a42d0c7069e3f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7598:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "7598:124:1"
																},
																"nativeSrc": "7598:131:1",
																"nodeType": "YulFunctionCall",
																"src": "7598:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7590:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7590:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7ef2c9f5e580187fcc8d6f6d699a2ef64f075db51a0688aa776a42d0c7069e3f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7317:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7468:9:1",
														"nodeType": "YulTypedName",
														"src": "7468:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7483:4:1",
														"nodeType": "YulTypedName",
														"src": "7483:4:1",
														"type": ""
													}
												],
												"src": "7317:419:1"
											},
											{
												"body": {
													"nativeSrc": "7770:152:1",
													"nodeType": "YulBlock",
													"src": "7770:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7787:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7787:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7790:77:1",
																		"nodeType": "YulLiteral",
																		"src": "7790:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7780:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7780:6:1"
																},
																"nativeSrc": "7780:88:1",
																"nodeType": "YulFunctionCall",
																"src": "7780:88:1"
															},
															"nativeSrc": "7780:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "7780:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7884:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7884:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7887:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7887:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7877:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7877:6:1"
																},
																"nativeSrc": "7877:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7877:15:1"
															},
															"nativeSrc": "7877:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7877:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7908:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7908:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7911:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7911:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7901:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7901:6:1"
																},
																"nativeSrc": "7901:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7901:15:1"
															},
															"nativeSrc": "7901:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7901:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7742:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7742:180:1"
											},
											{
												"body": {
													"nativeSrc": "7973:149:1",
													"nodeType": "YulBlock",
													"src": "7973:149:1",
													"statements": [
														{
															"nativeSrc": "7983:25:1",
															"nodeType": "YulAssignment",
															"src": "7983:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8006:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8006:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7988:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "7988:17:1"
																},
																"nativeSrc": "7988:20:1",
																"nodeType": "YulFunctionCall",
																"src": "7988:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7983:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "7983:1:1"
																}
															]
														},
														{
															"nativeSrc": "8017:25:1",
															"nodeType": "YulAssignment",
															"src": "8017:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8040:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8040:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8022:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8022:17:1"
																},
																"nativeSrc": "8022:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8022:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8017:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8017:1:1"
																}
															]
														},
														{
															"nativeSrc": "8051:17:1",
															"nodeType": "YulAssignment",
															"src": "8051:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8063:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8063:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8066:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8066:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8059:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8059:3:1"
																},
																"nativeSrc": "8059:9:1",
																"nodeType": "YulFunctionCall",
																"src": "8059:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8051:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8051:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8093:22:1",
																"nodeType": "YulBlock",
																"src": "8093:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8095:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8095:16:1"
																			},
																			"nativeSrc": "8095:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8095:18:1"
																		},
																		"nativeSrc": "8095:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8095:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8084:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8084:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8090:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8090:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8081:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8081:2:1"
																},
																"nativeSrc": "8081:11:1",
																"nodeType": "YulFunctionCall",
																"src": "8081:11:1"
															},
															"nativeSrc": "8078:37:1",
															"nodeType": "YulIf",
															"src": "8078:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7928:194:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7959:1:1",
														"nodeType": "YulTypedName",
														"src": "7959:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7962:1:1",
														"nodeType": "YulTypedName",
														"src": "7962:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7968:4:1",
														"nodeType": "YulTypedName",
														"src": "7968:4:1",
														"type": ""
													}
												],
												"src": "7928:194:1"
											},
											{
												"body": {
													"nativeSrc": "8282:288:1",
													"nodeType": "YulBlock",
													"src": "8282:288:1",
													"statements": [
														{
															"nativeSrc": "8292:26:1",
															"nodeType": "YulAssignment",
															"src": "8292:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8304:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8304:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8315:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8315:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8300:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8300:3:1"
																},
																"nativeSrc": "8300:18:1",
																"nodeType": "YulFunctionCall",
																"src": "8300:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8292:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8292:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8372:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8372:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8385:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8385:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8396:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8396:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8381:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8381:3:1"
																		},
																		"nativeSrc": "8381:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8381:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8328:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8328:43:1"
																},
																"nativeSrc": "8328:71:1",
																"nodeType": "YulFunctionCall",
																"src": "8328:71:1"
															},
															"nativeSrc": "8328:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "8328:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8453:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8453:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8466:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8466:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8477:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8477:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8462:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8462:3:1"
																		},
																		"nativeSrc": "8462:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8462:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8409:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8409:43:1"
																},
																"nativeSrc": "8409:72:1",
																"nodeType": "YulFunctionCall",
																"src": "8409:72:1"
															},
															"nativeSrc": "8409:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "8409:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8535:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8535:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8548:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8548:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8559:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8559:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8544:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8544:3:1"
																		},
																		"nativeSrc": "8544:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8544:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8491:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8491:43:1"
																},
																"nativeSrc": "8491:72:1",
																"nodeType": "YulFunctionCall",
																"src": "8491:72:1"
															},
															"nativeSrc": "8491:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "8491:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8128:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8238:9:1",
														"nodeType": "YulTypedName",
														"src": "8238:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8250:6:1",
														"nodeType": "YulTypedName",
														"src": "8250:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8258:6:1",
														"nodeType": "YulTypedName",
														"src": "8258:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8266:6:1",
														"nodeType": "YulTypedName",
														"src": "8266:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8277:4:1",
														"nodeType": "YulTypedName",
														"src": "8277:4:1",
														"type": ""
													}
												],
												"src": "8128:442:1"
											},
											{
												"body": {
													"nativeSrc": "8620:147:1",
													"nodeType": "YulBlock",
													"src": "8620:147:1",
													"statements": [
														{
															"nativeSrc": "8630:25:1",
															"nodeType": "YulAssignment",
															"src": "8630:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8653:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8653:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8635:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8635:17:1"
																},
																"nativeSrc": "8635:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8635:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8630:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8630:1:1"
																}
															]
														},
														{
															"nativeSrc": "8664:25:1",
															"nodeType": "YulAssignment",
															"src": "8664:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8687:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8687:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8669:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8669:17:1"
																},
																"nativeSrc": "8669:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8669:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8664:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8664:1:1"
																}
															]
														},
														{
															"nativeSrc": "8698:16:1",
															"nodeType": "YulAssignment",
															"src": "8698:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8709:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8709:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8712:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8712:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8705:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8705:3:1"
																},
																"nativeSrc": "8705:9:1",
																"nodeType": "YulFunctionCall",
																"src": "8705:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8698:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8698:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8738:22:1",
																"nodeType": "YulBlock",
																"src": "8738:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8740:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8740:16:1"
																			},
																			"nativeSrc": "8740:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8740:18:1"
																		},
																		"nativeSrc": "8740:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8740:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8730:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8730:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8733:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8733:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8727:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8727:2:1"
																},
																"nativeSrc": "8727:10:1",
																"nodeType": "YulFunctionCall",
																"src": "8727:10:1"
															},
															"nativeSrc": "8724:36:1",
															"nodeType": "YulIf",
															"src": "8724:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8576:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8607:1:1",
														"nodeType": "YulTypedName",
														"src": "8607:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8610:1:1",
														"nodeType": "YulTypedName",
														"src": "8610:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8616:3:1",
														"nodeType": "YulTypedName",
														"src": "8616:3:1",
														"type": ""
													}
												],
												"src": "8576:191:1"
											},
											{
												"body": {
													"nativeSrc": "8879:64:1",
													"nodeType": "YulBlock",
													"src": "8879:64:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8901:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8901:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8909:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8909:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8897:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8897:3:1"
																		},
																		"nativeSrc": "8897:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8897:14:1"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "8913:22:1",
																		"nodeType": "YulLiteral",
																		"src": "8913:22:1",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8890:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8890:6:1"
																},
																"nativeSrc": "8890:46:1",
																"nodeType": "YulFunctionCall",
																"src": "8890:46:1"
															},
															"nativeSrc": "8890:46:1",
															"nodeType": "YulExpressionStatement",
															"src": "8890:46:1"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "8773:170:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8871:6:1",
														"nodeType": "YulTypedName",
														"src": "8871:6:1",
														"type": ""
													}
												],
												"src": "8773:170:1"
											},
											{
												"body": {
													"nativeSrc": "9095:220:1",
													"nodeType": "YulBlock",
													"src": "9095:220:1",
													"statements": [
														{
															"nativeSrc": "9105:74:1",
															"nodeType": "YulAssignment",
															"src": "9105:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9171:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9171:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9176:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9176:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9112:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "9112:58:1"
																},
																"nativeSrc": "9112:67:1",
																"nodeType": "YulFunctionCall",
																"src": "9112:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9105:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9105:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9277:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9277:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "9188:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "9188:88:1"
																},
																"nativeSrc": "9188:93:1",
																"nodeType": "YulFunctionCall",
																"src": "9188:93:1"
															},
															"nativeSrc": "9188:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "9188:93:1"
														},
														{
															"nativeSrc": "9290:19:1",
															"nodeType": "YulAssignment",
															"src": "9290:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9301:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9301:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9306:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9306:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9297:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9297:3:1"
																},
																"nativeSrc": "9297:12:1",
																"nodeType": "YulFunctionCall",
																"src": "9297:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9290:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9290:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8949:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9083:3:1",
														"nodeType": "YulTypedName",
														"src": "9083:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9091:3:1",
														"nodeType": "YulTypedName",
														"src": "9091:3:1",
														"type": ""
													}
												],
												"src": "8949:366:1"
											},
											{
												"body": {
													"nativeSrc": "9492:248:1",
													"nodeType": "YulBlock",
													"src": "9492:248:1",
													"statements": [
														{
															"nativeSrc": "9502:26:1",
															"nodeType": "YulAssignment",
															"src": "9502:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9514:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9514:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9525:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9525:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9510:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9510:3:1"
																},
																"nativeSrc": "9510:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9510:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9502:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9502:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9549:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9549:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9560:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9560:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9545:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9545:3:1"
																		},
																		"nativeSrc": "9545:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9545:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9568:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "9568:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9574:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9574:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9564:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9564:3:1"
																		},
																		"nativeSrc": "9564:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9564:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9538:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9538:6:1"
																},
																"nativeSrc": "9538:47:1",
																"nodeType": "YulFunctionCall",
																"src": "9538:47:1"
															},
															"nativeSrc": "9538:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "9538:47:1"
														},
														{
															"nativeSrc": "9594:139:1",
															"nodeType": "YulAssignment",
															"src": "9594:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9728:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9728:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9602:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "9602:124:1"
																},
																"nativeSrc": "9602:131:1",
																"nodeType": "YulFunctionCall",
																"src": "9602:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9594:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9594:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9321:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9472:9:1",
														"nodeType": "YulTypedName",
														"src": "9472:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9487:4:1",
														"nodeType": "YulTypedName",
														"src": "9487:4:1",
														"type": ""
													}
												],
												"src": "9321:419:1"
											},
											{
												"body": {
													"nativeSrc": "9852:60:1",
													"nodeType": "YulBlock",
													"src": "9852:60:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9874:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9874:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9882:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9882:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9870:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9870:3:1"
																		},
																		"nativeSrc": "9870:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9870:14:1"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "9886:18:1",
																		"nodeType": "YulLiteral",
																		"src": "9886:18:1",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9863:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9863:6:1"
																},
																"nativeSrc": "9863:42:1",
																"nodeType": "YulFunctionCall",
																"src": "9863:42:1"
															},
															"nativeSrc": "9863:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "9863:42:1"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "9746:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9844:6:1",
														"nodeType": "YulTypedName",
														"src": "9844:6:1",
														"type": ""
													}
												],
												"src": "9746:166:1"
											},
											{
												"body": {
													"nativeSrc": "10064:220:1",
													"nodeType": "YulBlock",
													"src": "10064:220:1",
													"statements": [
														{
															"nativeSrc": "10074:74:1",
															"nodeType": "YulAssignment",
															"src": "10074:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10140:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10140:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10145:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10145:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10081:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "10081:58:1"
																},
																"nativeSrc": "10081:67:1",
																"nodeType": "YulFunctionCall",
																"src": "10081:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10074:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10074:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10246:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10246:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "10157:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "10157:88:1"
																},
																"nativeSrc": "10157:93:1",
																"nodeType": "YulFunctionCall",
																"src": "10157:93:1"
															},
															"nativeSrc": "10157:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "10157:93:1"
														},
														{
															"nativeSrc": "10259:19:1",
															"nodeType": "YulAssignment",
															"src": "10259:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10270:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10270:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10275:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10275:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10266:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10266:3:1"
																},
																"nativeSrc": "10266:12:1",
																"nodeType": "YulFunctionCall",
																"src": "10266:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10259:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10259:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9918:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10052:3:1",
														"nodeType": "YulTypedName",
														"src": "10052:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10060:3:1",
														"nodeType": "YulTypedName",
														"src": "10060:3:1",
														"type": ""
													}
												],
												"src": "9918:366:1"
											},
											{
												"body": {
													"nativeSrc": "10461:248:1",
													"nodeType": "YulBlock",
													"src": "10461:248:1",
													"statements": [
														{
															"nativeSrc": "10471:26:1",
															"nodeType": "YulAssignment",
															"src": "10471:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10483:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10483:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10494:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10494:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10479:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10479:3:1"
																},
																"nativeSrc": "10479:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10479:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10471:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10471:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10518:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10518:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10529:1:1",
																				"nodeType": "YulLiteral",
																				"src": "10529:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10514:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10514:3:1"
																		},
																		"nativeSrc": "10514:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10514:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10537:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "10537:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10543:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10543:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10533:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10533:3:1"
																		},
																		"nativeSrc": "10533:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10533:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10507:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10507:6:1"
																},
																"nativeSrc": "10507:47:1",
																"nodeType": "YulFunctionCall",
																"src": "10507:47:1"
															},
															"nativeSrc": "10507:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "10507:47:1"
														},
														{
															"nativeSrc": "10563:139:1",
															"nodeType": "YulAssignment",
															"src": "10563:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10697:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "10697:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10571:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "10571:124:1"
																},
																"nativeSrc": "10571:131:1",
																"nodeType": "YulFunctionCall",
																"src": "10571:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10563:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10563:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10290:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10441:9:1",
														"nodeType": "YulTypedName",
														"src": "10441:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10456:4:1",
														"nodeType": "YulTypedName",
														"src": "10456:4:1",
														"type": ""
													}
												],
												"src": "10290:419:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_7ef2c9f5e580187fcc8d6f6d699a2ef64f075db51a0688aa776a42d0c7069e3f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Burn amount exceeds allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_7ef2c9f5e580187fcc8d6f6d699a2ef64f075db51a0688aa776a42d0c7069e3f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_7ef2c9f5e580187fcc8d6f6d699a2ef64f075db51a0688aa776a42d0c7069e3f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7ef2c9f5e580187fcc8d6f6d699a2ef64f075db51a0688aa776a42d0c7069e3f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7ef2c9f5e580187fcc8d6f6d699a2ef64f075db51a0688aa776a42d0c7069e3f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610114575f3560e01c806370a08231116100a05780638da5cb5b1161006f5780638da5cb5b1461029257806395d89b41146102b0578063a9059cbb146102ce578063dd62ed3e146102fe578063f2fde38b1461032e57610114565b806370a0823114610232578063715018a61461026257806379cc67901461026c5780638456cb591461028857610114565b8063313ce567116100e7578063313ce567146101b45780633f4ba83a146101d257806340c10f19146101dc57806342966c68146101f85780635c975abb1461021457610114565b806306fdde0314610118578063095ea7b31461013657806318160ddd1461016657806323b872dd14610184575b5f5ffd5b61012061034a565b60405161012d91906110ee565b60405180910390f35b610150600480360381019061014b919061119f565b6103da565b60405161015d91906111f7565b60405180910390f35b61016e6103fc565b60405161017b919061121f565b60405180910390f35b61019e60048036038101906101999190611238565b610405565b6040516101ab91906111f7565b60405180910390f35b6101bc610433565b6040516101c991906112a3565b60405180910390f35b6101da610449565b005b6101f660048036038101906101f1919061119f565b61045b565b005b610212600480360381019061020d91906112bc565b610471565b005b61021c61047e565b60405161022991906111f7565b60405180910390f35b61024c600480360381019061024791906112e7565b610494565b604051610259919061121f565b60405180910390f35b61026a6104d9565b005b6102866004803603810190610281919061119f565b6104ec565b005b610290610569565b005b61029a61057b565b6040516102a79190611321565b60405180910390f35b6102b86105a3565b6040516102c591906110ee565b60405180910390f35b6102e860048036038101906102e3919061119f565b610633565b6040516102f591906111f7565b60405180910390f35b6103186004803603810190610313919061133a565b610655565b604051610325919061121f565b60405180910390f35b610348600480360381019061034391906112e7565b6106d7565b005b606060038054610359906113a5565b80601f0160208091040260200160405190810160405280929190818152602001828054610385906113a5565b80156103d05780601f106103a7576101008083540402835291602001916103d0565b820191905f5260205f20905b8154815290600101906020018083116103b357829003601f168201915b5050505050905090565b5f5f6103e461075b565b90506103f1818585610762565b600191505092915050565b5f600254905090565b5f5f61040f61075b565b905061041c858285610774565b610427858585610806565b60019150509392505050565b5f600560159054906101000a900460ff16905090565b6104516108f6565b61045961097d565b565b6104636108f6565b61046d82826109df565b5050565b61047b3382610a5e565b50565b5f600560149054906101000a900460ff16905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6104e16108f6565b6104ea5f610add565b565b6104f46108f6565b5f6104ff8333610655565b905081811015610544576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053b9061141f565b60405180910390fd5b61055a83338484610555919061146a565b610762565b6105648383610a5e565b505050565b6105716108f6565b610579610ba0565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105b2906113a5565b80601f01602080910402602001604051908101604052809291908181526020018280546105de906113a5565b80156106295780601f1061060057610100808354040283529160200191610629565b820191905f5260205f20905b81548152906001019060200180831161060c57829003601f168201915b5050505050905090565b5f5f61063d61075b565b905061064a818585610806565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6106df6108f6565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361074f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107469190611321565b60405180910390fd5b61075881610add565b50565b5f33905090565b61076f8383836001610c03565b505050565b5f61077f8484610655565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461080057818110156107f1578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016107e89392919061149d565b60405180910390fd5b6107ff84848484035f610c03565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610876575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161086d9190611321565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108e6575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108dd9190611321565b60405180910390fd5b6108f1838383610dd2565b505050565b6108fe61075b565b73ffffffffffffffffffffffffffffffffffffffff1661091c61057b565b73ffffffffffffffffffffffffffffffffffffffff161461097b5761093f61075b565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109729190611321565b60405180910390fd5b565b610985610feb565b5f600560146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6109c861075b565b6040516109d59190611321565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a4f575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a469190611321565b60405180910390fd5b610a5a5f8383610dd2565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ace575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610ac59190611321565b60405180910390fd5b610ad9825f83610dd2565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610ba8611034565b6001600560146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610bec61075b565b604051610bf99190611321565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c73575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c6a9190611321565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ce3575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610cda9190611321565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610dcc578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610dc3919061121f565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e22578060025f828254610e1691906114d2565b92505081905550610ef0565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610eab578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610ea29392919061149d565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f37578060025f8282540392505081905550610f81565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fde919061121f565b60405180910390a3505050565b610ff361047e565b611032576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110299061154f565b60405180910390fd5b565b61103c61047e565b1561107c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611073906115b7565b60405180910390fd5b565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6110c08261107e565b6110ca8185611088565b93506110da818560208601611098565b6110e3816110a6565b840191505092915050565b5f6020820190508181035f83015261110681846110b6565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61113b82611112565b9050919050565b61114b81611131565b8114611155575f5ffd5b50565b5f8135905061116681611142565b92915050565b5f819050919050565b61117e8161116c565b8114611188575f5ffd5b50565b5f8135905061119981611175565b92915050565b5f5f604083850312156111b5576111b461110e565b5b5f6111c285828601611158565b92505060206111d38582860161118b565b9150509250929050565b5f8115159050919050565b6111f1816111dd565b82525050565b5f60208201905061120a5f8301846111e8565b92915050565b6112198161116c565b82525050565b5f6020820190506112325f830184611210565b92915050565b5f5f5f6060848603121561124f5761124e61110e565b5b5f61125c86828701611158565b935050602061126d86828701611158565b925050604061127e8682870161118b565b9150509250925092565b5f60ff82169050919050565b61129d81611288565b82525050565b5f6020820190506112b65f830184611294565b92915050565b5f602082840312156112d1576112d061110e565b5b5f6112de8482850161118b565b91505092915050565b5f602082840312156112fc576112fb61110e565b5b5f61130984828501611158565b91505092915050565b61131b81611131565b82525050565b5f6020820190506113345f830184611312565b92915050565b5f5f604083850312156113505761134f61110e565b5b5f61135d85828601611158565b925050602061136e85828601611158565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806113bc57607f821691505b6020821081036113cf576113ce611378565b5b50919050565b7f4275726e20616d6f756e74206578636565647320616c6c6f77616e63650000005f82015250565b5f611409601d83611088565b9150611414826113d5565b602082019050919050565b5f6020820190508181035f830152611436816113fd565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6114748261116c565b915061147f8361116c565b92508282039050818111156114975761149661143d565b5b92915050565b5f6060820190506114b05f830186611312565b6114bd6020830185611210565b6114ca6040830184611210565b949350505050565b5f6114dc8261116c565b91506114e78361116c565b92508282019050808211156114ff576114fe61143d565b5b92915050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f611539601483611088565b915061154482611505565b602082019050919050565b5f6020820190508181035f8301526115668161152d565b9050919050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6115a1601083611088565b91506115ac8261156d565b602082019050919050565b5f6020820190508181035f8301526115ce81611595565b905091905056fea26469706673582212207cf15792ed0ae03ad45f64b1ee9777b64d2f241b10ea0703e20f900fc17b9a8364736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x32E JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x288 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x214 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x184 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x120 PUSH2 0x34A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x10EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x121F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1238 JUMP JUMPDEST PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH2 0x433 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x12A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH2 0x449 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH2 0x45B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x12BC JUMP JUMPDEST PUSH2 0x471 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21C PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x12E7 JUMP JUMPDEST PUSH2 0x494 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x121F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH2 0x4D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x286 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x290 PUSH2 0x569 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29A PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B8 PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x10EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x133A JUMP JUMPDEST PUSH2 0x655 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x121F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x12E7 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x359 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x385 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3E4 PUSH2 0x75B JUMP JUMPDEST SWAP1 POP PUSH2 0x3F1 DUP2 DUP6 DUP6 PUSH2 0x762 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x40F PUSH2 0x75B JUMP JUMPDEST SWAP1 POP PUSH2 0x41C DUP6 DUP3 DUP6 PUSH2 0x774 JUMP JUMPDEST PUSH2 0x427 DUP6 DUP6 DUP6 PUSH2 0x806 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x451 PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x459 PUSH2 0x97D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x463 PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x46D DUP3 DUP3 PUSH2 0x9DF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x47B CALLER DUP3 PUSH2 0xA5E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E1 PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x4EA PUSH0 PUSH2 0xADD JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4F4 PUSH2 0x8F6 JUMP JUMPDEST PUSH0 PUSH2 0x4FF DUP4 CALLER PUSH2 0x655 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x544 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53B SWAP1 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x55A DUP4 CALLER DUP5 DUP5 PUSH2 0x555 SWAP2 SWAP1 PUSH2 0x146A JUMP JUMPDEST PUSH2 0x762 JUMP JUMPDEST PUSH2 0x564 DUP4 DUP4 PUSH2 0xA5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x571 PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x579 PUSH2 0xBA0 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5B2 SWAP1 PUSH2 0x13A5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5DE SWAP1 PUSH2 0x13A5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x629 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x600 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x629 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x60C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x63D PUSH2 0x75B JUMP JUMPDEST SWAP1 POP PUSH2 0x64A DUP2 DUP6 DUP6 PUSH2 0x806 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6DF PUSH2 0x8F6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x74F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x746 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x758 DUP2 PUSH2 0xADD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x76F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC03 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x77F DUP5 DUP5 PUSH2 0x655 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x800 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7F1 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x149D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7FF DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xC03 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x876 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86D SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DD SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8F1 DUP4 DUP4 DUP4 PUSH2 0xDD2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8FE PUSH2 0x75B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x91C PUSH2 0x57B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x97B JUMPI PUSH2 0x93F PUSH2 0x75B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x985 PUSH2 0xFEB JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x9C8 PUSH2 0x75B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D5 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA4F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA46 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA5A PUSH0 DUP4 DUP4 PUSH2 0xDD2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xACE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC5 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAD9 DUP3 PUSH0 DUP4 PUSH2 0xDD2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xBA8 PUSH2 0x1034 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xBEC PUSH2 0x75B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF9 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC73 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6A SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCE3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDA SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xDCC JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDC3 SWAP2 SWAP1 PUSH2 0x121F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE22 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE16 SWAP2 SWAP1 PUSH2 0x14D2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEF0 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xEAB JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x149D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF37 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF81 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xFDE SWAP2 SWAP1 PUSH2 0x121F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xFF3 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x1032 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1029 SWAP1 PUSH2 0x154F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x103C PUSH2 0x47E JUMP JUMPDEST ISZERO PUSH2 0x107C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1073 SWAP1 PUSH2 0x15B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10C0 DUP3 PUSH2 0x107E JUMP JUMPDEST PUSH2 0x10CA DUP2 DUP6 PUSH2 0x1088 JUMP JUMPDEST SWAP4 POP PUSH2 0x10DA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1098 JUMP JUMPDEST PUSH2 0x10E3 DUP2 PUSH2 0x10A6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1106 DUP2 DUP5 PUSH2 0x10B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x113B DUP3 PUSH2 0x1112 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x114B DUP2 PUSH2 0x1131 JUMP JUMPDEST DUP2 EQ PUSH2 0x1155 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1166 DUP2 PUSH2 0x1142 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x117E DUP2 PUSH2 0x116C JUMP JUMPDEST DUP2 EQ PUSH2 0x1188 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1199 DUP2 PUSH2 0x1175 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11B5 JUMPI PUSH2 0x11B4 PUSH2 0x110E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11C2 DUP6 DUP3 DUP7 ADD PUSH2 0x1158 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11D3 DUP6 DUP3 DUP7 ADD PUSH2 0x118B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11F1 DUP2 PUSH2 0x11DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x120A PUSH0 DUP4 ADD DUP5 PUSH2 0x11E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1219 DUP2 PUSH2 0x116C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1232 PUSH0 DUP4 ADD DUP5 PUSH2 0x1210 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x124F JUMPI PUSH2 0x124E PUSH2 0x110E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x125C DUP7 DUP3 DUP8 ADD PUSH2 0x1158 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x126D DUP7 DUP3 DUP8 ADD PUSH2 0x1158 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x127E DUP7 DUP3 DUP8 ADD PUSH2 0x118B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x129D DUP2 PUSH2 0x1288 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12B6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1294 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D1 JUMPI PUSH2 0x12D0 PUSH2 0x110E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12DE DUP5 DUP3 DUP6 ADD PUSH2 0x118B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12FC JUMPI PUSH2 0x12FB PUSH2 0x110E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1309 DUP5 DUP3 DUP6 ADD PUSH2 0x1158 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x131B DUP2 PUSH2 0x1131 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1334 PUSH0 DUP4 ADD DUP5 PUSH2 0x1312 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1350 JUMPI PUSH2 0x134F PUSH2 0x110E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x135D DUP6 DUP3 DUP7 ADD PUSH2 0x1158 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x136E DUP6 DUP3 DUP7 ADD PUSH2 0x1158 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x13BC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x13CF JUMPI PUSH2 0x13CE PUSH2 0x1378 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4275726E20616D6F756E74206578636565647320616C6C6F77616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1409 PUSH1 0x1D DUP4 PUSH2 0x1088 JUMP JUMPDEST SWAP2 POP PUSH2 0x1414 DUP3 PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1436 DUP2 PUSH2 0x13FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1474 DUP3 PUSH2 0x116C JUMP JUMPDEST SWAP2 POP PUSH2 0x147F DUP4 PUSH2 0x116C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1497 JUMPI PUSH2 0x1496 PUSH2 0x143D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x14B0 PUSH0 DUP4 ADD DUP7 PUSH2 0x1312 JUMP JUMPDEST PUSH2 0x14BD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1210 JUMP JUMPDEST PUSH2 0x14CA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1210 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14DC DUP3 PUSH2 0x116C JUMP JUMPDEST SWAP2 POP PUSH2 0x14E7 DUP4 PUSH2 0x116C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x14FF JUMPI PUSH2 0x14FE PUSH2 0x143D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1539 PUSH1 0x14 DUP4 PUSH2 0x1088 JUMP JUMPDEST SWAP2 POP PUSH2 0x1544 DUP3 PUSH2 0x1505 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1566 DUP2 PUSH2 0x152D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15A1 PUSH1 0x10 DUP4 PUSH2 0x1088 JUMP JUMPDEST SWAP2 POP PUSH2 0x15AC DUP3 PUSH2 0x156D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15CE DUP2 PUSH2 0x1595 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xF15792ED0AE03AD45F64B1EE9777B64D2F241B10EA0703E20F900FC17B SWAP11 DUP4 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "27588:1387:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12705:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14924:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13775:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15702:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;27910:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28910:63;;;:::i;:::-;;28070:93;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28226:79;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;26510:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13930:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24091:101;;;:::i;:::-;;28387:318;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28777:59;;;:::i;:::-;;23436:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12907:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14241:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14477:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24341:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12705:89;12750:13;12782:5;12775:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12705:89;:::o;14924:186::-;14997:4;15013:13;15029:12;:10;:12::i;:::-;15013:28;;15051:31;15060:5;15067:7;15076:5;15051:8;:31::i;:::-;15099:4;15092:11;;;14924:186;;;;:::o;13775:97::-;13827:7;13853:12;;13846:19;;13775:97;:::o;15702:244::-;15789:4;15805:15;15823:12;:10;:12::i;:::-;15805:30;;15845:37;15861:4;15867:7;15876:5;15845:15;:37::i;:::-;15892:26;15902:4;15908:2;15912:5;15892:9;:26::i;:::-;15935:4;15928:11;;;15702:244;;;;;:::o;27910:98::-;27968:5;27992:9;;;;;;;;;;;27985:16;;27910:98;:::o;28910:63::-;23329:13;:11;:13::i;:::-;28956:10:::1;:8;:10::i;:::-;28910:63::o:0;28070:93::-;23329:13;:11;:13::i;:::-;28139:17:::1;28145:2;28149:6;28139:5;:17::i;:::-;28070:93:::0;;:::o;28226:79::-;28273:25;28279:10;28291:6;28273:5;:25::i;:::-;28226:79;:::o;26510:84::-;26557:4;26580:7;;;;;;;;;;;26573:14;;26510:84;:::o;13930:116::-;13995:7;14021:9;:18;14031:7;14021:18;;;;;;;;;;;;;;;;14014:25;;13930:116;;;:::o;24091:101::-;23329:13;:11;:13::i;:::-;24155:30:::1;24182:1;24155:18;:30::i;:::-;24091:101::o:0;28387:318::-;23329:13;:11;:13::i;:::-;28465:24:::1;28492:30;28502:7;28511:10;28492:9;:30::i;:::-;28465:57;;28560:6;28540:16;:26;;28532:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;28610:56;28619:7;28628:10;28659:6;28640:16;:25;;;;:::i;:::-;28610:8;:56::i;:::-;28676:22;28682:7;28691:6;28676:5;:22::i;:::-;28455:250;28387:318:::0;;:::o;28777:59::-;23329:13;:11;:13::i;:::-;28821:8:::1;:6;:8::i;:::-;28777:59::o:0;23436:85::-;23482:7;23508:6;;;;;;;;;;;23501:13;;23436:85;:::o;12907:93::-;12954:13;12986:7;12979:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12907:93;:::o;14241:178::-;14310:4;14326:13;14342:12;:10;:12::i;:::-;14326:28;;14364:27;14374:5;14381:2;14385:5;14364:9;:27::i;:::-;14408:4;14401:11;;;14241:178;;;;:::o;14477:140::-;14557:7;14583:11;:18;14595:5;14583:18;;;;;;;;;;;;;;;:27;14602:7;14583:27;;;;;;;;;;;;;;;;14576:34;;14477:140;;;;:::o;24341:215::-;23329:13;:11;:13::i;:::-;24445:1:::1;24425:22;;:8;:22;;::::0;24421:91:::1;;24498:1;24470:31;;;;;;;;;;;:::i;:::-;;;;;;;;24421:91;24521:28;24540:8;24521:18;:28::i;:::-;24341:215:::0;:::o;4234:96::-;4287:7;4313:10;4306:17;;4234:96;:::o;19652:128::-;19736:37;19745:5;19752:7;19761:5;19768:4;19736:8;:37::i;:::-;19652:128;;;:::o;21341:477::-;21440:24;21467:25;21477:5;21484:7;21467:9;:25::i;:::-;21440:52;;21526:17;21506:16;:37;21502:310;;21582:5;21563:16;:24;21559:130;;;21641:7;21650:16;21668:5;21614:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;21559:130;21730:57;21739:5;21746:7;21774:5;21755:16;:24;21781:5;21730:8;:57::i;:::-;21502:310;21430:388;21341:477;;;:::o;16319:300::-;16418:1;16402:18;;:4;:18;;;16398:86;;16470:1;16443:30;;;;;;;;;;;:::i;:::-;;;;;;;;16398:86;16511:1;16497:16;;:2;:16;;;16493:86;;16565:1;16536:32;;;;;;;;;;;:::i;:::-;;;;;;;;16493:86;16588:24;16596:4;16602:2;16606:5;16588:7;:24::i;:::-;16319:300;;;:::o;23594:162::-;23664:12;:10;:12::i;:::-;23653:23;;:7;:5;:7::i;:::-;:23;;;23649:101;;23726:12;:10;:12::i;:::-;23699:40;;;;;;;;;;;:::i;:::-;;;;;;;;23649:101;23594:162::o;27328:117::-;26381:16;:14;:16::i;:::-;27396:5:::1;27386:7;;:15;;;;;;;;;;;;;;;;;;27416:22;27425:12;:10;:12::i;:::-;27416:22;;;;;;:::i;:::-;;;;;;;;27328:117::o:0;18384:208::-;18473:1;18454:21;;:7;:21;;;18450:91;;18527:1;18498:32;;;;;;;;;;;:::i;:::-;;;;;;;;18450:91;18550:35;18566:1;18570:7;18579:5;18550:7;:35::i;:::-;18384:208;;:::o;18910:206::-;18999:1;18980:21;;:7;:21;;;18976:89;;19051:1;19024:30;;;;;;;;;;;:::i;:::-;;;;;;;;18976:89;19074:35;19082:7;19099:1;19103:5;19074:7;:35::i;:::-;18910:206;;:::o;24710:187::-;24783:16;24802:6;;;;;;;;;;;24783:25;;24827:8;24818:6;;:17;;;;;;;;;;;;;;;;;;24881:8;24850:40;;24871:8;24850:40;;;;;;;;;;;;24773:124;24710:187;:::o;27081:115::-;26134:19;:17;:19::i;:::-;27150:4:::1;27140:7;;:14;;;;;;;;;;;;;;;;;;27169:20;27176:12;:10;:12::i;:::-;27169:20;;;;;;:::i;:::-;;;;;;;;27081:115::o:0;20627:432::-;20756:1;20739:19;;:5;:19;;;20735:89;;20810:1;20781:32;;;;;;;;;;;:::i;:::-;;;;;;;;20735:89;20856:1;20837:21;;:7;:21;;;20833:90;;20909:1;20881:31;;;;;;;;;;;:::i;:::-;;;;;;;;20833:90;20962:5;20932:11;:18;20944:5;20932:18;;;;;;;;;;;;;;;:27;20951:7;20932:27;;;;;;;;;;;;;;;:35;;;;20981:9;20977:76;;;21027:7;21011:31;;21020:5;21011:31;;;21036:5;21011:31;;;;;;:::i;:::-;;;;;;;;20977:76;20627:432;;;;:::o;16934:1107::-;17039:1;17023:18;;:4;:18;;;17019:540;;17175:5;17159:12;;:21;;;;;;;:::i;:::-;;;;;;;;17019:540;;;17211:19;17233:9;:15;17243:4;17233:15;;;;;;;;;;;;;;;;17211:37;;17280:5;17266:11;:19;17262:115;;;17337:4;17343:11;17356:5;17312:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;17262:115;17529:5;17515:11;:19;17497:9;:15;17507:4;17497:15;;;;;;;;;;;;;;;:37;;;;17197:362;17019:540;17587:1;17573:16;;:2;:16;;;17569:425;;17752:5;17736:12;;:21;;;;;;;;;;;17569:425;;;17964:5;17947:9;:13;17957:2;17947:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;17569:425;18024:2;18009:25;;18018:4;18009:25;;;18028:5;18009:25;;;;;;:::i;:::-;;;;;;;;16934:1107;;;:::o;26840:106::-;26906:8;:6;:8::i;:::-;26898:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;26840:106::o;26662:::-;26732:8;:6;:8::i;:::-;26731:9;26723:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;26662:106::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:118::-;5503:24;5521:5;5503:24;:::i;:::-;5498:3;5491:37;5416:118;;:::o;5540:222::-;5633:4;5671:2;5660:9;5656:18;5648:26;;5684:71;5752:1;5741:9;5737:17;5728:6;5684:71;:::i;:::-;5540:222;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:180::-;6296:77;6293:1;6286:88;6393:4;6390:1;6383:15;6417:4;6414:1;6407:15;6434:320;6478:6;6515:1;6509:4;6505:12;6495:22;;6562:1;6556:4;6552:12;6583:18;6573:81;;6639:4;6631:6;6627:17;6617:27;;6573:81;6701:2;6693:6;6690:14;6670:18;6667:38;6664:84;;6720:18;;:::i;:::-;6664:84;6485:269;6434:320;;;:::o;6760:179::-;6900:31;6896:1;6888:6;6884:14;6877:55;6760:179;:::o;6945:366::-;7087:3;7108:67;7172:2;7167:3;7108:67;:::i;:::-;7101:74;;7184:93;7273:3;7184:93;:::i;:::-;7302:2;7297:3;7293:12;7286:19;;6945:366;;;:::o;7317:419::-;7483:4;7521:2;7510:9;7506:18;7498:26;;7570:9;7564:4;7560:20;7556:1;7545:9;7541:17;7534:47;7598:131;7724:4;7598:131;:::i;:::-;7590:139;;7317:419;;;:::o;7742:180::-;7790:77;7787:1;7780:88;7887:4;7884:1;7877:15;7911:4;7908:1;7901:15;7928:194;7968:4;7988:20;8006:1;7988:20;:::i;:::-;7983:25;;8022:20;8040:1;8022:20;:::i;:::-;8017:25;;8066:1;8063;8059:9;8051:17;;8090:1;8084:4;8081:11;8078:37;;;8095:18;;:::i;:::-;8078:37;7928:194;;;;:::o;8128:442::-;8277:4;8315:2;8304:9;8300:18;8292:26;;8328:71;8396:1;8385:9;8381:17;8372:6;8328:71;:::i;:::-;8409:72;8477:2;8466:9;8462:18;8453:6;8409:72;:::i;:::-;8491;8559:2;8548:9;8544:18;8535:6;8491:72;:::i;:::-;8128:442;;;;;;:::o;8576:191::-;8616:3;8635:20;8653:1;8635:20;:::i;:::-;8630:25;;8669:20;8687:1;8669:20;:::i;:::-;8664:25;;8712:1;8709;8705:9;8698:16;;8733:3;8730:1;8727:10;8724:36;;;8740:18;;:::i;:::-;8724:36;8576:191;;;;:::o;8773:170::-;8913:22;8909:1;8901:6;8897:14;8890:46;8773:170;:::o;8949:366::-;9091:3;9112:67;9176:2;9171:3;9112:67;:::i;:::-;9105:74;;9188:93;9277:3;9188:93;:::i;:::-;9306:2;9301:3;9297:12;9290:19;;8949:366;;;:::o;9321:419::-;9487:4;9525:2;9514:9;9510:18;9502:26;;9574:9;9568:4;9564:20;9560:1;9549:9;9545:17;9538:47;9602:131;9728:4;9602:131;:::i;:::-;9594:139;;9321:419;;;:::o;9746:166::-;9886:18;9882:1;9874:6;9870:14;9863:42;9746:166;:::o;9918:366::-;10060:3;10081:67;10145:2;10140:3;10081:67;:::i;:::-;10074:74;;10157:93;10246:3;10157:93;:::i;:::-;10275:2;10270:3;10266:12;10259:19;;9918:366;;;:::o;10290:419::-;10456:4;10494:2;10483:9;10479:18;10471:26;;10543:9;10537:4;10533:20;10529:1;10518:9;10514:17;10507:47;10571:131;10697:4;10571:131;:::i;:::-;10563:139;;10290:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1128600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "2547",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2537",
								"pause()": "infinite",
								"paused()": "2635",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27588,
									"end": 28975,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27588,
									"end": 28975,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27588,
									"end": 28975,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27674,
									"end": 27820,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27674,
									"end": 27820,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27674,
									"end": 27820,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27674,
									"end": 27820,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27674,
									"end": 27820,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27674,
									"end": 27820,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27674,
									"end": 27820,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27674,
									"end": 27820,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27674,
									"end": 27820,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27674,
									"end": 27820,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27674,
									"end": 27820,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27718,
									"end": 27728,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "PUSH",
									"source": 0,
									"value": "446567656E000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "PUSH",
									"source": 0,
									"value": "44474E0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12601,
									"end": 12606,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12593,
									"end": 12598,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12593,
									"end": 12606,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12593,
									"end": 12606,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12593,
									"end": 12606,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12593,
									"end": 12606,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12593,
									"end": 12606,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12593,
									"end": 12606,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12593,
									"end": 12606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12593,
									"end": 12606,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12593,
									"end": 12606,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12593,
									"end": 12606,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12626,
									"end": 12633,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12616,
									"end": 12623,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12616,
									"end": 12633,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12616,
									"end": 12633,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12616,
									"end": 12633,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12616,
									"end": 12633,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12616,
									"end": 12633,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12616,
									"end": 12633,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12616,
									"end": 12633,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12616,
									"end": 12633,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12616,
									"end": 12633,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12616,
									"end": 12633,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12527,
									"end": 12640,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23095,
									"end": 23096,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23071,
									"end": 23097,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23071,
									"end": 23097,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23071,
									"end": 23083,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23071,
									"end": 23097,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23071,
									"end": 23097,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23071,
									"end": 23097,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 23067,
									"end": 23162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 23067,
									"end": 23162,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23148,
									"end": 23149,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23120,
									"end": 23151,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23120,
									"end": 23151,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23120,
									"end": 23151,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23120,
									"end": 23151,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23120,
									"end": 23151,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23120,
									"end": 23151,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 23120,
									"end": 23151,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 23120,
									"end": 23151,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 23120,
									"end": 23151,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23120,
									"end": 23151,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23120,
									"end": 23151,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 23120,
									"end": 23151,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23120,
									"end": 23151,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 23120,
									"end": 23151,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23120,
									"end": 23151,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23120,
									"end": 23151,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23120,
									"end": 23151,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23120,
									"end": 23151,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23120,
									"end": 23151,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 23120,
									"end": 23151,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23120,
									"end": 23151,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 23067,
									"end": 23162,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 23067,
									"end": 23162,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23171,
									"end": 23203,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 23190,
									"end": 23202,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23171,
									"end": 23189,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 23171,
									"end": 23189,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23171,
									"end": 23189,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 23171,
									"end": 23203,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23171,
									"end": 23203,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 23171,
									"end": 23203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23171,
									"end": 23203,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 23171,
									"end": 23203,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23023,
									"end": 23210,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25901,
									"end": 25906,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25891,
									"end": 25898,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 25891,
									"end": 25898,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 25891,
									"end": 25906,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 25891,
									"end": 25906,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 25891,
									"end": 25906,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25891,
									"end": 25906,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 25891,
									"end": 25906,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25891,
									"end": 25906,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 25891,
									"end": 25906,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25891,
									"end": 25906,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 25891,
									"end": 25906,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25891,
									"end": 25906,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25891,
									"end": 25906,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25891,
									"end": 25906,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25891,
									"end": 25906,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25891,
									"end": 25906,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25891,
									"end": 25906,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 25891,
									"end": 25906,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25891,
									"end": 25906,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25891,
									"end": 25906,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27752,
									"end": 27754,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 27740,
									"end": 27749,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 27740,
									"end": 27749,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 27740,
									"end": 27754,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 27740,
									"end": 27754,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 27740,
									"end": 27754,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27740,
									"end": 27754,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 27740,
									"end": 27754,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27740,
									"end": 27754,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 27740,
									"end": 27754,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 27740,
									"end": 27754,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 27740,
									"end": 27754,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27740,
									"end": 27754,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27740,
									"end": 27754,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 27740,
									"end": 27754,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 27740,
									"end": 27754,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27740,
									"end": 27754,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 27740,
									"end": 27754,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 27740,
									"end": 27754,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27740,
									"end": 27754,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 27740,
									"end": 27754,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27764,
									"end": 27813,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 27770,
									"end": 27780,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 27802,
									"end": 27811,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 27802,
									"end": 27811,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 27802,
									"end": 27811,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27802,
									"end": 27811,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 27802,
									"end": 27811,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27802,
									"end": 27811,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 27802,
									"end": 27811,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 27802,
									"end": 27811,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27802,
									"end": 27811,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 27802,
									"end": 27811,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 27802,
									"end": 27811,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27794,
									"end": 27812,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 27794,
									"end": 27812,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27788,
									"end": 27790,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 27788,
									"end": 27812,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 27788,
									"end": 27812,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27788,
									"end": 27812,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27788,
									"end": 27812,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27788,
									"end": 27812,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 27788,
									"end": 27812,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 27788,
									"end": 27812,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27782,
									"end": 27785,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 27782,
									"end": 27812,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 27782,
									"end": 27812,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27782,
									"end": 27812,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27782,
									"end": 27812,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 27782,
									"end": 27812,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 27782,
									"end": 27812,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 27782,
									"end": 27812,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27764,
									"end": 27769,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 27764,
									"end": 27769,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27764,
									"end": 27769,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 27764,
									"end": 27813,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27764,
									"end": 27813,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 27764,
									"end": 27813,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 27764,
									"end": 27813,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 27764,
									"end": 27813,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27588,
									"end": 28975,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 27588,
									"end": 28975,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24710,
									"end": 24897,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 24710,
									"end": 24897,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24783,
									"end": 24799,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24802,
									"end": 24808,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 24802,
									"end": 24808,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24802,
									"end": 24808,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24802,
									"end": 24808,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24802,
									"end": 24808,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24802,
									"end": 24808,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 24802,
									"end": 24808,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 24802,
									"end": 24808,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24802,
									"end": 24808,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 24802,
									"end": 24808,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24802,
									"end": 24808,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24783,
									"end": 24808,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24783,
									"end": 24808,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24827,
									"end": 24835,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24818,
									"end": 24824,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 24818,
									"end": 24824,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24818,
									"end": 24835,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 24818,
									"end": 24835,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 24818,
									"end": 24835,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24818,
									"end": 24835,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24818,
									"end": 24835,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24818,
									"end": 24835,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24818,
									"end": 24835,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24818,
									"end": 24835,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 24818,
									"end": 24835,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24818,
									"end": 24835,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24818,
									"end": 24835,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24818,
									"end": 24835,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24818,
									"end": 24835,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24818,
									"end": 24835,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24818,
									"end": 24835,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 24818,
									"end": 24835,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24818,
									"end": 24835,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24818,
									"end": 24835,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24881,
									"end": 24889,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24850,
									"end": 24890,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24850,
									"end": 24890,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24871,
									"end": 24879,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24850,
									"end": 24890,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24850,
									"end": 24890,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24850,
									"end": 24890,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 24850,
									"end": 24890,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24850,
									"end": 24890,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24850,
									"end": 24890,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24850,
									"end": 24890,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24850,
									"end": 24890,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24850,
									"end": 24890,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24850,
									"end": 24890,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 24850,
									"end": 24890,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24850,
									"end": 24890,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 24773,
									"end": 24897,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24710,
									"end": 24897,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24710,
									"end": 24897,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18384,
									"end": 18592,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 18384,
									"end": 18592,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18473,
									"end": 18474,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18454,
									"end": 18475,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18454,
									"end": 18475,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18454,
									"end": 18461,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18454,
									"end": 18475,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18454,
									"end": 18475,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18454,
									"end": 18475,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18450,
									"end": 18541,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 18450,
									"end": 18541,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18527,
									"end": 18528,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18498,
									"end": 18530,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18498,
									"end": 18530,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18498,
									"end": 18530,
									"name": "PUSH",
									"source": 0,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18498,
									"end": 18530,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18498,
									"end": 18530,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18498,
									"end": 18530,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18498,
									"end": 18530,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18498,
									"end": 18530,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 18498,
									"end": 18530,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18498,
									"end": 18530,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18498,
									"end": 18530,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 18498,
									"end": 18530,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18498,
									"end": 18530,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 18498,
									"end": 18530,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18498,
									"end": 18530,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18498,
									"end": 18530,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18498,
									"end": 18530,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18498,
									"end": 18530,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18498,
									"end": 18530,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18498,
									"end": 18530,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18498,
									"end": 18530,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18450,
									"end": 18541,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 18450,
									"end": 18541,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18550,
									"end": 18585,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 18566,
									"end": 18567,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18570,
									"end": 18577,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18579,
									"end": 18584,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18550,
									"end": 18557,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 18550,
									"end": 18557,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18550,
									"end": 18557,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 18550,
									"end": 18585,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18550,
									"end": 18585,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 18550,
									"end": 18585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18550,
									"end": 18585,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 18550,
									"end": 18585,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18384,
									"end": 18592,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18384,
									"end": 18592,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18384,
									"end": 18592,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16934,
									"end": 18041,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 16934,
									"end": 18041,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17039,
									"end": 17040,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17023,
									"end": 17041,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17023,
									"end": 17041,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17023,
									"end": 17027,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17023,
									"end": 17041,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17023,
									"end": 17041,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17023,
									"end": 17041,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17019,
									"end": 17559,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 17019,
									"end": 17559,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17175,
									"end": 17180,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17159,
									"end": 17171,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17159,
									"end": 17171,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17159,
									"end": 17180,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17159,
									"end": 17180,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17159,
									"end": 17180,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17159,
									"end": 17180,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 17159,
									"end": 17180,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17159,
									"end": 17180,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17159,
									"end": 17180,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 17159,
									"end": 17180,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17159,
									"end": 17180,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 17159,
									"end": 17180,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17159,
									"end": 17180,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17159,
									"end": 17180,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17159,
									"end": 17180,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17159,
									"end": 17180,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17159,
									"end": 17180,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17159,
									"end": 17180,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17159,
									"end": 17180,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17019,
									"end": 17559,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 17019,
									"end": 17559,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17019,
									"end": 17559,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 17019,
									"end": 17559,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17211,
									"end": 17230,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17233,
									"end": 17242,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17233,
									"end": 17248,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17243,
									"end": 17247,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 17233,
									"end": 17248,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17233,
									"end": 17248,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17233,
									"end": 17248,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17233,
									"end": 17248,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17233,
									"end": 17248,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17233,
									"end": 17248,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17233,
									"end": 17248,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17233,
									"end": 17248,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17233,
									"end": 17248,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17233,
									"end": 17248,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17233,
									"end": 17248,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17233,
									"end": 17248,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17233,
									"end": 17248,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17233,
									"end": 17248,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17233,
									"end": 17248,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17233,
									"end": 17248,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17211,
									"end": 17248,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17211,
									"end": 17248,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17280,
									"end": 17285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17266,
									"end": 17277,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17266,
									"end": 17285,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17262,
									"end": 17377,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17262,
									"end": 17377,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 17262,
									"end": 17377,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17337,
									"end": 17341,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17343,
									"end": 17354,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17356,
									"end": 17361,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17312,
									"end": 17362,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17312,
									"end": 17362,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17312,
									"end": 17362,
									"name": "PUSH",
									"source": 0,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17312,
									"end": 17362,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17312,
									"end": 17362,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17312,
									"end": 17362,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17312,
									"end": 17362,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17312,
									"end": 17362,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 17312,
									"end": 17362,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 17312,
									"end": 17362,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17312,
									"end": 17362,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17312,
									"end": 17362,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17312,
									"end": 17362,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 17312,
									"end": 17362,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17312,
									"end": 17362,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 17312,
									"end": 17362,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17312,
									"end": 17362,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17312,
									"end": 17362,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17312,
									"end": 17362,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17312,
									"end": 17362,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17312,
									"end": 17362,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17312,
									"end": 17362,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17312,
									"end": 17362,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17262,
									"end": 17377,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 17262,
									"end": 17377,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17529,
									"end": 17534,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17515,
									"end": 17526,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17515,
									"end": 17534,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17506,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17497,
									"end": 17512,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17507,
									"end": 17511,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17512,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17497,
									"end": 17512,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17512,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17497,
									"end": 17512,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17512,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17512,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17512,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17497,
									"end": 17512,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17512,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17512,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17512,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17512,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17497,
									"end": 17512,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17512,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17497,
									"end": 17512,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17534,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17534,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17534,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17534,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17197,
									"end": 17559,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17019,
									"end": 17559,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 17019,
									"end": 17559,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17587,
									"end": 17588,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17573,
									"end": 17589,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17573,
									"end": 17589,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17573,
									"end": 17575,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17573,
									"end": 17589,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17573,
									"end": 17589,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17573,
									"end": 17589,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17569,
									"end": 17994,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 17569,
									"end": 17994,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17752,
									"end": 17757,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17736,
									"end": 17748,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17736,
									"end": 17748,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17736,
									"end": 17757,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17736,
									"end": 17757,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17736,
									"end": 17757,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17736,
									"end": 17757,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17736,
									"end": 17757,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17736,
									"end": 17757,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17736,
									"end": 17757,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17736,
									"end": 17757,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17736,
									"end": 17757,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17736,
									"end": 17757,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17736,
									"end": 17757,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17569,
									"end": 17994,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17569,
									"end": 17994,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17569,
									"end": 17994,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 17569,
									"end": 17994,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17964,
									"end": 17969,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17947,
									"end": 17956,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17947,
									"end": 17960,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17957,
									"end": 17959,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 17947,
									"end": 17960,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17947,
									"end": 17960,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17947,
									"end": 17960,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17947,
									"end": 17960,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17947,
									"end": 17960,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17947,
									"end": 17960,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17947,
									"end": 17960,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17947,
									"end": 17960,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17947,
									"end": 17960,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17947,
									"end": 17960,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17947,
									"end": 17960,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17947,
									"end": 17960,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17947,
									"end": 17960,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17947,
									"end": 17960,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17947,
									"end": 17960,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17947,
									"end": 17960,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17947,
									"end": 17969,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17947,
									"end": 17969,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17947,
									"end": 17969,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17947,
									"end": 17969,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17947,
									"end": 17969,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17947,
									"end": 17969,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17947,
									"end": 17969,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17947,
									"end": 17969,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17947,
									"end": 17969,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17947,
									"end": 17969,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17947,
									"end": 17969,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17569,
									"end": 17994,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17569,
									"end": 17994,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18024,
									"end": 18026,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18009,
									"end": 18034,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18009,
									"end": 18034,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18018,
									"end": 18022,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18009,
									"end": 18034,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18009,
									"end": 18034,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18009,
									"end": 18034,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 18028,
									"end": 18033,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18009,
									"end": 18034,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18009,
									"end": 18034,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18009,
									"end": 18034,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 18009,
									"end": 18034,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18009,
									"end": 18034,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18009,
									"end": 18034,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 18009,
									"end": 18034,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18009,
									"end": 18034,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 18009,
									"end": 18034,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18009,
									"end": 18034,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18009,
									"end": 18034,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18009,
									"end": 18034,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18009,
									"end": 18034,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18009,
									"end": 18034,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18009,
									"end": 18034,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18009,
									"end": 18034,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 16934,
									"end": 18041,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16934,
									"end": 18041,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16934,
									"end": 18041,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16934,
									"end": 18041,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "132"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 1,
									"value": "132"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "139"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 1,
									"value": "139"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5868,
									"end": 5945,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5865,
									"end": 5866,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5858,
									"end": 5946,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5965,
									"end": 5969,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 5962,
									"end": 5963,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 5955,
									"end": 5970,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5989,
									"end": 5993,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 5986,
									"end": 5987,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5979,
									"end": 5994,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6006,
									"end": 6108,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 6006,
									"end": 6108,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6048,
									"end": 6056,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6095,
									"end": 6100,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6092,
									"end": 6093,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6088,
									"end": 6101,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6067,
									"end": 6101,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6067,
									"end": 6101,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6006,
									"end": 6108,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6006,
									"end": 6108,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6006,
									"end": 6108,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6006,
									"end": 6108,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6114,
									"end": 6962,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 6114,
									"end": 6962,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6175,
									"end": 6180,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6182,
									"end": 6186,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6206,
									"end": 6212,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6197,
									"end": 6212,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6197,
									"end": 6212,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6221,
									"end": 6235,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6221,
									"end": 6235,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6244,
									"end": 6956,
									"name": "tag",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 6244,
									"end": 6956,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6265,
									"end": 6266,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6255,
									"end": 6263,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6252,
									"end": 6267,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 6244,
									"end": 6956,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6244,
									"end": 6956,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 6244,
									"end": 6956,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6355,
									"end": 6358,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6351,
									"end": 6365,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 6345,
									"end": 6349,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6342,
									"end": 6366,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6389,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6389,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 6339,
									"end": 6389,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6369,
									"end": 6387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 6369,
									"end": 6387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 6369,
									"end": 6387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6369,
									"end": 6387,
									"name": "tag",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 6369,
									"end": 6387,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6389,
									"name": "tag",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 6339,
									"end": 6389,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6419,
									"end": 6420,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6409,
									"end": 6417,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6405,
									"end": 6421,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6402,
									"end": 6853,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6402,
									"end": 6853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 6402,
									"end": 6853,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6838,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6827,
									"end": 6832,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6823,
									"end": 6839,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6814,
									"end": 6839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6814,
									"end": 6839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6402,
									"end": 6853,
									"name": "tag",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 6402,
									"end": 6853,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6884,
									"end": 6888,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6878,
									"end": 6882,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6874,
									"end": 6889,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6866,
									"end": 6889,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6866,
									"end": 6889,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6914,
									"end": 6946,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 6937,
									"end": 6945,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6914,
									"end": 6946,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 6914,
									"end": 6946,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6914,
									"end": 6946,
									"name": "tag",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 6914,
									"end": 6946,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6902,
									"end": 6946,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 6902,
									"end": 6946,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6244,
									"end": 6956,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 6244,
									"end": 6956,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6244,
									"end": 6956,
									"name": "tag",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 6244,
									"end": 6956,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6114,
									"end": 6962,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 6114,
									"end": 6962,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6114,
									"end": 6962,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 6114,
									"end": 6962,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6114,
									"end": 6962,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6114,
									"end": 6962,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6114,
									"end": 6962,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6114,
									"end": 6962,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6968,
									"end": 8041,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 6968,
									"end": 8041,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7022,
									"end": 7027,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7213,
									"end": 7221,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7203,
									"end": 7243,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "151"
								},
								{
									"begin": 7203,
									"end": 7243,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7234,
									"end": 7235,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7225,
									"end": 7235,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7225,
									"end": 7235,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7236,
									"end": 7241,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 7236,
									"end": 7241,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7203,
									"end": 7243,
									"name": "tag",
									"source": 1,
									"value": "151"
								},
								{
									"begin": 7203,
									"end": 7243,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7262,
									"end": 7266,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7252,
									"end": 7288,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "152"
								},
								{
									"begin": 7252,
									"end": 7288,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7279,
									"end": 7280,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7270,
									"end": 7280,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7270,
									"end": 7280,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7281,
									"end": 7286,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 7281,
									"end": 7286,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7252,
									"end": 7288,
									"name": "tag",
									"source": 1,
									"value": "152"
								},
								{
									"begin": 7252,
									"end": 7288,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7348,
									"end": 7352,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7396,
									"end": 7397,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7391,
									"end": 7418,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7391,
									"end": 7418,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 7391,
									"end": 7418,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 7391,
									"end": 7418,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7432,
									"end": 7433,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 7427,
									"end": 7618,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7427,
									"end": 7618,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 7427,
									"end": 7618,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 7427,
									"end": 7618,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7341,
									"end": 7618,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 7341,
									"end": 7618,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7391,
									"end": 7418,
									"name": "tag",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 7391,
									"end": 7418,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7409,
									"end": 7410,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7400,
									"end": 7410,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7400,
									"end": 7410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7411,
									"end": 7416,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7411,
									"end": 7416,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 7411,
									"end": 7416,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7427,
									"end": 7618,
									"name": "tag",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 7427,
									"end": 7618,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7472,
									"end": 7475,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 7462,
									"end": 7470,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7459,
									"end": 7476,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7456,
									"end": 7499,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7456,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "156"
								},
								{
									"begin": 7456,
									"end": 7499,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7479,
									"end": 7497,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "157"
								},
								{
									"begin": 7479,
									"end": 7497,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 7479,
									"end": 7497,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7479,
									"end": 7497,
									"name": "tag",
									"source": 1,
									"value": "157"
								},
								{
									"begin": 7479,
									"end": 7497,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7456,
									"end": 7499,
									"name": "tag",
									"source": 1,
									"value": "156"
								},
								{
									"begin": 7456,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7528,
									"end": 7536,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7525,
									"end": 7526,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 7521,
									"end": 7537,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 7512,
									"end": 7537,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7512,
									"end": 7537,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7563,
									"end": 7566,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7556,
									"end": 7561,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7567,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7550,
									"end": 7590,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7550,
									"end": 7590,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "158"
								},
								{
									"begin": 7550,
									"end": 7590,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7570,
									"end": 7588,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "159"
								},
								{
									"begin": 7570,
									"end": 7588,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 7570,
									"end": 7588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7570,
									"end": 7588,
									"name": "tag",
									"source": 1,
									"value": "159"
								},
								{
									"begin": 7570,
									"end": 7588,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7550,
									"end": 7590,
									"name": "tag",
									"source": 1,
									"value": "158"
								},
								{
									"begin": 7550,
									"end": 7590,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7603,
									"end": 7608,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7603,
									"end": 7608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 7603,
									"end": 7608,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7341,
									"end": 7618,
									"name": "tag",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 7341,
									"end": 7618,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7341,
									"end": 7618,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7727,
									"end": 7729,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7717,
									"end": 7725,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7714,
									"end": 7730,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7711,
									"name": "PUSH",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 7702,
									"end": 7706,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7699,
									"end": 7712,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 7695,
									"end": 7731,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7677,
									"end": 7679,
									"name": "PUSH",
									"source": 1,
									"value": "4E"
								},
								{
									"begin": 7667,
									"end": 7675,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7664,
									"end": 7680,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 7659,
									"end": 7661,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 7653,
									"end": 7657,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7650,
									"end": 7662,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 7646,
									"end": 7681,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7630,
									"end": 7741,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 7627,
									"end": 7873,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7627,
									"end": 7873,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 7627,
									"end": 7873,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7783,
									"end": 7791,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7777,
									"end": 7781,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7773,
									"end": 7792,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 7764,
									"end": 7792,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7764,
									"end": 7792,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7818,
									"end": 7821,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7811,
									"end": 7816,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7808,
									"end": 7822,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7805,
									"end": 7845,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7805,
									"end": 7845,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "161"
								},
								{
									"begin": 7805,
									"end": 7845,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7825,
									"end": 7843,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "162"
								},
								{
									"begin": 7825,
									"end": 7843,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 7825,
									"end": 7843,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7825,
									"end": 7843,
									"name": "tag",
									"source": 1,
									"value": "162"
								},
								{
									"begin": 7825,
									"end": 7843,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7805,
									"end": 7845,
									"name": "tag",
									"source": 1,
									"value": "161"
								},
								{
									"begin": 7805,
									"end": 7845,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7858,
									"end": 7863,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 7858,
									"end": 7863,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7627,
									"end": 7873,
									"name": "tag",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 7627,
									"end": 7873,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7898,
									"end": 7940,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "163"
								},
								{
									"begin": 7936,
									"end": 7939,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7926,
									"end": 7934,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7920,
									"end": 7924,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7917,
									"end": 7918,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7898,
									"end": 7940,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 7898,
									"end": 7940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7898,
									"end": 7940,
									"name": "tag",
									"source": 1,
									"value": "163"
								},
								{
									"begin": 7898,
									"end": 7940,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7883,
									"end": 7940,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7883,
									"end": 7940,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7883,
									"end": 7940,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7883,
									"end": 7940,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7972,
									"end": 7976,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7967,
									"end": 7970,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7963,
									"end": 7977,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7956,
									"end": 7961,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7953,
									"end": 7978,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7950,
									"end": 8001,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7950,
									"end": 8001,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "164"
								},
								{
									"begin": 7950,
									"end": 8001,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 7999,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "165"
								},
								{
									"begin": 7981,
									"end": 7999,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 7981,
									"end": 7999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 7999,
									"name": "tag",
									"source": 1,
									"value": "165"
								},
								{
									"begin": 7981,
									"end": 7999,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7950,
									"end": 8001,
									"name": "tag",
									"source": 1,
									"value": "164"
								},
								{
									"begin": 7950,
									"end": 8001,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8030,
									"end": 8034,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8023,
									"end": 8028,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8019,
									"end": 8035,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8010,
									"end": 8035,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8010,
									"end": 8035,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6968,
									"end": 8041,
									"name": "tag",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 6968,
									"end": 8041,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6968,
									"end": 8041,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 6968,
									"end": 8041,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6968,
									"end": 8041,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6968,
									"end": 8041,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6968,
									"end": 8041,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6968,
									"end": 8041,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8047,
									"end": 8332,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8332,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8107,
									"end": 8112,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8131,
									"end": 8154,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "167"
								},
								{
									"begin": 8149,
									"end": 8153,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8131,
									"end": 8154,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 8131,
									"end": 8154,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8131,
									"end": 8154,
									"name": "tag",
									"source": 1,
									"value": "167"
								},
								{
									"begin": 8131,
									"end": 8154,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8123,
									"end": 8154,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8123,
									"end": 8154,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8175,
									"end": 8202,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "168"
								},
								{
									"begin": 8193,
									"end": 8201,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8175,
									"end": 8202,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 8175,
									"end": 8202,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8175,
									"end": 8202,
									"name": "tag",
									"source": 1,
									"value": "168"
								},
								{
									"begin": 8175,
									"end": 8202,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8163,
									"end": 8202,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8163,
									"end": 8202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8221,
									"end": 8325,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "169"
								},
								{
									"begin": 8258,
									"end": 8324,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8248,
									"end": 8256,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8242,
									"end": 8246,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8221,
									"end": 8325,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 8221,
									"end": 8325,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8221,
									"end": 8325,
									"name": "tag",
									"source": 1,
									"value": "169"
								},
								{
									"begin": 8221,
									"end": 8325,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8212,
									"end": 8325,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8212,
									"end": 8325,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8047,
									"end": 8332,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8047,
									"end": 8332,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8047,
									"end": 8332,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8047,
									"end": 8332,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8047,
									"end": 8332,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8338,
									"end": 8748,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 8338,
									"end": 8748,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8378,
									"end": 8385,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8401,
									"end": 8421,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 8419,
									"end": 8420,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8401,
									"end": 8421,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 8401,
									"end": 8421,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8401,
									"end": 8421,
									"name": "tag",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 8401,
									"end": 8421,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8396,
									"end": 8421,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8396,
									"end": 8421,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8435,
									"end": 8455,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "172"
								},
								{
									"begin": 8453,
									"end": 8454,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8435,
									"end": 8455,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 8435,
									"end": 8455,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8435,
									"end": 8455,
									"name": "tag",
									"source": 1,
									"value": "172"
								},
								{
									"begin": 8435,
									"end": 8455,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8430,
									"end": 8455,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8430,
									"end": 8455,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8490,
									"end": 8491,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8487,
									"end": 8488,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8483,
									"end": 8492,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8512,
									"end": 8542,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "173"
								},
								{
									"begin": 8530,
									"end": 8541,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8512,
									"end": 8542,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 8512,
									"end": 8542,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8512,
									"end": 8542,
									"name": "tag",
									"source": 1,
									"value": "173"
								},
								{
									"begin": 8512,
									"end": 8542,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8501,
									"end": 8542,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8501,
									"end": 8542,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8691,
									"end": 8692,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8682,
									"end": 8689,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8678,
									"end": 8693,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 8675,
									"end": 8676,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8672,
									"end": 8694,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 8652,
									"end": 8653,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8645,
									"end": 8654,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8625,
									"end": 8708,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 8602,
									"end": 8741,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "174"
								},
								{
									"begin": 8602,
									"end": 8741,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8721,
									"end": 8739,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "175"
								},
								{
									"begin": 8721,
									"end": 8739,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 8721,
									"end": 8739,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8721,
									"end": 8739,
									"name": "tag",
									"source": 1,
									"value": "175"
								},
								{
									"begin": 8721,
									"end": 8739,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8602,
									"end": 8741,
									"name": "tag",
									"source": 1,
									"value": "174"
								},
								{
									"begin": 8602,
									"end": 8741,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8386,
									"end": 8748,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8338,
									"end": 8748,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8338,
									"end": 8748,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8338,
									"end": 8748,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8338,
									"end": 8748,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8338,
									"end": 8748,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8754,
									"end": 8945,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 8754,
									"end": 8945,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8794,
									"end": 8797,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8813,
									"end": 8833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "177"
								},
								{
									"begin": 8831,
									"end": 8832,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8813,
									"end": 8833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 8813,
									"end": 8833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8813,
									"end": 8833,
									"name": "tag",
									"source": 1,
									"value": "177"
								},
								{
									"begin": 8813,
									"end": 8833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8808,
									"end": 8833,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8808,
									"end": 8833,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8847,
									"end": 8867,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "178"
								},
								{
									"begin": 8865,
									"end": 8866,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8847,
									"end": 8867,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 8847,
									"end": 8867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8847,
									"end": 8867,
									"name": "tag",
									"source": 1,
									"value": "178"
								},
								{
									"begin": 8847,
									"end": 8867,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8842,
									"end": 8867,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8842,
									"end": 8867,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8890,
									"end": 8891,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8887,
									"end": 8888,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8883,
									"end": 8892,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8876,
									"end": 8892,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8876,
									"end": 8892,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8911,
									"end": 8914,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8908,
									"end": 8909,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8905,
									"end": 8915,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8902,
									"end": 8938,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8902,
									"end": 8938,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "179"
								},
								{
									"begin": 8902,
									"end": 8938,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8918,
									"end": 8936,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "180"
								},
								{
									"begin": 8918,
									"end": 8936,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 8918,
									"end": 8936,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8918,
									"end": 8936,
									"name": "tag",
									"source": 1,
									"value": "180"
								},
								{
									"begin": 8918,
									"end": 8936,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8902,
									"end": 8938,
									"name": "tag",
									"source": 1,
									"value": "179"
								},
								{
									"begin": 8902,
									"end": 8938,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8754,
									"end": 8945,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8754,
									"end": 8945,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8754,
									"end": 8945,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8754,
									"end": 8945,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8754,
									"end": 8945,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8951,
									"end": 9069,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 8951,
									"end": 9069,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9038,
									"end": 9062,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "182"
								},
								{
									"begin": 9056,
									"end": 9061,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9038,
									"end": 9062,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 9038,
									"end": 9062,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9038,
									"end": 9062,
									"name": "tag",
									"source": 1,
									"value": "182"
								},
								{
									"begin": 9038,
									"end": 9062,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9033,
									"end": 9036,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9026,
									"end": 9063,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8951,
									"end": 9069,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8951,
									"end": 9069,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8951,
									"end": 9069,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9075,
									"end": 9517,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 9075,
									"end": 9517,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9224,
									"end": 9228,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9262,
									"end": 9264,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 9251,
									"end": 9260,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9247,
									"end": 9265,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9239,
									"end": 9265,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9239,
									"end": 9265,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9275,
									"end": 9346,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "184"
								},
								{
									"begin": 9343,
									"end": 9344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9332,
									"end": 9341,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9328,
									"end": 9345,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9319,
									"end": 9325,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 9275,
									"end": 9346,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 9275,
									"end": 9346,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9275,
									"end": 9346,
									"name": "tag",
									"source": 1,
									"value": "184"
								},
								{
									"begin": 9275,
									"end": 9346,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9356,
									"end": 9428,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 9424,
									"end": 9426,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9413,
									"end": 9422,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9409,
									"end": 9427,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9400,
									"end": 9406,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 9356,
									"end": 9428,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 9356,
									"end": 9428,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9356,
									"end": 9428,
									"name": "tag",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 9356,
									"end": 9428,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9438,
									"end": 9510,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 9506,
									"end": 9508,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 9495,
									"end": 9504,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9491,
									"end": 9509,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9482,
									"end": 9488,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9438,
									"end": 9510,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 9438,
									"end": 9510,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9438,
									"end": 9510,
									"name": "tag",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 9438,
									"end": 9510,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9075,
									"end": 9517,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 9075,
									"end": 9517,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 9075,
									"end": 9517,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9075,
									"end": 9517,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9075,
									"end": 9517,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9075,
									"end": 9517,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9075,
									"end": 9517,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9523,
									"end": 9745,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 9523,
									"end": 9745,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9616,
									"end": 9620,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9654,
									"end": 9656,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9643,
									"end": 9652,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9639,
									"end": 9657,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9631,
									"end": 9657,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9631,
									"end": 9657,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9667,
									"end": 9738,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "188"
								},
								{
									"begin": 9735,
									"end": 9736,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9724,
									"end": 9733,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9720,
									"end": 9737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9711,
									"end": 9717,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9667,
									"end": 9738,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 9667,
									"end": 9738,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9667,
									"end": 9738,
									"name": "tag",
									"source": 1,
									"value": "188"
								},
								{
									"begin": 9667,
									"end": 9738,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9523,
									"end": 9745,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9523,
									"end": 9745,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9523,
									"end": 9745,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9523,
									"end": 9745,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9523,
									"end": 9745,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 27588,
									"end": 28975,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 27588,
									"end": 28975,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27588,
									"end": 28975,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27588,
									"end": 28975,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27588,
									"end": 28975,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27588,
									"end": 28975,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27588,
									"end": 28975,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27588,
									"end": 28975,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27588,
									"end": 28975,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207cf15792ed0ae03ad45f64b1ee9777b64d2f241b10ea0703e20f900fc17b9a8364736f6c634300081c0033",
									".code": [
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27588,
											"end": 28975,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12705,
											"end": 12794,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12705,
											"end": 12794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12705,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12705,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 12705,
											"end": 12794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12705,
											"end": 12794,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12705,
											"end": 12794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12705,
											"end": 12794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12705,
											"end": 12794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12705,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12705,
											"end": 12794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12705,
											"end": 12794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12705,
											"end": 12794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 12705,
											"end": 12794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12705,
											"end": 12794,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12705,
											"end": 12794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12705,
											"end": 12794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12705,
											"end": 12794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12705,
											"end": 12794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12705,
											"end": 12794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12705,
											"end": 12794,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12705,
											"end": 12794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12705,
											"end": 12794,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14924,
											"end": 15110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14924,
											"end": 15110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14924,
											"end": 15110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13775,
											"end": 13872,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13775,
											"end": 13872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13775,
											"end": 13872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 13775,
											"end": 13872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 13775,
											"end": 13872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13775,
											"end": 13872,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 13775,
											"end": 13872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13775,
											"end": 13872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13775,
											"end": 13872,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13775,
											"end": 13872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 13775,
											"end": 13872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13775,
											"end": 13872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13775,
											"end": 13872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 13775,
											"end": 13872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13775,
											"end": 13872,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 13775,
											"end": 13872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13775,
											"end": 13872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13775,
											"end": 13872,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13775,
											"end": 13872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13775,
											"end": 13872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13775,
											"end": 13872,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13775,
											"end": 13872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13775,
											"end": 13872,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15702,
											"end": 15946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 15702,
											"end": 15946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15702,
											"end": 15946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27910,
											"end": 28008,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 27910,
											"end": 28008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27910,
											"end": 28008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 27910,
											"end": 28008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 27910,
											"end": 28008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27910,
											"end": 28008,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 27910,
											"end": 28008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27910,
											"end": 28008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27910,
											"end": 28008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27910,
											"end": 28008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 27910,
											"end": 28008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27910,
											"end": 28008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27910,
											"end": 28008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 27910,
											"end": 28008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27910,
											"end": 28008,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 27910,
											"end": 28008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27910,
											"end": 28008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27910,
											"end": 28008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27910,
											"end": 28008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27910,
											"end": 28008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27910,
											"end": 28008,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27910,
											"end": 28008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27910,
											"end": 28008,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28910,
											"end": 28973,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28910,
											"end": 28973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28910,
											"end": 28973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 28910,
											"end": 28973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 28910,
											"end": 28973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28910,
											"end": 28973,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 28910,
											"end": 28973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28910,
											"end": 28973,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28070,
											"end": 28163,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28070,
											"end": 28163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28070,
											"end": 28163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 28070,
											"end": 28163,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28070,
											"end": 28163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28070,
											"end": 28163,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28070,
											"end": 28163,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28070,
											"end": 28163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28070,
											"end": 28163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28070,
											"end": 28163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28070,
											"end": 28163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 28070,
											"end": 28163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28070,
											"end": 28163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28070,
											"end": 28163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 28070,
											"end": 28163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28070,
											"end": 28163,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 28070,
											"end": 28163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28070,
											"end": 28163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 28070,
											"end": 28163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28070,
											"end": 28163,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 28070,
											"end": 28163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28070,
											"end": 28163,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28226,
											"end": 28305,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 28226,
											"end": 28305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28226,
											"end": 28305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 28226,
											"end": 28305,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28226,
											"end": 28305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28226,
											"end": 28305,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28226,
											"end": 28305,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28226,
											"end": 28305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28226,
											"end": 28305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28226,
											"end": 28305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28226,
											"end": 28305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 28226,
											"end": 28305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28226,
											"end": 28305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28226,
											"end": 28305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 28226,
											"end": 28305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28226,
											"end": 28305,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 28226,
											"end": 28305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28226,
											"end": 28305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 28226,
											"end": 28305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28226,
											"end": 28305,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 28226,
											"end": 28305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28226,
											"end": 28305,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 26510,
											"end": 26594,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 26510,
											"end": 26594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26510,
											"end": 26594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 26510,
											"end": 26594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 26510,
											"end": 26594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26510,
											"end": 26594,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 26510,
											"end": 26594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26510,
											"end": 26594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26510,
											"end": 26594,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26510,
											"end": 26594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 26510,
											"end": 26594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26510,
											"end": 26594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26510,
											"end": 26594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 26510,
											"end": 26594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26510,
											"end": 26594,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 26510,
											"end": 26594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26510,
											"end": 26594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26510,
											"end": 26594,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26510,
											"end": 26594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26510,
											"end": 26594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26510,
											"end": 26594,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26510,
											"end": 26594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26510,
											"end": 26594,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 13930,
											"end": 14046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13930,
											"end": 14046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 13930,
											"end": 14046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24091,
											"end": 24192,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 24091,
											"end": 24192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24091,
											"end": 24192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24091,
											"end": 24192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24091,
											"end": 24192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24091,
											"end": 24192,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24091,
											"end": 24192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24091,
											"end": 24192,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28387,
											"end": 28705,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 28387,
											"end": 28705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28387,
											"end": 28705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 28387,
											"end": 28705,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28387,
											"end": 28705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28387,
											"end": 28705,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28387,
											"end": 28705,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28387,
											"end": 28705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28387,
											"end": 28705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28387,
											"end": 28705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28387,
											"end": 28705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 28387,
											"end": 28705,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28387,
											"end": 28705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28387,
											"end": 28705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 28387,
											"end": 28705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28387,
											"end": 28705,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 28387,
											"end": 28705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28387,
											"end": 28705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 28387,
											"end": 28705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28387,
											"end": 28705,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 28387,
											"end": 28705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28387,
											"end": 28705,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28777,
											"end": 28836,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 28777,
											"end": 28836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28777,
											"end": 28836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 28777,
											"end": 28836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 28777,
											"end": 28836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28777,
											"end": 28836,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 28777,
											"end": 28836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28777,
											"end": 28836,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23436,
											"end": 23521,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 23436,
											"end": 23521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23436,
											"end": 23521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 23436,
											"end": 23521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 23436,
											"end": 23521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23436,
											"end": 23521,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 23436,
											"end": 23521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23436,
											"end": 23521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23436,
											"end": 23521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23436,
											"end": 23521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 23436,
											"end": 23521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23436,
											"end": 23521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23436,
											"end": 23521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 23436,
											"end": 23521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23436,
											"end": 23521,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 23436,
											"end": 23521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23436,
											"end": 23521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23436,
											"end": 23521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23436,
											"end": 23521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23436,
											"end": 23521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23436,
											"end": 23521,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23436,
											"end": 23521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23436,
											"end": 23521,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 12907,
											"end": 13000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 12907,
											"end": 13000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14241,
											"end": 14419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14241,
											"end": 14419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14241,
											"end": 14419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 14477,
											"end": 14617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 14477,
											"end": 14617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 14477,
											"end": 14617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24341,
											"end": 24556,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24341,
											"end": 24556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24341,
											"end": 24556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 24341,
											"end": 24556,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24341,
											"end": 24556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24341,
											"end": 24556,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24341,
											"end": 24556,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24341,
											"end": 24556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24341,
											"end": 24556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24341,
											"end": 24556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24341,
											"end": 24556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 24341,
											"end": 24556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24341,
											"end": 24556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24341,
											"end": 24556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 24341,
											"end": 24556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24341,
											"end": 24556,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 24341,
											"end": 24556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24341,
											"end": 24556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 24341,
											"end": 24556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24341,
											"end": 24556,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 24341,
											"end": 24556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24341,
											"end": 24556,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 12705,
											"end": 12794,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 12705,
											"end": 12794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12750,
											"end": 12763,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12782,
											"end": 12787,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 12775,
											"end": 12787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 12775,
											"end": 12787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12705,
											"end": 12794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12705,
											"end": 12794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14997,
											"end": 15001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15013,
											"end": 15026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15029,
											"end": 15041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 15029,
											"end": 15039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 15029,
											"end": 15041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15029,
											"end": 15041,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 15029,
											"end": 15041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15060,
											"end": 15065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15067,
											"end": 15074,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15076,
											"end": 15081,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 15051,
											"end": 15082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15051,
											"end": 15082,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15051,
											"end": 15082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15099,
											"end": 15103,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15092,
											"end": 15103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15092,
											"end": 15103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15092,
											"end": 15103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14924,
											"end": 15110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13775,
											"end": 13872,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 13775,
											"end": 13872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13827,
											"end": 13834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13853,
											"end": 13865,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13853,
											"end": 13865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13846,
											"end": 13865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13775,
											"end": 13872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13775,
											"end": 13872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15789,
											"end": 15793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15805,
											"end": 15820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15823,
											"end": 15835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 15823,
											"end": 15833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 15823,
											"end": 15835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15823,
											"end": 15835,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 15823,
											"end": 15835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15805,
											"end": 15835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15805,
											"end": 15835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15845,
											"end": 15882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 15861,
											"end": 15865,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15867,
											"end": 15874,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15876,
											"end": 15881,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15845,
											"end": 15860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 15845,
											"end": 15882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15845,
											"end": 15882,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 15845,
											"end": 15882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15892,
											"end": 15918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 15902,
											"end": 15906,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15908,
											"end": 15910,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15917,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15892,
											"end": 15901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 15892,
											"end": 15918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15892,
											"end": 15918,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 15892,
											"end": 15918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15935,
											"end": 15939,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15928,
											"end": 15939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15928,
											"end": 15939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15928,
											"end": 15939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27910,
											"end": 28008,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 27910,
											"end": 28008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 27973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27992,
											"end": 28001,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27992,
											"end": 28001,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 27992,
											"end": 28001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28001,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28001,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27992,
											"end": 28001,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28001,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28001,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27992,
											"end": 28001,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27985,
											"end": 28001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27985,
											"end": 28001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27910,
											"end": 28008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27910,
											"end": 28008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28910,
											"end": 28973,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 28910,
											"end": 28973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23329,
											"end": 23342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 23329,
											"end": 23340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 23329,
											"end": 23342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23329,
											"end": 23342,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 23329,
											"end": 23342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28956,
											"end": 28966,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 28956,
											"end": 28964,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 28956,
											"end": 28966,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28956,
											"end": 28966,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 28956,
											"end": 28966,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28910,
											"end": 28973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28070,
											"end": 28163,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 28070,
											"end": 28163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23329,
											"end": 23342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 23329,
											"end": 23340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 23329,
											"end": 23342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23329,
											"end": 23342,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 23329,
											"end": 23342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28139,
											"end": 28156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 28145,
											"end": 28147,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28149,
											"end": 28155,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28139,
											"end": 28144,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 28139,
											"end": 28156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28139,
											"end": 28156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 28139,
											"end": 28156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28070,
											"end": 28163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28070,
											"end": 28163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28070,
											"end": 28163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28226,
											"end": 28305,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 28226,
											"end": 28305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28273,
											"end": 28298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 28279,
											"end": 28289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28291,
											"end": 28297,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28273,
											"end": 28278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 28273,
											"end": 28298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28273,
											"end": 28298,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 28273,
											"end": 28298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28226,
											"end": 28305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28226,
											"end": 28305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26510,
											"end": 26594,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 26510,
											"end": 26594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26557,
											"end": 26561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26580,
											"end": 26587,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26580,
											"end": 26587,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 26580,
											"end": 26587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26580,
											"end": 26587,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26580,
											"end": 26587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26580,
											"end": 26587,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26580,
											"end": 26587,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26580,
											"end": 26587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26580,
											"end": 26587,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26580,
											"end": 26587,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 26580,
											"end": 26587,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26573,
											"end": 26587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26573,
											"end": 26587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26510,
											"end": 26594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26510,
											"end": 26594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14021,
											"end": 14030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14021,
											"end": 14039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14031,
											"end": 14038,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14021,
											"end": 14039,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14021,
											"end": 14039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14021,
											"end": 14039,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14021,
											"end": 14039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14021,
											"end": 14039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14021,
											"end": 14039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14021,
											"end": 14039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14021,
											"end": 14039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14021,
											"end": 14039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14021,
											"end": 14039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14021,
											"end": 14039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14021,
											"end": 14039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14021,
											"end": 14039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14021,
											"end": 14039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14021,
											"end": 14039,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14021,
											"end": 14039,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14014,
											"end": 14039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14014,
											"end": 14039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13930,
											"end": 14046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24091,
											"end": 24192,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24091,
											"end": 24192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23329,
											"end": 23342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 23329,
											"end": 23340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 23329,
											"end": 23342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23329,
											"end": 23342,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 23329,
											"end": 23342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24185,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 24182,
											"end": 24183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24155,
											"end": 24173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 24155,
											"end": 24185,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24185,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 24155,
											"end": 24185,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24091,
											"end": 24192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28387,
											"end": 28705,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 28387,
											"end": 28705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23329,
											"end": 23342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 23329,
											"end": 23340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 23329,
											"end": 23342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23329,
											"end": 23342,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 23329,
											"end": 23342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28492,
											"end": 28522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 28502,
											"end": 28509,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28511,
											"end": 28521,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28492,
											"end": 28501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 28492,
											"end": 28522,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28492,
											"end": 28522,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 28492,
											"end": 28522,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28522,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28465,
											"end": 28522,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28560,
											"end": 28566,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28540,
											"end": 28556,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28540,
											"end": 28566,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28540,
											"end": 28566,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28532,
											"end": 28600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 28532,
											"end": 28600,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28532,
											"end": 28600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28532,
											"end": 28600,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28532,
											"end": 28600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28532,
											"end": 28600,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28532,
											"end": 28600,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28532,
											"end": 28600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28532,
											"end": 28600,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28532,
											"end": 28600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 28532,
											"end": 28600,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28532,
											"end": 28600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 28532,
											"end": 28600,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28532,
											"end": 28600,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 28532,
											"end": 28600,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28532,
											"end": 28600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28532,
											"end": 28600,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28532,
											"end": 28600,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28532,
											"end": 28600,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28532,
											"end": 28600,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28532,
											"end": 28600,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28532,
											"end": 28600,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28532,
											"end": 28600,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 28532,
											"end": 28600,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28610,
											"end": 28666,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 28619,
											"end": 28626,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28628,
											"end": 28638,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28659,
											"end": 28665,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28640,
											"end": 28656,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28640,
											"end": 28665,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 28640,
											"end": 28665,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28640,
											"end": 28665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28640,
											"end": 28665,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 28640,
											"end": 28665,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28640,
											"end": 28665,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 28640,
											"end": 28665,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28610,
											"end": 28618,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 28610,
											"end": 28666,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28610,
											"end": 28666,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 28610,
											"end": 28666,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28676,
											"end": 28698,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 28682,
											"end": 28689,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28691,
											"end": 28697,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28676,
											"end": 28681,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 28676,
											"end": 28698,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28676,
											"end": 28698,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 28676,
											"end": 28698,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28455,
											"end": 28705,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28387,
											"end": 28705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28387,
											"end": 28705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28387,
											"end": 28705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28777,
											"end": 28836,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 28777,
											"end": 28836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23329,
											"end": 23342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 23329,
											"end": 23340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 23329,
											"end": 23342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23329,
											"end": 23342,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 23329,
											"end": 23342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28821,
											"end": 28829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 28821,
											"end": 28827,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 28821,
											"end": 28829,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28821,
											"end": 28829,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 28821,
											"end": 28829,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28777,
											"end": 28836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23436,
											"end": 23521,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 23436,
											"end": 23521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23508,
											"end": 23514,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23508,
											"end": 23514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23508,
											"end": 23514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23508,
											"end": 23514,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23508,
											"end": 23514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23508,
											"end": 23514,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23508,
											"end": 23514,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23508,
											"end": 23514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23508,
											"end": 23514,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23508,
											"end": 23514,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23508,
											"end": 23514,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23501,
											"end": 23514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23501,
											"end": 23514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23436,
											"end": 23521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23436,
											"end": 23521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12967,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12986,
											"end": 12993,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 12979,
											"end": 12993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 12979,
											"end": 12993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 12993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12907,
											"end": 13000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14310,
											"end": 14314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14326,
											"end": 14339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14342,
											"end": 14354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 14342,
											"end": 14352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 14342,
											"end": 14354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14342,
											"end": 14354,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 14342,
											"end": 14354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14326,
											"end": 14354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14326,
											"end": 14354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14364,
											"end": 14391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 14374,
											"end": 14379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14381,
											"end": 14383,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14385,
											"end": 14390,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14364,
											"end": 14373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 14364,
											"end": 14391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14364,
											"end": 14391,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 14364,
											"end": 14391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14408,
											"end": 14412,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14401,
											"end": 14412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14241,
											"end": 14419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14583,
											"end": 14594,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14583,
											"end": 14601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14595,
											"end": 14600,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14583,
											"end": 14601,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14583,
											"end": 14601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14583,
											"end": 14601,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14583,
											"end": 14601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14583,
											"end": 14601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14583,
											"end": 14601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14583,
											"end": 14601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14583,
											"end": 14601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14583,
											"end": 14601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14583,
											"end": 14601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14583,
											"end": 14601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14583,
											"end": 14601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14583,
											"end": 14601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14583,
											"end": 14601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14583,
											"end": 14601,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14583,
											"end": 14610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14602,
											"end": 14609,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14583,
											"end": 14610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14583,
											"end": 14610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14583,
											"end": 14610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14583,
											"end": 14610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14583,
											"end": 14610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14583,
											"end": 14610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14583,
											"end": 14610,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14583,
											"end": 14610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14583,
											"end": 14610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14583,
											"end": 14610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14583,
											"end": 14610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14583,
											"end": 14610,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14583,
											"end": 14610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14583,
											"end": 14610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14583,
											"end": 14610,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14583,
											"end": 14610,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14576,
											"end": 14610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14576,
											"end": 14610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24341,
											"end": 24556,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 24341,
											"end": 24556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23329,
											"end": 23342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 23329,
											"end": 23340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 23329,
											"end": 23342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23329,
											"end": 23342,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 23329,
											"end": 23342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24445,
											"end": 24446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24425,
											"end": 24447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24425,
											"end": 24447,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24425,
											"end": 24433,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24425,
											"end": 24447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24425,
											"end": 24447,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24425,
											"end": 24447,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24421,
											"end": 24512,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 24421,
											"end": 24512,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24498,
											"end": 24499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24470,
											"end": 24501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24470,
											"end": 24501,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24470,
											"end": 24501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24470,
											"end": 24501,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24470,
											"end": 24501,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24470,
											"end": 24501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24470,
											"end": 24501,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24470,
											"end": 24501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 24470,
											"end": 24501,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24470,
											"end": 24501,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24470,
											"end": 24501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 24470,
											"end": 24501,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24470,
											"end": 24501,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 24470,
											"end": 24501,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24470,
											"end": 24501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24470,
											"end": 24501,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24470,
											"end": 24501,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24470,
											"end": 24501,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24470,
											"end": 24501,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24470,
											"end": 24501,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24470,
											"end": 24501,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24421,
											"end": 24512,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 24421,
											"end": 24512,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24549,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 24540,
											"end": 24548,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 24521,
											"end": 24549,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24521,
											"end": 24549,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 24521,
											"end": 24549,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24341,
											"end": 24556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24341,
											"end": 24556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4330,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4234,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4323,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19652,
											"end": 19780,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 19652,
											"end": 19780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19736,
											"end": 19773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 19745,
											"end": 19750,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19752,
											"end": 19759,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19761,
											"end": 19766,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19768,
											"end": 19772,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19736,
											"end": 19744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 19736,
											"end": 19773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19736,
											"end": 19773,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 19736,
											"end": 19773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19652,
											"end": 19780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19652,
											"end": 19780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19652,
											"end": 19780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19652,
											"end": 19780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21341,
											"end": 21818,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 21341,
											"end": 21818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21440,
											"end": 21464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21467,
											"end": 21492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 21477,
											"end": 21482,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21484,
											"end": 21491,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21467,
											"end": 21476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 21467,
											"end": 21492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21467,
											"end": 21492,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 21467,
											"end": 21492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21440,
											"end": 21492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21440,
											"end": 21492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21526,
											"end": 21543,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21506,
											"end": 21522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21506,
											"end": 21543,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21502,
											"end": 21812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 21502,
											"end": 21812,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21582,
											"end": 21587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21563,
											"end": 21579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21563,
											"end": 21587,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21559,
											"end": 21689,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21559,
											"end": 21689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 21559,
											"end": 21689,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21641,
											"end": 21648,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21668,
											"end": 21673,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21614,
											"end": 21674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21614,
											"end": 21674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21614,
											"end": 21674,
											"name": "PUSH",
											"source": 0,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21614,
											"end": 21674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21614,
											"end": 21674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21614,
											"end": 21674,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21614,
											"end": 21674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21614,
											"end": 21674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 21614,
											"end": 21674,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21614,
											"end": 21674,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21614,
											"end": 21674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21614,
											"end": 21674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21614,
											"end": 21674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 21614,
											"end": 21674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21614,
											"end": 21674,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 21614,
											"end": 21674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21614,
											"end": 21674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21614,
											"end": 21674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21614,
											"end": 21674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21614,
											"end": 21674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21614,
											"end": 21674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21614,
											"end": 21674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21614,
											"end": 21674,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21559,
											"end": 21689,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 21559,
											"end": 21689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21730,
											"end": 21787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 21739,
											"end": 21744,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21746,
											"end": 21753,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21774,
											"end": 21779,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21755,
											"end": 21771,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21755,
											"end": 21779,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21781,
											"end": 21786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21730,
											"end": 21738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 21730,
											"end": 21787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21730,
											"end": 21787,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 21730,
											"end": 21787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21502,
											"end": 21812,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 21502,
											"end": 21812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21430,
											"end": 21818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21341,
											"end": 21818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21341,
											"end": 21818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21341,
											"end": 21818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21341,
											"end": 21818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16319,
											"end": 16619,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 16319,
											"end": 16619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16418,
											"end": 16419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16402,
											"end": 16420,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16402,
											"end": 16420,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16402,
											"end": 16406,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16402,
											"end": 16420,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16402,
											"end": 16420,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16402,
											"end": 16420,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16398,
											"end": 16484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 16398,
											"end": 16484,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16470,
											"end": 16471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16443,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16443,
											"end": 16473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16443,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16443,
											"end": 16473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16443,
											"end": 16473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16443,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16443,
											"end": 16473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16443,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 16443,
											"end": 16473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16443,
											"end": 16473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16443,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 16443,
											"end": 16473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16443,
											"end": 16473,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 16443,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16443,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16443,
											"end": 16473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16443,
											"end": 16473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16443,
											"end": 16473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16443,
											"end": 16473,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16443,
											"end": 16473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16443,
											"end": 16473,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16398,
											"end": 16484,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 16398,
											"end": 16484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16511,
											"end": 16512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16497,
											"end": 16513,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16497,
											"end": 16513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16497,
											"end": 16499,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16497,
											"end": 16513,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16497,
											"end": 16513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16497,
											"end": 16513,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 16493,
											"end": 16579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16565,
											"end": 16566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16536,
											"end": 16568,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16536,
											"end": 16568,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16536,
											"end": 16568,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16536,
											"end": 16568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16536,
											"end": 16568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16536,
											"end": 16568,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16536,
											"end": 16568,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16536,
											"end": 16568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 16536,
											"end": 16568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16536,
											"end": 16568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16536,
											"end": 16568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 16536,
											"end": 16568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16536,
											"end": 16568,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 16536,
											"end": 16568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16536,
											"end": 16568,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16536,
											"end": 16568,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16536,
											"end": 16568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16536,
											"end": 16568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16536,
											"end": 16568,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16536,
											"end": 16568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16536,
											"end": 16568,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16579,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 16493,
											"end": 16579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16588,
											"end": 16612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 16596,
											"end": 16600,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16602,
											"end": 16604,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16606,
											"end": 16611,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16588,
											"end": 16595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 16588,
											"end": 16612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16588,
											"end": 16612,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 16588,
											"end": 16612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16319,
											"end": 16619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16319,
											"end": 16619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16319,
											"end": 16619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16319,
											"end": 16619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23594,
											"end": 23756,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 23594,
											"end": 23756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23664,
											"end": 23676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 23664,
											"end": 23674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 23664,
											"end": 23676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23664,
											"end": 23676,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 23664,
											"end": 23676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23653,
											"end": 23676,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23653,
											"end": 23676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23653,
											"end": 23660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 23653,
											"end": 23658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 23653,
											"end": 23660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23653,
											"end": 23660,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 23653,
											"end": 23660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23653,
											"end": 23676,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23653,
											"end": 23676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23653,
											"end": 23676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 23649,
											"end": 23750,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23726,
											"end": 23738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 23726,
											"end": 23736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 23726,
											"end": 23738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23726,
											"end": 23738,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 23726,
											"end": 23738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23699,
											"end": 23739,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23699,
											"end": 23739,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23699,
											"end": 23739,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23699,
											"end": 23739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23699,
											"end": 23739,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23699,
											"end": 23739,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23699,
											"end": 23739,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23699,
											"end": 23739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 23699,
											"end": 23739,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23699,
											"end": 23739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23699,
											"end": 23739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 23699,
											"end": 23739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23699,
											"end": 23739,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 23699,
											"end": 23739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23699,
											"end": 23739,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23699,
											"end": 23739,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23699,
											"end": 23739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23699,
											"end": 23739,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23699,
											"end": 23739,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23699,
											"end": 23739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23699,
											"end": 23739,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23750,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 23649,
											"end": 23750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23594,
											"end": 23756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27328,
											"end": 27445,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 27328,
											"end": 27445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26381,
											"end": 26397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 26381,
											"end": 26395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 26381,
											"end": 26397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26381,
											"end": 26397,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 26381,
											"end": 26397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27396,
											"end": 27401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27386,
											"end": 27393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27386,
											"end": 27393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 27386,
											"end": 27401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27386,
											"end": 27401,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27401,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27401,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27401,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27386,
											"end": 27401,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27401,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27401,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27401,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27401,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27401,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27401,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27401,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27401,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27401,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27401,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27401,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27416,
											"end": 27438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 27425,
											"end": 27437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 27425,
											"end": 27435,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 27425,
											"end": 27437,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27425,
											"end": 27437,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 27425,
											"end": 27437,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27416,
											"end": 27438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27416,
											"end": 27438,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27416,
											"end": 27438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 27416,
											"end": 27438,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27416,
											"end": 27438,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27416,
											"end": 27438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 27416,
											"end": 27438,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27416,
											"end": 27438,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 27416,
											"end": 27438,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27416,
											"end": 27438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27416,
											"end": 27438,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27416,
											"end": 27438,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27416,
											"end": 27438,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27416,
											"end": 27438,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27416,
											"end": 27438,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27416,
											"end": 27438,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 27328,
											"end": 27445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18384,
											"end": 18592,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 18384,
											"end": 18592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18473,
											"end": 18474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18454,
											"end": 18475,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18454,
											"end": 18475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18454,
											"end": 18461,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18454,
											"end": 18475,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18454,
											"end": 18475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18454,
											"end": 18475,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18450,
											"end": 18541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 18450,
											"end": 18541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18527,
											"end": 18528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18498,
											"end": 18530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18498,
											"end": 18530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18498,
											"end": 18530,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18498,
											"end": 18530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18498,
											"end": 18530,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18498,
											"end": 18530,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18498,
											"end": 18530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18498,
											"end": 18530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 18498,
											"end": 18530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18498,
											"end": 18530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18498,
											"end": 18530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 18498,
											"end": 18530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18498,
											"end": 18530,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 18498,
											"end": 18530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18498,
											"end": 18530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18498,
											"end": 18530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18498,
											"end": 18530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18498,
											"end": 18530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18498,
											"end": 18530,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18498,
											"end": 18530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18498,
											"end": 18530,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18450,
											"end": 18541,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 18450,
											"end": 18541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18550,
											"end": 18585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 18566,
											"end": 18567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18570,
											"end": 18577,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18579,
											"end": 18584,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18550,
											"end": 18557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 18550,
											"end": 18585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18550,
											"end": 18585,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 18550,
											"end": 18585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18384,
											"end": 18592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18384,
											"end": 18592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18384,
											"end": 18592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18910,
											"end": 19116,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 18910,
											"end": 19116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18980,
											"end": 19001,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18980,
											"end": 19001,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18980,
											"end": 18987,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18980,
											"end": 19001,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18980,
											"end": 19001,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18980,
											"end": 19001,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18976,
											"end": 19065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 18976,
											"end": 19065,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19051,
											"end": 19052,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19024,
											"end": 19054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19024,
											"end": 19054,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19024,
											"end": 19054,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19024,
											"end": 19054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19024,
											"end": 19054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19024,
											"end": 19054,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19024,
											"end": 19054,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19024,
											"end": 19054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 19024,
											"end": 19054,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19024,
											"end": 19054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19024,
											"end": 19054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 19024,
											"end": 19054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19024,
											"end": 19054,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 19024,
											"end": 19054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19024,
											"end": 19054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19024,
											"end": 19054,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19024,
											"end": 19054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19024,
											"end": 19054,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19024,
											"end": 19054,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19024,
											"end": 19054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19024,
											"end": 19054,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18976,
											"end": 19065,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 18976,
											"end": 19065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19074,
											"end": 19109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 19082,
											"end": 19089,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19099,
											"end": 19100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19103,
											"end": 19108,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19074,
											"end": 19081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 19074,
											"end": 19109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19074,
											"end": 19109,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 19074,
											"end": 19109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18910,
											"end": 19116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18910,
											"end": 19116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18910,
											"end": 19116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24710,
											"end": 24897,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 24710,
											"end": 24897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24783,
											"end": 24799,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24802,
											"end": 24808,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24802,
											"end": 24808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24802,
											"end": 24808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24802,
											"end": 24808,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24802,
											"end": 24808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24802,
											"end": 24808,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24802,
											"end": 24808,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24802,
											"end": 24808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24802,
											"end": 24808,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24802,
											"end": 24808,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24802,
											"end": 24808,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24783,
											"end": 24808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24783,
											"end": 24808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24827,
											"end": 24835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24818,
											"end": 24824,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24818,
											"end": 24824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24818,
											"end": 24835,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24818,
											"end": 24835,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24818,
											"end": 24835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24818,
											"end": 24835,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24818,
											"end": 24835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24818,
											"end": 24835,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24818,
											"end": 24835,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24818,
											"end": 24835,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 24818,
											"end": 24835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24818,
											"end": 24835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24818,
											"end": 24835,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24818,
											"end": 24835,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24818,
											"end": 24835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24818,
											"end": 24835,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24818,
											"end": 24835,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 24818,
											"end": 24835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24818,
											"end": 24835,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24818,
											"end": 24835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24881,
											"end": 24889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24850,
											"end": 24890,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24850,
											"end": 24890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24871,
											"end": 24879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24850,
											"end": 24890,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24850,
											"end": 24890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24850,
											"end": 24890,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 24850,
											"end": 24890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24850,
											"end": 24890,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24850,
											"end": 24890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24850,
											"end": 24890,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24850,
											"end": 24890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24850,
											"end": 24890,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24850,
											"end": 24890,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24850,
											"end": 24890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24850,
											"end": 24890,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 24773,
											"end": 24897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24710,
											"end": 24897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24710,
											"end": 24897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27081,
											"end": 27196,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 27081,
											"end": 27196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26134,
											"end": 26153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 26134,
											"end": 26151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 26134,
											"end": 26153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26134,
											"end": 26153,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 26134,
											"end": 26153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27150,
											"end": 27154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27140,
											"end": 27147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27140,
											"end": 27147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 27140,
											"end": 27154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27140,
											"end": 27154,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27140,
											"end": 27154,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27140,
											"end": 27154,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27140,
											"end": 27154,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27140,
											"end": 27154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27140,
											"end": 27154,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27140,
											"end": 27154,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 27140,
											"end": 27154,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27140,
											"end": 27154,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27140,
											"end": 27154,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27140,
											"end": 27154,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27140,
											"end": 27154,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27140,
											"end": 27154,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27140,
											"end": 27154,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 27140,
											"end": 27154,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27140,
											"end": 27154,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27140,
											"end": 27154,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27169,
											"end": 27189,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 27176,
											"end": 27188,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 27176,
											"end": 27186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 27176,
											"end": 27188,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27176,
											"end": 27188,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 27176,
											"end": 27188,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27169,
											"end": 27189,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27169,
											"end": 27189,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27169,
											"end": 27189,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 27169,
											"end": 27189,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27169,
											"end": 27189,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27169,
											"end": 27189,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 27169,
											"end": 27189,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27169,
											"end": 27189,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 27169,
											"end": 27189,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27169,
											"end": 27189,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27169,
											"end": 27189,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27169,
											"end": 27189,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27169,
											"end": 27189,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27169,
											"end": 27189,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27169,
											"end": 27189,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27169,
											"end": 27189,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 27081,
											"end": 27196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20627,
											"end": 21059,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 20627,
											"end": 21059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20739,
											"end": 20758,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20739,
											"end": 20758,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20739,
											"end": 20744,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20739,
											"end": 20758,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20739,
											"end": 20758,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20739,
											"end": 20758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20735,
											"end": 20824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 20735,
											"end": 20824,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20810,
											"end": 20811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20781,
											"end": 20813,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20781,
											"end": 20813,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 20813,
											"name": "PUSH",
											"source": 0,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20781,
											"end": 20813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 20813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 20813,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20781,
											"end": 20813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 20813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 20781,
											"end": 20813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 20813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 20813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 20781,
											"end": 20813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 20813,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 20781,
											"end": 20813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 20813,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20781,
											"end": 20813,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 20813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 20813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 20813,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 20813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 20813,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20735,
											"end": 20824,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 20735,
											"end": 20824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20837,
											"end": 20858,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20837,
											"end": 20858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20837,
											"end": 20844,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20837,
											"end": 20858,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20837,
											"end": 20858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20837,
											"end": 20858,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20833,
											"end": 20923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 20833,
											"end": 20923,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20909,
											"end": 20910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20881,
											"end": 20912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20881,
											"end": 20912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20881,
											"end": 20912,
											"name": "PUSH",
											"source": 0,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20881,
											"end": 20912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20881,
											"end": 20912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20881,
											"end": 20912,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20881,
											"end": 20912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20881,
											"end": 20912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 20881,
											"end": 20912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20881,
											"end": 20912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20881,
											"end": 20912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 20881,
											"end": 20912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20881,
											"end": 20912,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 20881,
											"end": 20912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20881,
											"end": 20912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20881,
											"end": 20912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20881,
											"end": 20912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20881,
											"end": 20912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20881,
											"end": 20912,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20881,
											"end": 20912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20881,
											"end": 20912,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20833,
											"end": 20923,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 20833,
											"end": 20923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20962,
											"end": 20967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20943,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20932,
											"end": 20950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20944,
											"end": 20949,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20950,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20932,
											"end": 20950,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20950,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20932,
											"end": 20950,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20950,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20932,
											"end": 20950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20950,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20932,
											"end": 20950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20932,
											"end": 20950,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20951,
											"end": 20958,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20932,
											"end": 20959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20932,
											"end": 20959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20932,
											"end": 20959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20932,
											"end": 20959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20932,
											"end": 20959,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20967,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20932,
											"end": 20967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20981,
											"end": 20990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 21053,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 21053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 20977,
											"end": 21053,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21027,
											"end": 21034,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21011,
											"end": 21042,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21011,
											"end": 21042,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21020,
											"end": 21025,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21011,
											"end": 21042,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21011,
											"end": 21042,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21011,
											"end": 21042,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 21036,
											"end": 21041,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21011,
											"end": 21042,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21011,
											"end": 21042,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21011,
											"end": 21042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 21011,
											"end": 21042,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21011,
											"end": 21042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21011,
											"end": 21042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 21011,
											"end": 21042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21011,
											"end": 21042,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 21011,
											"end": 21042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21011,
											"end": 21042,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21011,
											"end": 21042,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21011,
											"end": 21042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21011,
											"end": 21042,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21011,
											"end": 21042,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21011,
											"end": 21042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21011,
											"end": 21042,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 21053,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 20977,
											"end": 21053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20627,
											"end": 21059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20627,
											"end": 21059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20627,
											"end": 21059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20627,
											"end": 21059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20627,
											"end": 21059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16934,
											"end": 18041,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 16934,
											"end": 18041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17023,
											"end": 17041,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17023,
											"end": 17041,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17023,
											"end": 17027,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17023,
											"end": 17041,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17023,
											"end": 17041,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17023,
											"end": 17041,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17019,
											"end": 17559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 17019,
											"end": 17559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17175,
											"end": 17180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17159,
											"end": 17171,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17159,
											"end": 17171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17159,
											"end": 17180,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17159,
											"end": 17180,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17159,
											"end": 17180,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17159,
											"end": 17180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 17159,
											"end": 17180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17159,
											"end": 17180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17159,
											"end": 17180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 17159,
											"end": 17180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17159,
											"end": 17180,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 17159,
											"end": 17180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17159,
											"end": 17180,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17159,
											"end": 17180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17159,
											"end": 17180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17159,
											"end": 17180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17159,
											"end": 17180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17159,
											"end": 17180,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17159,
											"end": 17180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17019,
											"end": 17559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 17019,
											"end": 17559,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17019,
											"end": 17559,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 17019,
											"end": 17559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17233,
											"end": 17242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17233,
											"end": 17248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17243,
											"end": 17247,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17233,
											"end": 17248,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17233,
											"end": 17248,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17233,
											"end": 17248,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17233,
											"end": 17248,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17233,
											"end": 17248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17233,
											"end": 17248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17233,
											"end": 17248,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17233,
											"end": 17248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17233,
											"end": 17248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17233,
											"end": 17248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17233,
											"end": 17248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17233,
											"end": 17248,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17233,
											"end": 17248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17233,
											"end": 17248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17233,
											"end": 17248,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17233,
											"end": 17248,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17280,
											"end": 17285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17285,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17262,
											"end": 17377,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17262,
											"end": 17377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 17262,
											"end": 17377,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17337,
											"end": 17341,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17343,
											"end": 17354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17356,
											"end": 17361,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17312,
											"end": 17362,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17312,
											"end": 17362,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17312,
											"end": 17362,
											"name": "PUSH",
											"source": 0,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17312,
											"end": 17362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17312,
											"end": 17362,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17312,
											"end": 17362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17312,
											"end": 17362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17312,
											"end": 17362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 17312,
											"end": 17362,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17312,
											"end": 17362,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17312,
											"end": 17362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17312,
											"end": 17362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17312,
											"end": 17362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 17312,
											"end": 17362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17312,
											"end": 17362,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 17312,
											"end": 17362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17312,
											"end": 17362,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17312,
											"end": 17362,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17312,
											"end": 17362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17312,
											"end": 17362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17312,
											"end": 17362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17312,
											"end": 17362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17312,
											"end": 17362,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17262,
											"end": 17377,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 17262,
											"end": 17377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17529,
											"end": 17534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17515,
											"end": 17526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17515,
											"end": 17534,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17497,
											"end": 17512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17507,
											"end": 17511,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17512,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17497,
											"end": 17512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17512,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17497,
											"end": 17512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17512,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17497,
											"end": 17512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17512,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17497,
											"end": 17512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17497,
											"end": 17512,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17534,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17197,
											"end": 17559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17019,
											"end": 17559,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 17019,
											"end": 17559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17587,
											"end": 17588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17573,
											"end": 17589,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17573,
											"end": 17589,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17573,
											"end": 17575,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17573,
											"end": 17589,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17573,
											"end": 17589,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17573,
											"end": 17589,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17569,
											"end": 17994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 17569,
											"end": 17994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17752,
											"end": 17757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17736,
											"end": 17748,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17736,
											"end": 17748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17736,
											"end": 17757,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17736,
											"end": 17757,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17736,
											"end": 17757,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17736,
											"end": 17757,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17736,
											"end": 17757,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17736,
											"end": 17757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17736,
											"end": 17757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17736,
											"end": 17757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17736,
											"end": 17757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17736,
											"end": 17757,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17736,
											"end": 17757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17569,
											"end": 17994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 17569,
											"end": 17994,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17569,
											"end": 17994,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 17569,
											"end": 17994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17947,
											"end": 17960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17957,
											"end": 17959,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17947,
											"end": 17960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17947,
											"end": 17960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17960,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17947,
											"end": 17960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17960,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17947,
											"end": 17960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17947,
											"end": 17960,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17947,
											"end": 17969,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17969,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17969,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17969,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17569,
											"end": 17994,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 17569,
											"end": 17994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18024,
											"end": 18026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18034,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18009,
											"end": 18034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18018,
											"end": 18022,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18034,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18009,
											"end": 18034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18034,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 18028,
											"end": 18033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18009,
											"end": 18034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 18009,
											"end": 18034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 18009,
											"end": 18034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18034,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 18009,
											"end": 18034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18009,
											"end": 18034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18034,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18009,
											"end": 18034,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16934,
											"end": 18041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16934,
											"end": 18041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16934,
											"end": 18041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16934,
											"end": 18041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26946,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 26840,
											"end": 26946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26906,
											"end": 26914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 26906,
											"end": 26912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 26906,
											"end": 26914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26906,
											"end": 26914,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 26906,
											"end": 26914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26898,
											"end": 26939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 26898,
											"end": 26939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26898,
											"end": 26939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26898,
											"end": 26939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26898,
											"end": 26939,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26898,
											"end": 26939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26898,
											"end": 26939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26898,
											"end": 26939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26898,
											"end": 26939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26898,
											"end": 26939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 26898,
											"end": 26939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26898,
											"end": 26939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 26898,
											"end": 26939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26898,
											"end": 26939,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 26898,
											"end": 26939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26898,
											"end": 26939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26898,
											"end": 26939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26898,
											"end": 26939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26898,
											"end": 26939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26898,
											"end": 26939,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26898,
											"end": 26939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26898,
											"end": 26939,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26898,
											"end": 26939,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 26898,
											"end": 26939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26662,
											"end": 26768,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 26662,
											"end": 26768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 26732,
											"end": 26738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 26732,
											"end": 26740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26740,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 26732,
											"end": 26740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26731,
											"end": 26740,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 26723,
											"end": 26761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26723,
											"end": 26761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26761,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26723,
											"end": 26761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26761,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26723,
											"end": 26761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 26723,
											"end": 26761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 26723,
											"end": 26761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26761,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 26723,
											"end": 26761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26723,
											"end": 26761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26761,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26761,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26723,
											"end": 26761,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 26723,
											"end": 26761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26662,
											"end": 26768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 5503,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5416,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5633,
											"end": 5637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 5684,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 5899,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 6044,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5990,
											"end": 6107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6117,
											"end": 6235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6296,
											"end": 6373,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6286,
											"end": 6374,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6393,
											"end": 6397,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6383,
											"end": 6398,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6421,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6564,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6644,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6667,
											"end": 6705,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 6720,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6485,
											"end": 6754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6760,
											"end": 6939,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 6760,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6931,
											"name": "PUSH",
											"source": 1,
											"value": "4275726E20616D6F756E74206578636565647320616C6C6F77616E6365000000"
										},
										{
											"begin": 6896,
											"end": 6897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6894,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6877,
											"end": 6932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6760,
											"end": 6939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6760,
											"end": 6939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 7311,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 6945,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7087,
											"end": 7090,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7108,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 7172,
											"end": 7174,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 7167,
											"end": 7170,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7108,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 7108,
											"end": 7175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7108,
											"end": 7175,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 7108,
											"end": 7175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7175,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 7273,
											"end": 7276,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 7184,
											"end": 7277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7277,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 7184,
											"end": 7277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7304,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7297,
											"end": 7300,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7293,
											"end": 7305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7286,
											"end": 7305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7286,
											"end": 7305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 7311,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 7311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 7311,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 7311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7317,
											"end": 7736,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 7317,
											"end": 7736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7487,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7521,
											"end": 7523,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7510,
											"end": 7519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7506,
											"end": 7524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7564,
											"end": 7568,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7580,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7556,
											"end": 7557,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7545,
											"end": 7554,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7541,
											"end": 7558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7534,
											"end": 7581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7598,
											"end": 7729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 7724,
											"end": 7728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7598,
											"end": 7729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 7598,
											"end": 7729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7598,
											"end": 7729,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 7598,
											"end": 7729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7590,
											"end": 7729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7590,
											"end": 7729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7317,
											"end": 7736,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7317,
											"end": 7736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7317,
											"end": 7736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7317,
											"end": 7736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7742,
											"end": 7922,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 7742,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7790,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7787,
											"end": 7788,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7780,
											"end": 7868,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7891,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7884,
											"end": 7885,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7877,
											"end": 7892,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7911,
											"end": 7915,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7908,
											"end": 7909,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7901,
											"end": 7916,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 8122,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 7928,
											"end": 8122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7968,
											"end": 7972,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7988,
											"end": 8008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 8006,
											"end": 8007,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7988,
											"end": 8008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 7988,
											"end": 8008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7988,
											"end": 8008,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 7988,
											"end": 8008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7983,
											"end": 8008,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7983,
											"end": 8008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8022,
											"end": 8042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 8040,
											"end": 8041,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8022,
											"end": 8042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 8022,
											"end": 8042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8022,
											"end": 8042,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 8022,
											"end": 8042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8017,
											"end": 8042,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8017,
											"end": 8042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8066,
											"end": 8067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8063,
											"end": 8064,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8059,
											"end": 8068,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8051,
											"end": 8068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8051,
											"end": 8068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8090,
											"end": 8091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8084,
											"end": 8088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8081,
											"end": 8092,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8078,
											"end": 8115,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8078,
											"end": 8115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 8078,
											"end": 8115,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8095,
											"end": 8113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 8095,
											"end": 8113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 8095,
											"end": 8113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8095,
											"end": 8113,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 8095,
											"end": 8113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8078,
											"end": 8115,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 8078,
											"end": 8115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 8122,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 8122,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 8122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 8122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 8122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8128,
											"end": 8570,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 8128,
											"end": 8570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8315,
											"end": 8317,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8304,
											"end": 8313,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8300,
											"end": 8318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8292,
											"end": 8318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8292,
											"end": 8318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8328,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 8396,
											"end": 8397,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8385,
											"end": 8394,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8381,
											"end": 8398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8378,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8328,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 8328,
											"end": 8399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8328,
											"end": 8399,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 8328,
											"end": 8399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8409,
											"end": 8481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 8477,
											"end": 8479,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8466,
											"end": 8475,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8462,
											"end": 8480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8459,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8409,
											"end": 8481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 8409,
											"end": 8481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8409,
											"end": 8481,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 8409,
											"end": 8481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8491,
											"end": 8563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 8559,
											"end": 8561,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8548,
											"end": 8557,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8544,
											"end": 8562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8535,
											"end": 8541,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8491,
											"end": 8563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 8491,
											"end": 8563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8491,
											"end": 8563,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 8491,
											"end": 8563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8128,
											"end": 8570,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8128,
											"end": 8570,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8128,
											"end": 8570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8128,
											"end": 8570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8128,
											"end": 8570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8128,
											"end": 8570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8128,
											"end": 8570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8576,
											"end": 8767,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 8576,
											"end": 8767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8616,
											"end": 8619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8635,
											"end": 8655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 8653,
											"end": 8654,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8635,
											"end": 8655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 8635,
											"end": 8655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8635,
											"end": 8655,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 8635,
											"end": 8655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8630,
											"end": 8655,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8630,
											"end": 8655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8669,
											"end": 8689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 8687,
											"end": 8688,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8669,
											"end": 8689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 8669,
											"end": 8689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8669,
											"end": 8689,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 8669,
											"end": 8689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8664,
											"end": 8689,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8664,
											"end": 8689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8712,
											"end": 8713,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8709,
											"end": 8710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8705,
											"end": 8714,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 8714,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 8714,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8736,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8730,
											"end": 8731,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8727,
											"end": 8737,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8724,
											"end": 8760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8724,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 8724,
											"end": 8760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8740,
											"end": 8758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 8740,
											"end": 8758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 8740,
											"end": 8758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8740,
											"end": 8758,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 8740,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8724,
											"end": 8760,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 8724,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8576,
											"end": 8767,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8576,
											"end": 8767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8576,
											"end": 8767,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8576,
											"end": 8767,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8576,
											"end": 8767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8773,
											"end": 8943,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 8773,
											"end": 8943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8913,
											"end": 8935,
											"name": "PUSH",
											"source": 1,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 8909,
											"end": 8910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8901,
											"end": 8907,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8897,
											"end": 8911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8890,
											"end": 8936,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8773,
											"end": 8943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8773,
											"end": 8943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8949,
											"end": 9315,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 8949,
											"end": 9315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9091,
											"end": 9094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9112,
											"end": 9179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 9176,
											"end": 9178,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 9171,
											"end": 9174,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9112,
											"end": 9179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 9112,
											"end": 9179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9112,
											"end": 9179,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 9112,
											"end": 9179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9188,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 9277,
											"end": 9280,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9188,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 9188,
											"end": 9281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9188,
											"end": 9281,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 9188,
											"end": 9281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9306,
											"end": 9308,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9301,
											"end": 9304,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9297,
											"end": 9309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9290,
											"end": 9309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9290,
											"end": 9309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8949,
											"end": 9315,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8949,
											"end": 9315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8949,
											"end": 9315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8949,
											"end": 9315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9321,
											"end": 9740,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 9321,
											"end": 9740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9491,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9525,
											"end": 9527,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9514,
											"end": 9523,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9510,
											"end": 9528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9502,
											"end": 9528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9502,
											"end": 9528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9574,
											"end": 9583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9568,
											"end": 9572,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9564,
											"end": 9584,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9560,
											"end": 9561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9549,
											"end": 9558,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9545,
											"end": 9562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9538,
											"end": 9585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9602,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 9728,
											"end": 9732,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9602,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 9602,
											"end": 9733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9602,
											"end": 9733,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 9602,
											"end": 9733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9594,
											"end": 9733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9594,
											"end": 9733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9321,
											"end": 9740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9321,
											"end": 9740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9321,
											"end": 9740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9321,
											"end": 9740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9912,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 9746,
											"end": 9912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9886,
											"end": 9904,
											"name": "PUSH",
											"source": 1,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 9882,
											"end": 9883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9874,
											"end": 9880,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9870,
											"end": 9884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9863,
											"end": 9905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9918,
											"end": 10284,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 9918,
											"end": 10284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10060,
											"end": 10063,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10081,
											"end": 10148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 10145,
											"end": 10147,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 10140,
											"end": 10143,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10081,
											"end": 10148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 10081,
											"end": 10148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10081,
											"end": 10148,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 10081,
											"end": 10148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10148,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10157,
											"end": 10250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 10246,
											"end": 10249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10157,
											"end": 10250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 10157,
											"end": 10250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10157,
											"end": 10250,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 10157,
											"end": 10250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10275,
											"end": 10277,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10270,
											"end": 10273,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10266,
											"end": 10278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10259,
											"end": 10278,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10259,
											"end": 10278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9918,
											"end": 10284,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9918,
											"end": 10284,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9918,
											"end": 10284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9918,
											"end": 10284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10290,
											"end": 10709,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 10290,
											"end": 10709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10456,
											"end": 10460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10494,
											"end": 10496,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10483,
											"end": 10492,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10479,
											"end": 10497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10471,
											"end": 10497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10471,
											"end": 10497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10543,
											"end": 10552,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10533,
											"end": 10553,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10529,
											"end": 10530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10518,
											"end": 10527,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10507,
											"end": 10554,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10571,
											"end": 10702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 10697,
											"end": 10701,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10571,
											"end": 10702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 10571,
											"end": 10702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10571,
											"end": 10702,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 10571,
											"end": 10702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10563,
											"end": 10702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10563,
											"end": 10702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10290,
											"end": 10709,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10290,
											"end": 10709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10290,
											"end": 10709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10290,
											"end": 10709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/MyToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken_flattened.sol\":\"CustomToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyToken_flattened.sol\":{\"keccak256\":\"0xfaa2e9c5aa280354d967debfbebd05c54f7daedc0f7129cbeb5a040ebfc35067\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b70465f08d2ec2ff24a2bcf62063f040b3cbd40c8457a9e270b2c995966984a\",\"dweb:/ipfs/QmR6o8bYzoPoLc27ZpYeGMXJ7wXdWXwCuyX87usUCNDA72\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 280,
								"contract": "contracts/MyToken_flattened.sol:CustomToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 286,
								"contract": "contracts/MyToken_flattened.sol:CustomToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 288,
								"contract": "contracts/MyToken_flattened.sol:CustomToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 290,
								"contract": "contracts/MyToken_flattened.sol:CustomToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 292,
								"contract": "contracts/MyToken_flattened.sol:CustomToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 778,
								"contract": "contracts/MyToken_flattened.sol:CustomToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 933,
								"contract": "contracts/MyToken_flattened.sol:CustomToken",
								"label": "_paused",
								"offset": 20,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 1032,
								"contract": "contracts/MyToken_flattened.sol:CustomToken",
								"label": "_decimals",
								"offset": 21,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken_flattened.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyToken_flattened.sol\":{\"keccak256\":\"0xfaa2e9c5aa280354d967debfbebd05c54f7daedc0f7129cbeb5a040ebfc35067\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b70465f08d2ec2ff24a2bcf62063f040b3cbd40c8457a9e270b2c995966984a\",\"dweb:/ipfs/QmR6o8bYzoPoLc27ZpYeGMXJ7wXdWXwCuyX87usUCNDA72\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 280,
								"contract": "contracts/MyToken_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 286,
								"contract": "contracts/MyToken_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 288,
								"contract": "contracts/MyToken_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 290,
								"contract": "contracts/MyToken_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 292,
								"contract": "contracts/MyToken_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyToken_flattened.sol\":{\"keccak256\":\"0xfaa2e9c5aa280354d967debfbebd05c54f7daedc0f7129cbeb5a040ebfc35067\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b70465f08d2ec2ff24a2bcf62063f040b3cbd40c8457a9e270b2c995966984a\",\"dweb:/ipfs/QmR6o8bYzoPoLc27ZpYeGMXJ7wXdWXwCuyX87usUCNDA72\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken_flattened.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyToken_flattened.sol\":{\"keccak256\":\"0xfaa2e9c5aa280354d967debfbebd05c54f7daedc0f7129cbeb5a040ebfc35067\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b70465f08d2ec2ff24a2bcf62063f040b3cbd40c8457a9e270b2c995966984a\",\"dweb:/ipfs/QmR6o8bYzoPoLc27ZpYeGMXJ7wXdWXwCuyX87usUCNDA72\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyToken_flattened.sol\":{\"keccak256\":\"0xfaa2e9c5aa280354d967debfbebd05c54f7daedc0f7129cbeb5a040ebfc35067\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b70465f08d2ec2ff24a2bcf62063f040b3cbd40c8457a9e270b2c995966984a\",\"dweb:/ipfs/QmR6o8bYzoPoLc27ZpYeGMXJ7wXdWXwCuyX87usUCNDA72\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyToken_flattened.sol\":{\"keccak256\":\"0xfaa2e9c5aa280354d967debfbebd05c54f7daedc0f7129cbeb5a040ebfc35067\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b70465f08d2ec2ff24a2bcf62063f040b3cbd40c8457a9e270b2c995966984a\",\"dweb:/ipfs/QmR6o8bYzoPoLc27ZpYeGMXJ7wXdWXwCuyX87usUCNDA72\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyToken_flattened.sol\":{\"keccak256\":\"0xfaa2e9c5aa280354d967debfbebd05c54f7daedc0f7129cbeb5a040ebfc35067\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b70465f08d2ec2ff24a2bcf62063f040b3cbd40c8457a9e270b2c995966984a\",\"dweb:/ipfs/QmR6o8bYzoPoLc27ZpYeGMXJ7wXdWXwCuyX87usUCNDA72\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken_flattened.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyToken_flattened.sol\":{\"keccak256\":\"0xfaa2e9c5aa280354d967debfbebd05c54f7daedc0f7129cbeb5a040ebfc35067\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b70465f08d2ec2ff24a2bcf62063f040b3cbd40c8457a9e270b2c995966984a\",\"dweb:/ipfs/QmR6o8bYzoPoLc27ZpYeGMXJ7wXdWXwCuyX87usUCNDA72\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 778,
								"contract": "contracts/MyToken_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken_flattened.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyToken_flattened.sol\":{\"keccak256\":\"0xfaa2e9c5aa280354d967debfbebd05c54f7daedc0f7129cbeb5a040ebfc35067\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b70465f08d2ec2ff24a2bcf62063f040b3cbd40c8457a9e270b2c995966984a\",\"dweb:/ipfs/QmR6o8bYzoPoLc27ZpYeGMXJ7wXdWXwCuyX87usUCNDA72\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 933,
								"contract": "contracts/MyToken_flattened.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/MyToken_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/MyToken_flattened.sol",
					"exportedSymbols": {
						"Context": [
							130
						],
						"CustomToken": [
							1155
						],
						"ERC20": [
							772
						],
						"IERC1155Errors": [
							266
						],
						"IERC20": [
							78
						],
						"IERC20Errors": [
							171
						],
						"IERC20Metadata": [
							101
						],
						"IERC721Errors": [
							219
						],
						"Ownable": [
							917
						],
						"Pausable": [
							1023
						]
					},
					"id": 1156,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"id": 2,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "190:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "216:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 78,
							"linearizedBaseContracts": [
								78
							],
							"name": "IERC20",
							"nameLocation": "298:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 4,
										"nodeType": "StructuredDocumentation",
										"src": "311:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 12,
									"name": "Transfer",
									"nameLocation": "480:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "505:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "489:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "489:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "527:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "511:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "539:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "531:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:57:0"
									},
									"src": "474:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "552:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 21,
									"name": "Approval",
									"nameLocation": "711:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "736:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "720:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "759:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "743:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "776:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "768:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:63:0"
									},
									"src": "705:78:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "789:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 27,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "868:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "879:2:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "905:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "905:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "904:9:0"
									},
									"scope": 78,
									"src": "859:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "920:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 35,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1005:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1023:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1015:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1014:17:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1055:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1054:9:0"
									},
									"scope": 78,
									"src": "996:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1070:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 45,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1297:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1314:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1306:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1326:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1318:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1318:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1305:27:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1351:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 42,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1351:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1350:6:0"
									},
									"scope": 78,
									"src": "1288:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1363:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 55,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1641:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1659:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1651:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1666:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1666:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1650:32:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1706:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1706:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1705:9:0"
									},
									"scope": 78,
									"src": "1632:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "1721:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 65,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2402:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2418:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "2410:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2410:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2435:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "2427:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:32:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "2460:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 62,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2460:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2459:6:0"
									},
									"scope": 78,
									"src": "2393:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "2472:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 77,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2783:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2804:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "2796:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2796:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2818:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "2810:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "2822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:41:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "2855:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 74,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:6:0"
									},
									"scope": 78,
									"src": "2774:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1156,
							"src": "288:2575:0",
							"usedErrors": [],
							"usedEvents": [
								12,
								21
							]
						},
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3035:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 81,
										"name": "IERC20",
										"nameLocations": [
											"3178:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 78,
										"src": "3178:6:0"
									},
									"id": 82,
									"nodeType": "InheritanceSpecifier",
									"src": "3178:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "3062:87:0",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 101,
							"linearizedBaseContracts": [
								101,
								78
							],
							"name": "IERC20Metadata",
							"nameLocation": "3160:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "3191:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 88,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3259:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3263:2:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3289:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 85,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3289:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:15:0"
									},
									"scope": 101,
									"src": "3250:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "3310:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3380:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3386:2:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3412:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 91,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3412:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:15:0"
									},
									"scope": 101,
									"src": "3371:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "3433:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 100,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3512:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3520:2:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "3546:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 97,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3546:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3545:7:0"
									},
									"scope": 101,
									"src": "3503:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1156,
							"src": "3150:405:0",
							"usedErrors": [],
							"usedEvents": [
								12,
								21
							]
						},
						{
							"id": 102,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3679:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 103,
								"nodeType": "StructuredDocumentation",
								"src": "3705:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 130,
							"linearizedBaseContracts": [
								130
							],
							"name": "Context",
							"nameLocation": "4220:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "4296:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 108,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4313:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4317:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4313:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 107,
												"id": 110,
												"nodeType": "Return",
												"src": "4306:17:0"
											}
										]
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4243:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4253:2:0"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "4287:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4287:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4286:9:0"
									},
									"scope": 130,
									"src": "4234:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "4403:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 117,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4420:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4424:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4420:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 116,
												"id": 119,
												"nodeType": "Return",
												"src": "4413:15:0"
											}
										]
									},
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4345:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4353:2:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "4387:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4387:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4386:16:0"
									},
									"scope": 130,
									"src": "4336:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "4513:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4530:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 125,
												"id": 127,
												"nodeType": "Return",
												"src": "4523:8:0"
											}
										]
									},
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "4450:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4470:2:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "4504:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4504:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4503:9:0"
									},
									"scope": 130,
									"src": "4441:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1156,
							"src": "4202:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 131,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "4687:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 132,
								"nodeType": "StructuredDocumentation",
								"src": "4713:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 171,
							"linearizedBaseContracts": [
								171
							],
							"name": "IERC20Errors",
							"nameLocation": "4865:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "4884:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 141,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5204:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5237:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "5229:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5229:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5253:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "5245:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5270:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "5262:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5262:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5228:49:0"
									},
									"src": "5198:80:0"
								},
								{
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "5284:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 146,
									"name": "ERC20InvalidSender",
									"nameLocation": "5447:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5474:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "5466:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5465:16:0"
									},
									"src": "5441:41:0"
								},
								{
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "5488:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 151,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "5658:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5687:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "5679:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5678:18:0"
									},
									"src": "5652:45:0"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "5703:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 160,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "6059:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6094:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "6086:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6086:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6111:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "6103:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6103:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6130:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "6122:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6122:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6085:52:0"
									},
									"src": "6053:85:0"
								},
								{
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "6144:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 165,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6329:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6358:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "6350:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6350:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6349:18:0"
									},
									"src": "6323:45:0"
								},
								{
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "6374:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 170,
									"name": "ERC20InvalidSpender",
									"nameLocation": "6580:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6608:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "6600:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:17:0"
									},
									"src": "6574:43:0"
								}
							],
							"scope": 1156,
							"src": "4855:1764:0",
							"usedErrors": [
								141,
								146,
								151,
								160,
								165,
								170
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 172,
								"nodeType": "StructuredDocumentation",
								"src": "6621:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 219,
							"linearizedBaseContracts": [
								219
							],
							"name": "IERC721Errors",
							"nameLocation": "6775:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "6795:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 177,
									"name": "ERC721InvalidOwner",
									"nameLocation": "7025:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7052:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "7044:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7044:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7043:15:0"
									},
									"src": "7019:40:0"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "7065:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 182,
									"name": "ERC721NonexistentToken",
									"nameLocation": "7208:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7239:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "7231:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7231:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7230:17:0"
									},
									"src": "7202:46:0"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "7254:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 191,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "7554:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7583:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "7575:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7575:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7599:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "7591:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7616:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "7608:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7608:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7574:48:0"
									},
									"src": "7548:75:0"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "7629:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 196,
									"name": "ERC721InvalidSender",
									"nameLocation": "7792:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7820:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "7812:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7811:16:0"
									},
									"src": "7786:42:0"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "7834:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 201,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "8004:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "8034:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "8026:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8026:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8025:18:0"
									},
									"src": "7998:46:0"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "8050:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 208,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "8308:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8343:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "8335:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8335:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8361:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "8353:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8353:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8334:35:0"
									},
									"src": "8302:68:0"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "8376:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 213,
									"name": "ERC721InvalidApprover",
									"nameLocation": "8561:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "8591:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "8583:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8583:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8582:18:0"
									},
									"src": "8555:46:0"
								},
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "8607:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 218,
									"name": "ERC721InvalidOperator",
									"nameLocation": "8815:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8845:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "8837:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8837:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8836:18:0"
									},
									"src": "8809:46:0"
								}
							],
							"scope": 1156,
							"src": "6765:2092:0",
							"usedErrors": [
								177,
								182,
								191,
								196,
								201,
								208,
								213,
								218
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 220,
								"nodeType": "StructuredDocumentation",
								"src": "8859:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 266,
							"linearizedBaseContracts": [
								266
							],
							"name": "IERC1155Errors",
							"nameLocation": "9015:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "9036:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 231,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9408:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9443:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "9435:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9435:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "9459:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "9451:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9451:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "9476:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "9468:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9468:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9492:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "9484:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9434:66:0"
									},
									"src": "9402:99:0"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "9507:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 236,
									"name": "ERC1155InvalidSender",
									"nameLocation": "9670:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9699:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "9691:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9691:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9690:16:0"
									},
									"src": "9664:43:0"
								},
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "9713:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 241,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "9883:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "9914:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "9906:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9906:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9905:18:0"
									},
									"src": "9877:47:0"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "9930:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 248,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "10197:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10234:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "10226:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10226:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10252:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "10244:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10244:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10225:33:0"
									},
									"src": "10191:68:0"
								},
								{
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "10265:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 253,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "10450:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "10481:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "10473:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10473:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10472:18:0"
									},
									"src": "10444:47:0"
								},
								{
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "10497:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 258,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "10705:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10736:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "10728:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10728:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10727:18:0"
									},
									"src": "10699:47:0"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "10752:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 265,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "11043:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "11077:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "11069:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "11096:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "11088:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11088:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11068:41:0"
									},
									"src": "11037:73:0"
								}
							],
							"scope": 1156,
							"src": "9005:2107:0",
							"usedErrors": [
								231,
								236,
								241,
								248,
								253,
								258,
								265
							],
							"usedEvents": []
						},
						{
							"id": 267,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11244:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 269,
										"name": "Context",
										"nameLocations": [
											"12059:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 130,
										"src": "12059:7:0"
									},
									"id": 270,
									"nodeType": "InheritanceSpecifier",
									"src": "12059:7:0"
								},
								{
									"baseName": {
										"id": 271,
										"name": "IERC20",
										"nameLocations": [
											"12068:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 78,
										"src": "12068:6:0"
									},
									"id": 272,
									"nodeType": "InheritanceSpecifier",
									"src": "12068:6:0"
								},
								{
									"baseName": {
										"id": 273,
										"name": "IERC20Metadata",
										"nameLocations": [
											"12076:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 101,
										"src": "12076:14:0"
									},
									"id": 274,
									"nodeType": "InheritanceSpecifier",
									"src": "12076:14:0"
								},
								{
									"baseName": {
										"id": 275,
										"name": "IERC20Errors",
										"nameLocations": [
											"12092:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 171,
										"src": "12092:12:0"
									},
									"id": 276,
									"nodeType": "InheritanceSpecifier",
									"src": "12092:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 268,
								"nodeType": "StructuredDocumentation",
								"src": "11274:757:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 772,
							"linearizedBaseContracts": [
								772,
								171,
								101,
								78,
								130
							],
							"name": "ERC20",
							"nameLocation": "12050:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 280,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12155:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 772,
									"src": "12111:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 279,
										"keyName": "account",
										"keyNameLocation": "12127:7:0",
										"keyType": {
											"id": 277,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12119:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12111:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 278,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12138:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 286,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12243:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 772,
									"src": "12171:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 285,
										"keyName": "account",
										"keyNameLocation": "12187:7:0",
										"keyType": {
											"id": 281,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12179:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12171:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 284,
											"keyName": "spender",
											"keyNameLocation": "12214:7:0",
											"keyType": {
												"id": 282,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12206:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12198:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 283,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12225:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 288,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12277:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 772,
									"src": "12261:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 287,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12261:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 290,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12311:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 772,
									"src": "12296:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 289,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12296:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 292,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12337:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 772,
									"src": "12322:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 291,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12322:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "12583:57:0",
										"statements": [
											{
												"expression": {
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 300,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "12593:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 301,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "12601:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12593:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "12593:13:0"
											},
											{
												"expression": {
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 304,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "12616:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 305,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "12626:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12616:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "12616:17:0"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "12351:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 309,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12553:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "12539:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 294,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12539:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12574:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "12560:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 296,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12560:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12538:44:0"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12583:0:0"
									},
									"scope": 772,
									"src": "12527:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										88
									],
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "12765:29:0",
										"statements": [
											{
												"expression": {
													"id": 315,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 290,
													"src": "12782:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 314,
												"id": 316,
												"nodeType": "Return",
												"src": "12775:12:0"
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "12646:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12714:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12718:2:0"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "12750:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 312,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12750:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12749:15:0"
									},
									"scope": 772,
									"src": "12705:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										94
									],
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "12969:31:0",
										"statements": [
											{
												"expression": {
													"id": 324,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 292,
													"src": "12986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 323,
												"id": 325,
												"nodeType": "Return",
												"src": "12979:14:0"
											}
										]
									},
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "12800:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "12916:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12922:2:0"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "12954:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12954:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12953:15:0"
									},
									"scope": 772,
									"src": "12907:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										100
									],
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "13689:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13706:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "13699:9:0"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "13006:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13642:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13650:2:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "13682:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 330,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13682:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13681:7:0"
									},
									"scope": 772,
									"src": "13633:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										27
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "13836:36:0",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 288,
													"src": "13853:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "13846:19:0"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "13721:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13784:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13795:2:0"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "13827:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13826:9:0"
									},
									"scope": 772,
									"src": "13775:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										35
									],
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "14004:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 353,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "14021:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 355,
													"indexExpression": {
														"id": 354,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "14031:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14021:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 352,
												"id": 356,
												"nodeType": "Return",
												"src": "14014:25:0"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "13878:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13939:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13957:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "13949:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13949:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13948:17:0"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "13995:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13995:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13994:9:0"
									},
									"scope": 772,
									"src": "13930:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										45
									],
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "14316:103:0",
										"statements": [
											{
												"assignments": [
													369
												],
												"declarations": [
													{
														"constant": false,
														"id": 369,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14334:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 381,
														"src": "14326:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 368,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14326:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 372,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 370,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "14342:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14342:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14326:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "14374:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "14381:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "14385:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 373,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "14364:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14364:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "14364:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14408:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 367,
												"id": 380,
												"nodeType": "Return",
												"src": "14401:11:0"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "14052:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14250:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14267:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "14259:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14279:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "14271:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14258:27:0"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "14310:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 365,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14310:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14309:6:0"
									},
									"scope": 772,
									"src": "14241:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										55
									],
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "14566:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 392,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "14583:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 394,
														"indexExpression": {
															"id": 393,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "14595:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14583:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 396,
													"indexExpression": {
														"id": 395,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "14602:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14583:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 391,
												"id": 397,
												"nodeType": "Return",
												"src": "14576:34:0"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "14425:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14486:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14504:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "14496:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14496:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "14511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14495:32:0"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "14557:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14557:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14556:9:0"
									},
									"scope": 772,
									"src": "14477:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										65
									],
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "15003:107:0",
										"statements": [
											{
												"assignments": [
													410
												],
												"declarations": [
													{
														"constant": false,
														"id": 410,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "15021:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 422,
														"src": "15013:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 409,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15013:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 413,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 411,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "15029:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15029:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15013:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 415,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "15060:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "15067:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 417,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "15076:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 414,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															663,
															723
														],
														"referencedDeclaration": 663,
														"src": "15051:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15051:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "15051:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15099:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 408,
												"id": 421,
												"nodeType": "Return",
												"src": "15092:11:0"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "14623:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "14933:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14949:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "14941:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14941:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14966:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "14958:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14958:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14940:32:0"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "14997:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14997:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14996:6:0"
									},
									"scope": 772,
									"src": "14924:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										77
									],
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "15795:151:0",
										"statements": [
											{
												"assignments": [
													436
												],
												"declarations": [
													{
														"constant": false,
														"id": 436,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "15813:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 454,
														"src": "15805:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 435,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15805:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 439,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 437,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "15823:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15823:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15805:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 441,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "15861:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "15867:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "15876:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 440,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "15845:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15845:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "15845:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 447,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "15902:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "15908:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 449,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "15912:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 446,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "15892:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15892:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "15892:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15935:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 434,
												"id": 453,
												"nodeType": "Return",
												"src": "15928:11:0"
											}
										]
									},
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "15116:581:0",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15711:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15732:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "15724:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15746:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "15738:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15758:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "15750:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15723:41:0"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "15789:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 432,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15789:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15788:6:0"
									},
									"scope": 772,
									"src": "15702:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "16388:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 465,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "16402:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16418:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16410:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 466,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16410:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 469,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16410:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16402:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 479,
												"nodeType": "IfStatement",
												"src": "16398:86:0",
												"trueBody": {
													"id": 478,
													"nodeType": "Block",
													"src": "16422:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 474,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16470:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16462:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 472,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16462:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16462:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 471,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "16443:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16443:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 477,
															"nodeType": "RevertStatement",
															"src": "16436:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 480,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "16497:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16511:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16503:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 481,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16503:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16503:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16497:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 494,
												"nodeType": "IfStatement",
												"src": "16493:86:0",
												"trueBody": {
													"id": 493,
													"nodeType": "Block",
													"src": "16515:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 489,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16565:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16557:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 487,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16557:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16557:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 486,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 151,
																	"src": "16536:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16536:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 492,
															"nodeType": "RevertStatement",
															"src": "16529:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 496,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "16596:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "16602:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "16606:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 495,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "16588:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16588:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 500,
												"nodeType": "ExpressionStatement",
												"src": "16588:24:0"
											}
										]
									},
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "15952:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16328:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16346:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "16338:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16338:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16360:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "16352:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16352:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16372:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "16364:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16364:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16337:41:0"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16388:0:0"
									},
									"scope": 772,
									"src": "16319:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "17009:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 512,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "17023:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17039:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17031:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 513,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17031:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17031:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17023:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "17197:362:0",
													"statements": [
														{
															"assignments": [
																524
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 524,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17219:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 549,
																	"src": "17211:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 523,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17211:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 528,
															"initialValue": {
																"baseExpression": {
																	"id": 525,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 280,
																	"src": "17233:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 527,
																"indexExpression": {
																	"id": 526,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "17243:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17233:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17211:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 529,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "17266:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 530,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "17280:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17266:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 539,
															"nodeType": "IfStatement",
															"src": "17262:115:0",
															"trueBody": {
																"id": 538,
																"nodeType": "Block",
																"src": "17287:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 533,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 505,
																					"src": "17337:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 534,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 524,
																					"src": "17343:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 535,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 509,
																					"src": "17356:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 532,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 141,
																				"src": "17312:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17312:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 537,
																		"nodeType": "RevertStatement",
																		"src": "17305:57:0"
																	}
																]
															}
														},
														{
															"id": 548,
															"nodeType": "UncheckedBlock",
															"src": "17390:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 540,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 280,
																				"src": "17497:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 542,
																			"indexExpression": {
																				"id": 541,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 505,
																				"src": "17507:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17497:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 543,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "17515:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 544,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 509,
																				"src": "17529:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17515:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17497:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 547,
																	"nodeType": "ExpressionStatement",
																	"src": "17497:37:0"
																}
															]
														}
													]
												},
												"id": 550,
												"nodeType": "IfStatement",
												"src": "17019:540:0",
												"trueBody": {
													"id": 522,
													"nodeType": "Block",
													"src": "17043:148:0",
													"statements": [
														{
															"expression": {
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 518,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "17159:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 519,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "17175:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17159:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 521,
															"nodeType": "ExpressionStatement",
															"src": "17159:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 551,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "17573:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17587:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17579:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 552,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17579:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 555,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17579:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17573:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "17788:206:0",
													"statements": [
														{
															"id": 569,
															"nodeType": "UncheckedBlock",
															"src": "17802:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 563,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 280,
																				"src": "17947:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 565,
																			"indexExpression": {
																				"id": 564,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 507,
																				"src": "17957:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17947:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 566,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 509,
																			"src": "17964:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17947:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 568,
																	"nodeType": "ExpressionStatement",
																	"src": "17947:22:0"
																}
															]
														}
													]
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "17569:425:0",
												"trueBody": {
													"id": 562,
													"nodeType": "Block",
													"src": "17591:191:0",
													"statements": [
														{
															"id": 561,
															"nodeType": "UncheckedBlock",
															"src": "17605:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 557,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 288,
																			"src": "17736:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 558,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 509,
																			"src": "17752:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17736:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 560,
																	"nodeType": "ExpressionStatement",
																	"src": "17736:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 573,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "18018:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "18024:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 575,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "18028:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 572,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "18009:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18009:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 577,
												"nodeType": "EmitStatement",
												"src": "18004:30:0"
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "16625:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "16943:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16959:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "16951:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16951:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16973:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "16965:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16965:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16985:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "16977:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16977:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16950:41:0"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17009:0:0"
									},
									"scope": 772,
									"src": "16934:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "18440:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 587,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "18454:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18473:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18465:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 588,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18465:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18465:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18454:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 601,
												"nodeType": "IfStatement",
												"src": "18450:91:0",
												"trueBody": {
													"id": 600,
													"nodeType": "Block",
													"src": "18477:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 596,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18527:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18519:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 594,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18519:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18519:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 593,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 151,
																	"src": "18498:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18498:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 599,
															"nodeType": "RevertStatement",
															"src": "18491:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18566:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18558:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 603,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18558:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18558:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "18570:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 608,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "18579:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 602,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "18550:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18550:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "18550:35:0"
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "18047:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18393:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18407:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "18399:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18399:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18424:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "18416:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18416:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18398:32:0"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18440:0:0"
									},
									"scope": 772,
									"src": "18384:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "18966:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 620,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "18980:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18999:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18991:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 621,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18991:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18991:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18980:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 634,
												"nodeType": "IfStatement",
												"src": "18976:89:0",
												"trueBody": {
													"id": 633,
													"nodeType": "Block",
													"src": "19003:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 629,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19051:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19043:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 627,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "19043:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19043:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 626,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "19024:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19024:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 632,
															"nodeType": "RevertStatement",
															"src": "19017:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 636,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "19082:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19099:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19091:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 637,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19091:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19091:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 641,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "19103:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 635,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "19074:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19074:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "19074:35:0"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "18598:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "18919:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18933:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "18925:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18925:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18950:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "18942:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18942:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18924:32:0"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18966:0:0"
									},
									"scope": 772,
									"src": "18910:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "19726:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 656,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "19745:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "19752:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 658,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "19761:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19768:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 655,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															663,
															723
														],
														"referencedDeclaration": 723,
														"src": "19736:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19736:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "19736:37:0"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "19122:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19661:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19678:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "19670:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19670:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19693:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "19685:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19685:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19710:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "19702:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19702:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19669:47:0"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19726:0:0"
									},
									"scope": 772,
									"src": "19652:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "20725:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 675,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "20739:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20756:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20748:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 676,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20748:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20748:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20739:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 689,
												"nodeType": "IfStatement",
												"src": "20735:89:0",
												"trueBody": {
													"id": 688,
													"nodeType": "Block",
													"src": "20760:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 684,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20810:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20802:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 682,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20802:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20802:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 681,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "20781:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20781:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 687,
															"nodeType": "RevertStatement",
															"src": "20774:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 690,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "20837:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20856:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20848:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 691,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20848:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20848:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20837:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 704,
												"nodeType": "IfStatement",
												"src": "20833:90:0",
												"trueBody": {
													"id": 703,
													"nodeType": "Block",
													"src": "20860:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 699,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20909:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20901:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 697,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20901:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20901:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 696,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 170,
																	"src": "20881:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20881:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 702,
															"nodeType": "RevertStatement",
															"src": "20874:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 705,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "20932:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 708,
															"indexExpression": {
																"id": 706,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "20944:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20932:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 709,
														"indexExpression": {
															"id": 707,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "20951:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20932:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 710,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "20962:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20932:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "20932:35:0"
											},
											{
												"condition": {
													"id": 713,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 672,
													"src": "20981:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 721,
												"nodeType": "IfStatement",
												"src": "20977:76:0",
												"trueBody": {
													"id": 720,
													"nodeType": "Block",
													"src": "20992:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 715,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 666,
																		"src": "21020:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 716,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 668,
																		"src": "21027:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 717,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 670,
																		"src": "21036:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 714,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "21011:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21011:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 719,
															"nodeType": "EmitStatement",
															"src": "21006:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "19786:836:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20636:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20653:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "20645:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20668:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "20660:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20660:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20685:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "20677:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20677:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "20697:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "20692:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 671,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20692:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20644:63:0"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20725:0:0"
									},
									"scope": 772,
									"src": "20627:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 770,
										"nodeType": "Block",
										"src": "21430:388:0",
										"statements": [
											{
												"assignments": [
													734
												],
												"declarations": [
													{
														"constant": false,
														"id": 734,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "21448:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 770,
														"src": "21440:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 733,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21440:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 739,
												"initialValue": {
													"arguments": [
														{
															"id": 736,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "21477:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 737,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "21484:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 735,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "21467:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21467:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21440:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 740,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "21506:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21531:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 742,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21531:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 741,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21526:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21526:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 745,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "21540:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "21526:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21506:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 769,
												"nodeType": "IfStatement",
												"src": "21502:310:0",
												"trueBody": {
													"id": 768,
													"nodeType": "Block",
													"src": "21545:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 747,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 734,
																	"src": "21563:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 748,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 730,
																	"src": "21582:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21563:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 757,
															"nodeType": "IfStatement",
															"src": "21559:130:0",
															"trueBody": {
																"id": 756,
																"nodeType": "Block",
																"src": "21589:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 751,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 728,
																					"src": "21641:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 752,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 734,
																					"src": "21650:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 753,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 730,
																					"src": "21668:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 750,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 160,
																				"src": "21614:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21614:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 755,
																		"nodeType": "RevertStatement",
																		"src": "21607:67:0"
																	}
																]
															}
														},
														{
															"id": 767,
															"nodeType": "UncheckedBlock",
															"src": "21702:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 759,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 726,
																				"src": "21739:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 760,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 728,
																				"src": "21746:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 761,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 734,
																					"src": "21755:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 762,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 730,
																					"src": "21774:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21755:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 764,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21781:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 758,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				663,
																				723
																			],
																			"referencedDeclaration": 723,
																			"src": "21730:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21730:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 766,
																	"nodeType": "ExpressionStatement",
																	"src": "21730:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "21065:271:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21350:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21374:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "21366:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21366:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21389:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "21381:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21381:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21406:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "21398:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21365:47:0"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21430:0:0"
									},
									"scope": 772,
									"src": "21341:477:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1156,
							"src": "12032:9788:0",
							"usedErrors": [
								141,
								146,
								151,
								160,
								165,
								170
							],
							"usedEvents": [
								12,
								21
							]
						},
						{
							"id": 773,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "21946:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 775,
										"name": "Context",
										"nameLocations": [
											"22490:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 130,
										"src": "22490:7:0"
									},
									"id": 776,
									"nodeType": "InheritanceSpecifier",
									"src": "22490:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 774,
								"nodeType": "StructuredDocumentation",
								"src": "21973:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 917,
							"linearizedBaseContracts": [
								917,
								130
							],
							"name": "Ownable",
							"nameLocation": "22479:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 778,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "22520:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "22504:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 777,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22504:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "22533:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 783,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "22629:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "22656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22655:17:0"
									},
									"src": "22623:50:0"
								},
								{
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "22679:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 788,
									"name": "OwnableInvalidOwner",
									"nameLocation": "22772:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22800:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "22792:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22792:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22791:15:0"
									},
									"src": "22766:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 794,
									"name": "OwnershipTransferred",
									"nameLocation": "22819:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "22856:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "22840:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22840:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "22887:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "22871:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22839:57:0"
									},
									"src": "22813:84:0"
								},
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "23057:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 800,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "23071:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23095:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23087:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 801,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "23087:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23087:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23071:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 814,
												"nodeType": "IfStatement",
												"src": "23067:95:0",
												"trueBody": {
													"id": 813,
													"nodeType": "Block",
													"src": "23099:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 809,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23148:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "23140:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 807,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "23140:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23140:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 806,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "23120:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23120:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 812,
															"nodeType": "RevertStatement",
															"src": "23113:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 816,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "23190:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 815,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "23171:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23171:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "23171:32:0"
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "22903:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 820,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "23043:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "23035:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23034:22:0"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23057:0:0"
									},
									"scope": 917,
									"src": "23023:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "23319:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 823,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "23329:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23329:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 825,
												"nodeType": "ExpressionStatement",
												"src": "23329:13:0"
											},
											{
												"id": 826,
												"nodeType": "PlaceholderStatement",
												"src": "23352:1:0"
											}
										]
									},
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "23216:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 828,
									"name": "onlyOwner",
									"nameLocation": "23307:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23316:2:0"
									},
									"src": "23298:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "23491:30:0",
										"statements": [
											{
												"expression": {
													"id": 834,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 778,
													"src": "23508:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 833,
												"id": 835,
												"nodeType": "Return",
												"src": "23501:13:0"
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "23366:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "23445:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23450:2:0"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "23482:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23482:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23481:9:0"
									},
									"scope": 917,
									"src": "23436:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "23639:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 841,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "23653:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 842,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23653:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 843,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "23664:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23664:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23653:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 852,
												"nodeType": "IfStatement",
												"src": "23649:101:0",
												"trueBody": {
													"id": 851,
													"nodeType": "Block",
													"src": "23678:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 847,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 112,
																			"src": "23726:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23726:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 846,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "23699:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23699:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 850,
															"nodeType": "RevertStatement",
															"src": "23692:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "23527:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "23603:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23614:2:0"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23639:0:0"
									},
									"scope": 917,
									"src": "23594:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "24145:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24182:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24174:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 861,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24174:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24174:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 860,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "24155:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24155:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "24155:30:0"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "23762:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 858,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 857,
												"name": "onlyOwner",
												"nameLocations": [
													"24135:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 828,
												"src": "24135:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24135:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "24100:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24117:2:0"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24145:0:0"
									},
									"scope": 917,
									"src": "24091:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "24411:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 876,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "24425:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24445:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24437:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 877,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "24437:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24437:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24425:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 890,
												"nodeType": "IfStatement",
												"src": "24421:91:0",
												"trueBody": {
													"id": 889,
													"nodeType": "Block",
													"src": "24449:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 885,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24498:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "24490:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 883,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "24490:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24490:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 882,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "24470:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24470:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 888,
															"nodeType": "RevertStatement",
															"src": "24463:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 892,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "24540:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 891,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "24521:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24521:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "24521:28:0"
											}
										]
									},
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "24198:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 874,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 873,
												"name": "onlyOwner",
												"nameLocations": [
													"24401:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 828,
												"src": "24401:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24401:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "24350:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "24376:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "24368:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24368:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24367:18:0"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24411:0:0"
									},
									"scope": 917,
									"src": "24341:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "24773:124:0",
										"statements": [
											{
												"assignments": [
													903
												],
												"declarations": [
													{
														"constant": false,
														"id": 903,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "24791:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 915,
														"src": "24783:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 902,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "24783:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 905,
												"initialValue": {
													"id": 904,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 778,
													"src": "24802:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24783:25:0"
											},
											{
												"expression": {
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 906,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "24818:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 907,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "24827:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24818:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "24818:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 911,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "24871:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 912,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "24881:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 910,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "24850:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24850:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "EmitStatement",
												"src": "24845:45:0"
											}
										]
									},
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "24562:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "24719:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "24746:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "24738:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24737:18:0"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24773:0:0"
									},
									"scope": 917,
									"src": "24710:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1156,
							"src": "22461:2438:0",
							"usedErrors": [
								783,
								788
							],
							"usedEvents": [
								794
							]
						},
						{
							"id": 918,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "25031:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 920,
										"name": "Context",
										"nameLocations": [
											"25527:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 130,
										"src": "25527:7:0"
									},
									"id": 921,
									"nodeType": "InheritanceSpecifier",
									"src": "25527:7:0"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 919,
								"nodeType": "StructuredDocumentation",
								"src": "25057:439:0",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1023,
							"linearizedBaseContracts": [
								1023,
								130
							],
							"name": "Pausable",
							"nameLocation": "25515:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "25541:73:0",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 926,
									"name": "Paused",
									"nameLocation": "25625:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "25640:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "25632:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25632:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25631:17:0"
									},
									"src": "25619:30:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 927,
										"nodeType": "StructuredDocumentation",
										"src": "25655:70:0",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 931,
									"name": "Unpaused",
									"nameLocation": "25736:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "25753:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "25745:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25744:17:0"
									},
									"src": "25730:32:0"
								},
								{
									"constant": false,
									"id": 933,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "25781:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1023,
									"src": "25768:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 932,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "25768:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "25881:32:0",
										"statements": [
											{
												"expression": {
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 937,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "25891:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 938,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25901:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "25891:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 940,
												"nodeType": "ExpressionStatement",
												"src": "25891:15:0"
											}
										]
									},
									"documentation": {
										"id": 934,
										"nodeType": "StructuredDocumentation",
										"src": "25795:67:0",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 942,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25878:2:0"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25881:0:0"
									},
									"scope": 1023,
									"src": "25867:46:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "26124:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 945,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "26134:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26134:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 947,
												"nodeType": "ExpressionStatement",
												"src": "26134:19:0"
											},
											{
												"id": 948,
												"nodeType": "PlaceholderStatement",
												"src": "26163:1:0"
											}
										]
									},
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "25919:175:0",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 950,
									"name": "whenNotPaused",
									"nameLocation": "26108:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26121:2:0"
									},
									"src": "26099:72:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "26371:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 953,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "26381:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26381:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 955,
												"nodeType": "ExpressionStatement",
												"src": "26381:16:0"
											},
											{
												"id": 956,
												"nodeType": "PlaceholderStatement",
												"src": "26407:1:0"
											}
										]
									},
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "26177:167:0",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 958,
									"name": "whenPaused",
									"nameLocation": "26358:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26368:2:0"
									},
									"src": "26349:66:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "26563:31:0",
										"statements": [
											{
												"expression": {
													"id": 964,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 933,
													"src": "26580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 963,
												"id": 965,
												"nodeType": "Return",
												"src": "26573:14:0"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "26421:84:0",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "26519:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26525:2:0"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "26557:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 961,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26557:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26556:6:0"
									},
									"scope": 1023,
									"src": "26510:84:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "26713:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "26731:9:0",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 972,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "26732:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26732:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26742:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 971,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26723:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26723:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "26723:38:0"
											}
										]
									},
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "26600:57:0",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "26671:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26688:2:0"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26713:0:0"
									},
									"scope": 1023,
									"src": "26662:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "26888:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 984,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "26906:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26906:8:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26916:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 983,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26898:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26898:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "26898:41:0"
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "26774:61:0",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "26849:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26863:2:0"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26888:0:0"
									},
									"scope": 1023,
									"src": "26840:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "27130:66:0",
										"statements": [
											{
												"expression": {
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 996,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "27140:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27150:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "27140:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "27140:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1001,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "27176:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27176:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1000,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "27169:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27169:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1004,
												"nodeType": "EmitStatement",
												"src": "27164:25:0"
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "26952:124:0",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 994,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 993,
												"name": "whenNotPaused",
												"nameLocations": [
													"27116:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 950,
												"src": "27116:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27116:13:0"
										}
									],
									"name": "_pause",
									"nameLocation": "27090:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27096:2:0"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27130:0:0"
									},
									"scope": 1023,
									"src": "27081:115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "27376:69:0",
										"statements": [
											{
												"expression": {
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1012,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "27386:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1013,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27396:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "27386:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "27386:15:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1017,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "27425:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27425:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1016,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "27416:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27416:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "EmitStatement",
												"src": "27411:27:0"
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "27202:121:0",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1010,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1009,
												"name": "whenPaused",
												"nameLocations": [
													"27365:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 958,
												"src": "27365:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27365:10:0"
										}
									],
									"name": "_unpause",
									"nameLocation": "27337:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27345:2:0"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27376:0:0"
									},
									"scope": 1023,
									"src": "27328:117:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1156,
							"src": "25497:1950:0",
							"usedErrors": [],
							"usedEvents": [
								926,
								931
							]
						},
						{
							"id": 1024,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "27482:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1025,
										"name": "ERC20",
										"nameLocations": [
											"27612:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 772,
										"src": "27612:5:0"
									},
									"id": 1026,
									"nodeType": "InheritanceSpecifier",
									"src": "27612:5:0"
								},
								{
									"baseName": {
										"id": 1027,
										"name": "Ownable",
										"nameLocations": [
											"27619:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 917,
										"src": "27619:7:0"
									},
									"id": 1028,
									"nodeType": "InheritanceSpecifier",
									"src": "27619:7:0"
								},
								{
									"baseName": {
										"id": 1029,
										"name": "Pausable",
										"nameLocations": [
											"27628:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1023,
										"src": "27628:8:0"
									},
									"id": 1030,
									"nodeType": "InheritanceSpecifier",
									"src": "27628:8:0"
								}
							],
							"canonicalName": "CustomToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1155,
							"linearizedBaseContracts": [
								1155,
								1023,
								917,
								772,
								171,
								101,
								78,
								130
							],
							"name": "CustomToken",
							"nameLocation": "27597:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1032,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "27657:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1155,
									"src": "27643:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1031,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "27643:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1060,
										"nodeType": "Block",
										"src": "27730:90:0",
										"statements": [
											{
												"expression": {
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1043,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "27740:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 1044,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27752:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "27740:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "27740:14:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1048,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "27770:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "27774:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "27770:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "313030",
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27782:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27788:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1054,
																			"name": "_decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1032,
																			"src": "27802:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "27794:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1052,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "27794:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27794:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27788:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27782:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1047,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "27764:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27764:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "27764:49:0"
											}
										]
									},
									"id": 1061,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "446567656e",
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "27694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_906c077abc9a71ae76538cee0d26636e7b6a00e3d54b28138c5ecbb7aec06c8d",
														"typeString": "literal_string \"Degen\""
													},
													"value": "Degen"
												},
												{
													"hexValue": "44474e",
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "27703:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_0b9f9ff197d13cbef1db00fe5f394520d062f532845bf34370b18f7b8fc04c88",
														"typeString": "literal_string \"DGN\""
													},
													"value": "DGN"
												}
											],
											"id": 1037,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1034,
												"name": "ERC20",
												"nameLocations": [
													"27688:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 772,
												"src": "27688:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27688:21:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1039,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "27718:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "27722:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "27718:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1041,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1038,
												"name": "Ownable",
												"nameLocations": [
													"27710:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 917,
												"src": "27710:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27710:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27685:2:0"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27730:0:0"
									},
									"scope": 1155,
									"src": "27674:146:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										336
									],
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "27975:33:0",
										"statements": [
											{
												"expression": {
													"id": 1067,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1032,
													"src": "27992:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1066,
												"id": 1068,
												"nodeType": "Return",
												"src": "27985:16:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "27919:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1063,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "27950:8:0"
									},
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27927:2:0"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "27968:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1064,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "27968:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27967:7:0"
									},
									"scope": 1155,
									"src": "27910:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "28129:34:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1080,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "28145:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1081,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "28149:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1079,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "28139:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28139:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "28139:17:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1077,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1076,
												"name": "onlyOwner",
												"nameLocations": [
													"28119:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 828,
												"src": "28119:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28119:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "28079:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28092:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "28084:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28084:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "28104:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "28096:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28096:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28083:28:0"
									},
									"returnParameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28129:0:0"
									},
									"scope": 1155,
									"src": "28070:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "28263:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1091,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "28279:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "28283:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "28279:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1093,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "28291:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1090,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "28273:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28273:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "28273:25:0"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "28235:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "28248:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "28240:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28240:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28239:16:0"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28263:0:0"
									},
									"scope": 1155,
									"src": "28226:79:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "28455:250:0",
										"statements": [
											{
												"assignments": [
													1107
												],
												"declarations": [
													{
														"constant": false,
														"id": 1107,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "28473:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1135,
														"src": "28465:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1106,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28465:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1113,
												"initialValue": {
													"arguments": [
														{
															"id": 1109,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "28502:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1110,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "28511:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "28515:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "28511:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1108,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "28492:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28492:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28465:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1115,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "28540:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1116,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "28560:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28540:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28568:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7ef2c9f5e580187fcc8d6f6d699a2ef64f075db51a0688aa776a42d0c7069e3f",
																"typeString": "literal_string \"Burn amount exceeds allowance\""
															},
															"value": "Burn amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7ef2c9f5e580187fcc8d6f6d699a2ef64f075db51a0688aa776a42d0c7069e3f",
																"typeString": "literal_string \"Burn amount exceeds allowance\""
															}
														],
														"id": 1114,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28532:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28532:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1120,
												"nodeType": "ExpressionStatement",
												"src": "28532:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1122,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "28619:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1123,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "28628:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "28632:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "28628:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1125,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "28640:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1126,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "28659:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28640:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1121,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															663,
															723
														],
														"referencedDeclaration": 663,
														"src": "28610:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28610:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "28610:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1131,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "28682:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1132,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "28691:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1130,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "28676:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28676:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "28676:22:0"
											}
										]
									},
									"functionSelector": "79cc6790",
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1103,
												"name": "onlyOwner",
												"nameLocations": [
													"28445:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 828,
												"src": "28445:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28445:9:0"
										}
									],
									"name": "burnFrom",
									"nameLocation": "28396:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "28413:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "28405:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "28430:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "28422:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28422:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28404:33:0"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28455:0:0"
									},
									"scope": 1155,
									"src": "28387:318:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1144,
										"nodeType": "Block",
										"src": "28811:25:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1141,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "28821:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28821:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1143,
												"nodeType": "ExpressionStatement",
												"src": "28821:8:0"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1145,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1138,
												"name": "onlyOwner",
												"nameLocations": [
													"28801:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 828,
												"src": "28801:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28801:9:0"
										}
									],
									"name": "pause",
									"nameLocation": "28786:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28791:2:0"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28811:0:0"
									},
									"scope": 1155,
									"src": "28777:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1153,
										"nodeType": "Block",
										"src": "28946:27:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1150,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "28956:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28956:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1152,
												"nodeType": "ExpressionStatement",
												"src": "28956:10:0"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1154,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1148,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1147,
												"name": "onlyOwner",
												"nameLocations": [
													"28936:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 828,
												"src": "28936:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28936:9:0"
										}
									],
									"name": "unpause",
									"nameLocation": "28919:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28926:2:0"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28946:0:0"
									},
									"scope": 1155,
									"src": "28910:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1156,
							"src": "27588:1387:0",
							"usedErrors": [
								141,
								146,
								151,
								160,
								165,
								170,
								783,
								788
							],
							"usedEvents": [
								12,
								21,
								794,
								926,
								931
							]
						}
					],
					"src": "32:28943:0"
				},
				"id": 0
			}
		}
	}
}